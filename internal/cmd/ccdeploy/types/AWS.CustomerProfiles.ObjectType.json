{
    "Arn": "arn:aws:cloudformation:us-east-1::type/resource/AWS-CustomerProfiles-ObjectType",
    "Type": "RESOURCE",
    "TypeName": "AWS::CustomerProfiles::ObjectType",
    "IsDefaultVersion": true,
    "Description": "An ObjectType resource of Amazon Connect Customer Profiles",
    "Schema": "{\n  \"typeName\": \"AWS::CustomerProfiles::ObjectType\",\n  \"description\": \"An ObjectType resource of Amazon Connect Customer Profiles\",\n  \"sourceUrl\": \"https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-customer-profiles.git\",\n  \"definitions\": {\n    \"Tag\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Key\": {\n          \"type\": \"string\",\n          \"pattern\": \"^(?!aws:)[a-zA-Z+-=._:/]+$\",\n          \"minLength\": 1,\n          \"maxLength\": 128\n        },\n        \"Value\": {\n          \"type\": \"string\",\n          \"minLength\": 0,\n          \"maxLength\": 256\n        }\n      },\n      \"additionalProperties\": false,\n      \"required\": [\n        \"Key\",\n        \"Value\"\n      ]\n    },\n    \"FieldMap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[a-zA-Z0-9_-]+$\",\n          \"minLength\": 1,\n          \"maxLength\": 64\n        },\n        \"ObjectTypeField\": {\n          \"$ref\": \"#/definitions/ObjectTypeField\"\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"ObjectTypeField\": {\n      \"description\": \"Represents a field in a ProfileObjectType.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"Source\": {\n          \"description\": \"A field of a ProfileObject. For example: _source.FirstName, where \\\"_source\\\" is a ProfileObjectType of a Zendesk user and \\\"FirstName\\\" is a field in that ObjectType.\",\n          \"type\": \"string\",\n          \"minLength\": 1,\n          \"maxLength\": 1000\n        },\n        \"Target\": {\n          \"description\": \"The location of the data in the standard ProfileObject model. For example: _profile.Address.PostalCode.\",\n          \"type\": \"string\",\n          \"minLength\": 1,\n          \"maxLength\": 1000\n        },\n        \"ContentType\": {\n          \"description\": \"The content type of the field. Used for determining equality when searching.\",\n          \"type\": \"string\",\n          \"enum\": [\n            \"STRING\",\n            \"NUMBER\",\n            \"PHONE_NUMBER\",\n            \"EMAIL_ADDRESS\",\n            \"NAME\"\n          ]\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"KeyMap\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"Name\": {\n          \"type\": \"string\",\n          \"pattern\": \"^[a-zA-Z0-9_-]+$\",\n          \"minLength\": 1,\n          \"maxLength\": 64\n        },\n        \"ObjectTypeKeyList\": {\n          \"type\": \"array\",\n          \"insertionOrder\": false,\n          \"items\": {\n            \"$ref\": \"#/definitions/ObjectTypeKey\"\n          }\n        }\n      },\n      \"additionalProperties\": false\n    },\n    \"ObjectTypeKey\": {\n      \"description\": \"An object that defines the Key element of a ProfileObject. A Key is a special element that can be used to search for a customer profile.\",\n      \"type\": \"object\",\n      \"properties\": {\n        \"FieldNames\": {\n          \"description\": \"The reference for the key name of the fields map. \",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"pattern\": \"^[a-zA-Z0-9_-]+$\",\n            \"minLength\": 1,\n            \"maxLength\": 64\n          }\n        },\n        \"StandardIdentifiers\": {\n          \"description\": \"The types of keys that a ProfileObject can have. Each ProfileObject can have only 1 UNIQUE key but multiple PROFILE keys. PROFILE means that this key can be used to tie an object to a PROFILE. UNIQUE means that it can be used to uniquely identify an object. If a key a is marked as SECONDARY, it will be used to search for profiles after all other PROFILE keys have been searched. A LOOKUP_ONLY key is only used to match a profile but is not persisted to be used for searching of the profile. A NEW_ONLY key is only used if the profile does not already exist before the object is ingested, otherwise it is only used for matching objects to profiles.\",\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\",\n            \"enum\": [\n              \"PROFILE\",\n              \"UNIQUE\",\n              \"SECONDARY\",\n              \"LOOKUP_ONLY\",\n              \"NEW_ONLY\",\n              \"ASSET\",\n              \"CASE\",\n              \"ORDER\"\n            ]\n          }\n        }\n      },\n      \"additionalProperties\": false\n    }\n  },\n  \"properties\": {\n    \"DomainName\": {\n      \"description\": \"The unique name of the domain.\",\n      \"type\": \"string\",\n      \"pattern\": \"^[a-zA-Z0-9_-]+$\",\n      \"minLength\": 1,\n      \"maxLength\": 64\n    },\n    \"ObjectTypeName\": {\n      \"description\": \"The name of the profile object type.\",\n      \"type\": \"string\",\n      \"pattern\": \"^[a-zA-Z_][a-zA-Z_0-9-]*$\",\n      \"minLength\": 1,\n      \"maxLength\": 255\n    },\n    \"AllowProfileCreation\": {\n      \"description\": \"Indicates whether a profile should be created when data is received.\",\n      \"type\": \"boolean\"\n    },\n    \"Description\": {\n      \"description\": \"Description of the profile object type.\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 1000\n    },\n    \"EncryptionKey\": {\n      \"description\": \"The default encryption key\",\n      \"type\": \"string\",\n      \"minLength\": 0,\n      \"maxLength\": 255\n    },\n    \"ExpirationDays\": {\n      \"description\": \"The default number of days until the data within the domain expires.\",\n      \"type\": \"integer\",\n      \"minimum\": 1,\n      \"maximum\": 1098\n    },\n    \"Fields\": {\n      \"description\": \"A list of the name and ObjectType field.\",\n      \"type\": \"array\",\n      \"insertionOrder\": false,\n      \"items\": {\n        \"$ref\": \"#/definitions/FieldMap\"\n      }\n    },\n    \"Keys\": {\n      \"description\": \"A list of unique keys that can be used to map data to the profile.\",\n      \"type\": \"array\",\n      \"insertionOrder\": false,\n      \"items\": {\n        \"$ref\": \"#/definitions/KeyMap\"\n      }\n    },\n    \"CreatedAt\": {\n      \"description\": \"The time of this integration got created.\",\n      \"type\": \"string\"\n    },\n    \"LastUpdatedAt\": {\n      \"description\": \"The time of this integration got last updated at.\",\n      \"type\": \"string\"\n    },\n    \"SourceLastUpdatedTimestampFormat\": {\n      \"description\": \"The format of your sourceLastUpdatedTimestamp that was previously set up.\",\n      \"type\": \"string\",\n      \"minLength\": 1,\n      \"maxLength\": 255\n    },\n    \"Tags\": {\n      \"description\": \"The tags (keys and values) associated with the integration.\",\n      \"type\": \"array\",\n      \"items\": {\n        \"$ref\": \"#/definitions/Tag\"\n      },\n      \"minItems\": 0,\n      \"maxItems\": 50\n    },\n    \"TemplateId\": {\n      \"description\": \"A unique identifier for the object template.\",\n      \"type\": \"string\",\n      \"pattern\": \"^[a-zA-Z0-9_-]+$\",\n      \"minLength\": 1,\n      \"maxLength\": 64\n    }\n  },\n  \"additionalProperties\": false,\n  \"required\": [\n    \"DomainName\"\n  ],\n  \"tagging\": {\n    \"taggable\": true,\n    \"tagOnCreate\": true,\n    \"tagUpdatable\": true,\n    \"cloudFormationSystemTags\": true,\n    \"tagProperty\": \"/properties/Tags\"\n  },\n  \"createOnlyProperties\": [\n    \"/properties/DomainName\",\n    \"/properties/ObjectTypeName\"\n  ],\n  \"readOnlyProperties\": [\n    \"/properties/LastUpdatedAt\",\n    \"/properties/CreatedAt\"\n  ],\n  \"primaryIdentifier\": [\n    \"/properties/DomainName\",\n    \"/properties/ObjectTypeName\"\n  ],\n  \"handlers\": {\n    \"create\": {\n      \"permissions\": [\n        \"profile:GetProfileObjectType\",\n        \"profile:PutProfileObjectType\",\n        \"profile:TagResource\"\n      ]\n    },\n    \"read\": {\n      \"permissions\": [\n        \"profile:GetProfileObjectType\"\n      ]\n    },\n    \"update\": {\n      \"permissions\": [\n        \"profile:GetProfileObjectType\",\n        \"profile:PutProfileObjectType\",\n        \"profile:UntagResource\",\n        \"profile:TagResource\"\n      ]\n    },\n    \"delete\": {\n      \"permissions\": [\n        \"profile:DeleteProfileObjectType\"\n      ]\n    },\n    \"list\": {\n      \"handlerSchema\": {\n        \"properties\": {\n          \"DomainName\": {\n            \"$ref\": \"resource-schema.json#/properties/DomainName\"\n          }\n        },\n        \"required\": [\"DomainName\"]\n      },\n      \"permissions\": [\n        \"profile:ListProfileObjectTypes\"\n      ]\n    }\n  }\n}\n",
    "ProvisioningType": "FULLY_MUTABLE",
    "DeprecatedStatus": "LIVE",
    "Visibility": "PUBLIC",
    "SourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-resource-providers-customer-profiles.git",
    "TimeCreated": "2021-02-25T21:38:36.149000+00:00"
}
