{
    "Arn": "arn:aws:cloudformation:us-east-1::type/resource/AWS-IoTEvents-DetectorModel",
    "Type": "RESOURCE",
    "TypeName": "AWS::IoTEvents::DetectorModel",
    "IsDefaultVersion": true,
    "Description": "The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use AWS IoT Events](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *AWS IoT Events Developer Guide*.",
    "Schema": "{\n    \"typeName\": \"AWS::IoTEvents::DetectorModel\",\n    \"description\": \"The AWS::IoTEvents::DetectorModel resource creates a detector model. You create a *detector model* (a model of your equipment or process) using *states*. For each state, you define conditional (Boolean) logic that evaluates the incoming inputs to detect significant events. When an event is detected, it can change the state or trigger custom-built or predefined actions using other AWS services. You can define additional events that trigger actions when entering or exiting a state and, optionally, when a condition is met. For more information, see [How to Use AWS IoT Events](https://docs.aws.amazon.com/iotevents/latest/developerguide/how-to-use-iotevents.html) in the *AWS IoT Events Developer Guide*.\",\n    \"sourceUrl\": \"https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git\",\n    \"definitions\": {\n        \"DetectorModelDefinition\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information that defines how a detector operates.\",\n            \"properties\": {\n                \"InitialStateName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The state that is entered at the creation of each detector (instance).\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                },\n                \"States\": {\n                    \"type\": \"array\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": false,\n                    \"description\": \"Information about the states of the detector.\",\n                    \"minItems\": 1,\n                    \"items\": {\n                        \"$ref\": \"#/definitions/State\"\n                    }\n                }\n            },\n            \"required\": [\n                \"States\",\n                \"InitialStateName\"\n            ]\n        },\n        \"State\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information that defines a state of a detector.\",\n            \"properties\": {\n                \"OnEnter\": {\n                    \"$ref\": \"#/definitions/OnEnter\"\n                },\n                \"OnExit\": {\n                    \"$ref\": \"#/definitions/OnExit\"\n                },\n                \"OnInput\": {\n                    \"$ref\": \"#/definitions/OnInput\"\n                },\n                \"StateName\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128,\n                    \"description\": \"The name of the state.\"\n                }\n            },\n            \"required\": [\n                \"StateName\"\n            ]\n        },\n        \"OnEnter\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"When entering this state, perform these `actions` if the `condition` is `TRUE`.\",\n            \"properties\": {\n                \"Events\": {\n                    \"type\": \"array\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": false,\n                    \"description\": \"Specifies the `actions` that are performed when the state is entered and the `condition` is `TRUE`.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Event\"\n                    }\n                }\n            }\n        },\n        \"OnExit\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"When exiting this state, perform these `actions` if the specified `condition` is `TRUE`.\",\n            \"properties\": {\n                \"Events\": {\n                    \"type\": \"array\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": false,\n                    \"description\": \"Specifies the `actions` that are performed when the state is exited and the `condition` is `TRUE`.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Event\"\n                    }\n                }\n            }\n        },\n        \"OnInput\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"When an input is received and the `condition` is `TRUE`, perform the specified `actions`.\",\n            \"properties\": {\n                \"Events\": {\n                    \"type\": \"array\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": false,\n                    \"description\": \"Specifies the `actions` performed when the `condition` evaluates to `TRUE`.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Event\"\n                    }\n                },\n                \"TransitionEvents\": {\n                    \"type\": \"array\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": true,\n                    \"description\": \"Specifies the `actions` performed, and the next `state` entered, when a `condition` evaluates to `TRUE`.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/TransitionEvent\"\n                    }\n                }\n            }\n        },\n        \"Event\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Specifies the `actions` to be performed when the `condition` evaluates to `TRUE`.\",\n            \"properties\": {\n                \"Actions\": {\n                    \"type\": \"array\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": false,\n                    \"description\": \"The actions to be performed.\",\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Action\"\n                    }\n                },\n                \"Condition\": {\n                    \"type\": \"string\",\n                    \"description\": \"The Boolean expression that, when `TRUE`, causes the `actions` to be performed. If not present, the `actions` are performed (=`TRUE`). If the expression result is not a `Boolean` value, the `actions` are not performed (=`FALSE`).\",\n                    \"maxLength\": 512\n                },\n                \"EventName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the event.\",\n                    \"maxLength\": 128\n                }\n            },\n            \"required\": [\n                \"EventName\"\n            ]\n        },\n        \"TransitionEvent\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Specifies the `actions `performed and the next `state` entered when a `condition` evaluates to `TRUE`.\",\n            \"properties\": {\n                \"Actions\": {\n                    \"type\": \"array\",\n                    \"description\": \"The actions to be performed.\",\n                    \"uniqueItems\": false,\n                    \"insertionOrder\": false,\n                    \"items\": {\n                        \"$ref\": \"#/definitions/Action\"\n                    }\n                },\n                \"Condition\": {\n                    \"type\": \"string\",\n                    \"description\": \"A Boolean expression that when `TRUE` causes the `actions` to be performed and the `nextState` to be entered.\",\n                    \"maxLength\": 512\n                },\n                \"EventName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the event.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                },\n                \"NextState\": {\n                    \"type\": \"string\",\n                    \"description\": \"The next state to enter.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                }\n            },\n            \"required\": [\n                \"Condition\",\n                \"EventName\",\n                \"NextState\"\n            ]\n        },\n        \"Action\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"The actions to be performed.\",\n            \"properties\": {\n                \"ClearTimer\": {\n                    \"$ref\": \"#/definitions/ClearTimer\"\n                },\n                \"DynamoDB\": {\n                    \"$ref\": \"#/definitions/DynamoDB\"\n                },\n                \"DynamoDBv2\": {\n                    \"$ref\": \"#/definitions/DynamoDBv2\"\n                },\n                \"Firehose\": {\n                    \"$ref\": \"#/definitions/Firehose\"\n                },\n                \"IotEvents\": {\n                    \"$ref\": \"#/definitions/IotEvents\"\n                },\n                \"IotSiteWise\": {\n                    \"$ref\": \"#/definitions/IotSiteWise\"\n                },\n                \"IotTopicPublish\": {\n                    \"$ref\": \"#/definitions/IotTopicPublish\"\n                },\n                \"Lambda\": {\n                    \"$ref\": \"#/definitions/Lambda\"\n                },\n                \"ResetTimer\": {\n                    \"$ref\": \"#/definitions/ResetTimer\"\n                },\n                \"SetTimer\": {\n                    \"$ref\": \"#/definitions/SetTimer\"\n                },\n                \"SetVariable\": {\n                    \"$ref\": \"#/definitions/SetVariable\"\n                },\n                \"Sns\": {\n                    \"$ref\": \"#/definitions/Sns\"\n                },\n                \"Sqs\": {\n                    \"$ref\": \"#/definitions/Sqs\"\n                }\n            }\n        },\n        \"ClearTimer\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information needed to clear the timer.\",\n            \"properties\": {\n                \"TimerName\": {\n                    \"type\": \"string\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                }\n            },\n            \"required\": [\n                \"TimerName\"\n            ]\n        },\n        \"DynamoDB\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Writes to the DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). One column of the DynamoDB table receives all attribute-value pairs in the payload that you specify. For more information, see [Actions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-event-actions.html) in *AWS IoT Events Developer Guide*.\",\n            \"properties\": {\n                \"HashKeyField\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the hash key (also called the partition key).\"\n                },\n                \"HashKeyType\": {\n                    \"type\": \"string\",\n                    \"description\": \"The data type for the hash key (also called the partition key). You can specify the following values:\\n\\n* `STRING` - The hash key is a string.\\n\\n* `NUMBER` - The hash key is a number.\\n\\nIf you don't specify `hashKeyType`, the default value is `STRING`.\"\n                },\n                \"HashKeyValue\": {\n                    \"type\": \"string\",\n                    \"description\": \"The value of the hash key (also called the partition key).\"\n                },\n                \"Operation\": {\n                    \"type\": \"string\",\n                    \"description\": \"The type of operation to perform. You can specify the following values:\\n\\n* `INSERT` - Insert data as a new item into the DynamoDB table. This item uses the specified hash key as a partition key. If you specified a range key, the item uses the range key as a sort key.\\n\\n* `UPDATE` - Update an existing item of the DynamoDB table with new data. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.\\n\\n* `DELETE` - Delete an existing item of the DynamoDB table. This item's partition key must match the specified hash key. If you specified a range key, the range key must match the item's sort key.\\n\\nIf you don't specify this parameter, AWS IoT Events triggers the `INSERT` operation.\"\n                },\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                },\n                \"PayloadField\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the DynamoDB column that receives the action payload.\\n\\nIf you don't specify this parameter, the name of the DynamoDB column is `payload`.\"\n                },\n                \"RangeKeyField\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the range key (also called the sort key).\"\n                },\n                \"RangeKeyType\": {\n                    \"type\": \"string\",\n                    \"description\": \"The data type for the range key (also called the sort key), You can specify the following values:\\n\\n* `STRING` - The range key is a string.\\n\\n* `NUMBER` - The range key is number.\\n\\nIf you don't specify `rangeKeyField`, the default value is `STRING`.\"\n                },\n                \"RangeKeyValue\": {\n                    \"type\": \"string\",\n                    \"description\": \"The value of the range key (also called the sort key).\"\n                },\n                \"TableName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the DynamoDB table.\"\n                }\n            },\n            \"required\": [\n                \"HashKeyField\",\n                \"HashKeyValue\",\n                \"TableName\"\n            ]\n        },\n        \"DynamoDBv2\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Defines an action to write to the Amazon DynamoDB table that you created. The default action payload contains all attribute-value pairs that have the information about the detector model instance and the event that triggered the action. You can also customize the [payload](https://docs.aws.amazon.com/iotevents/latest/apireference/API_Payload.html). A separate column of the DynamoDB table receives one attribute-value pair in the payload that you specify.\\n\\nYou can use expressions for parameters that are strings. For more information, see [Expressions](https://docs.aws.amazon.com/iotevents/latest/developerguide/iotevents-expressions.html) in the *AWS IoT Events Developer Guide*.\",\n            \"properties\": {\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                },\n                \"TableName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the DynamoDB table.\"\n                }\n            },\n            \"required\": [\n                \"TableName\"\n            ]\n        },\n        \"Firehose\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Sends information about the detector model instance and the event that triggered the action to an Amazon Kinesis Data Firehose delivery stream.\",\n            \"properties\": {\n                \"DeliveryStreamName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the Kinesis Data Firehose delivery stream where the data is written.\"\n                },\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                },\n                \"Separator\": {\n                    \"type\": \"string\",\n                    \"description\": \"A character separator that is used to separate records written to the Kinesis Data Firehose delivery stream. Valid values are: '\\\\n' (newline), '\\\\t' (tab), '\\\\r\\\\n' (Windows newline), ',' (comma).\",\n                    \"pattern\": \"([\\\\n\\\\t])|(\\\\r\\\\n)|(,)\"\n                }\n            },\n            \"required\": [\n                \"DeliveryStreamName\"\n            ]\n        },\n        \"IotEvents\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Sends an AWS IoT Events input, passing in information about the detector model instance and the event that triggered the action.\",\n            \"properties\": {\n                \"InputName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the AWS IoT Events input where the data is sent.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128,\n                    \"pattern\": \"^[a-zA-Z][a-zA-Z0-9_]*$\"\n                },\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                }\n            },\n            \"required\": [\n                \"InputName\"\n            ]\n        },\n        \"IotSiteWise\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Sends information about the detector model instance and the event that triggered the action to a specified asset property in AWS IoT SiteWise.\",\n            \"properties\": {\n                \"AssetId\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the asset that has the specified property. You can specify an expression.\"\n                },\n                \"EntryId\": {\n                    \"type\": \"string\",\n                    \"description\": \"A unique identifier for this entry. You can use the entry ID to track which data entry causes an error in case of failure. The default is a new unique identifier. You can also specify an expression.\"\n                },\n                \"PropertyAlias\": {\n                    \"type\": \"string\",\n                    \"description\": \"The alias of the asset property. You can also specify an expression.\"\n                },\n                \"PropertyId\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ID of the asset property. You can specify an expression.\"\n                },\n                \"PropertyValue\": {\n                    \"$ref\": \"#/definitions/AssetPropertyValue\"\n                }\n            },\n            \"required\": [\n                \"PropertyValue\"\n            ]\n        },\n        \"IotTopicPublish\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information required to publish the MQTT message through the AWS IoT message broker.\",\n            \"properties\": {\n                \"MqttTopic\": {\n                    \"type\": \"string\",\n                    \"description\": \"The MQTT topic of the message. You can use a string expression that includes variables (`$variable.<variable-name>`) and input values (`$input.<input-name>.<path-to-datum>`) as the topic string.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                },\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                }\n            },\n            \"required\": [\n                \"MqttTopic\"\n            ]\n        },\n        \"Lambda\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"FunctionArn\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ARN of the Lambda function that is executed.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 2048\n                },\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                }\n            },\n            \"required\": [\n                \"FunctionArn\"\n            ]\n        },\n        \"ResetTimer\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information required to reset the timer. The timer is reset to the previously evaluated result of the duration. The duration expression isn't reevaluated when you reset the timer.\",\n            \"properties\": {\n                \"TimerName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the timer to reset.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                }\n            },\n            \"required\": [\n                \"TimerName\"\n            ]\n        },\n        \"SetTimer\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information needed to set the timer.\",\n            \"properties\": {\n                \"DurationExpression\": {\n                    \"type\": \"string\",\n                    \"description\": \"The duration of the timer, in seconds. You can use a string expression that includes numbers, variables (`$variable.<variable-name>`), and input values (`$input.<input-name>.<path-to-datum>`) as the duration. The range of the duration is `1-31622400` seconds. To ensure accuracy, the minimum duration is `60` seconds. The evaluated result of the duration is rounded down to the nearest whole number.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 1024\n                },\n                \"Seconds\": {\n                    \"type\": \"integer\",\n                    \"description\": \"The number of seconds until the timer expires. The minimum value is `60` seconds to ensure accuracy. The maximum value is `31622400` seconds.\",\n                    \"minimum\": 60,\n                    \"maximum\": 31622400\n                },\n                \"TimerName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the timer.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128\n                }\n            },\n            \"required\": [\n                \"TimerName\"\n            ]\n        },\n        \"SetVariable\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information about the variable and its new value.\",\n            \"properties\": {\n                \"Value\": {\n                    \"type\": \"string\",\n                    \"description\": \"The new value of the variable.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 1024\n                },\n                \"VariableName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the variable.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 128,\n                    \"pattern\": \"^[a-zA-Z][a-zA-Z0-9_]*$\"\n                }\n            },\n            \"required\": [\n                \"Value\",\n                \"VariableName\"\n            ]\n        },\n        \"Sns\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information required to publish the Amazon SNS message.\",\n            \"properties\": {\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                },\n                \"TargetArn\": {\n                    \"type\": \"string\",\n                    \"description\": \"The ARN of the Amazon SNS target where the message is sent.\",\n                    \"minLength\": 1,\n                    \"maxLength\": 2048\n                }\n            },\n            \"required\": [\n                \"TargetArn\"\n            ]\n        },\n        \"Sqs\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"properties\": {\n                \"Payload\": {\n                    \"$ref\": \"#/definitions/Payload\"\n                },\n                \"QueueUrl\": {\n                    \"type\": \"string\",\n                    \"description\": \"The URL of the SQS queue where the data is written.\"\n                },\n                \"UseBase64\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"Set this to `TRUE` if you want the data to be base-64 encoded before it is written to the queue. Otherwise, set this to `FALSE`.\"\n                }\n            },\n            \"required\": [\n                \"QueueUrl\"\n            ]\n        },\n        \"AssetPropertyValue\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"A structure that contains value information. For more information, see [AssetPropertyValue](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_AssetPropertyValue.html) in the *AWS IoT SiteWise API Reference*.\",\n            \"properties\": {\n                \"Quality\": {\n                    \"type\": \"string\",\n                    \"description\": \"The quality of the asset property value. The value must be `GOOD`, `BAD`, or `UNCERTAIN`. You can also specify an expression.\"\n                },\n                \"Timestamp\": {\n                    \"$ref\": \"#/definitions/AssetPropertyTimestamp\"\n                },\n                \"Value\": {\n                    \"$ref\": \"#/definitions/AssetPropertyVariant\"\n                }\n            },\n            \"required\": [\n                \"Value\"\n            ]\n        },\n        \"AssetPropertyTimestamp\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"A structure that contains timestamp information. For more information, see [TimeInNanos](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_TimeInNanos.html) in the *AWS IoT SiteWise API Reference*.\",\n            \"properties\": {\n                \"OffsetInNanos\": {\n                    \"type\": \"string\",\n                    \"description\": \"The timestamp, in seconds, in the Unix epoch format. The valid range is between `1-31556889864403199`. You can also specify an expression.\"\n                },\n                \"TimeInSeconds\": {\n                    \"type\": \"string\",\n                    \"description\": \"The nanosecond offset converted from `timeInSeconds`. The valid range is between `0-999999999`. You can also specify an expression.\"\n                }\n            },\n            \"required\": [\n                \"TimeInSeconds\"\n            ]\n        },\n        \"AssetPropertyVariant\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"A structure that contains an asset property value. For more information, see [Variant](https://docs.aws.amazon.com/iot-sitewise/latest/APIReference/API_Variant.html) in the *AWS IoT SiteWise API Reference*.\",\n            \"properties\": {\n                \"BooleanValue\": {\n                    \"type\": \"string\",\n                    \"description\": \"The asset property value is a Boolean value that must be `TRUE` or `FALSE`. You can also specify an expression. If you use an expression, the evaluated result should be a Boolean value.\"\n                },\n                \"DoubleValue\": {\n                    \"type\": \"string\",\n                    \"description\": \"The asset property value is a double. You can also specify an expression. If you use an expression, the evaluated result should be a double.\"\n                },\n                \"IntegerValue\": {\n                    \"type\": \"string\",\n                    \"description\": \"The asset property value is an integer. You can also specify an expression. If you use an expression, the evaluated result should be an integer.\"\n                },\n                \"StringValue\": {\n                    \"type\": \"string\",\n                    \"description\": \"The asset property value is a string. You can also specify an expression. If you use an expression, the evaluated result should be a string.\"\n                }\n            }\n        },\n        \"Payload\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Information needed to configure the payload.\\n\\nBy default, AWS IoT Events generates a standard payload in JSON for any action. This action payload contains all attribute-value pairs that have the information about the detector model instance and the event triggered the action. To configure the action payload, you can use `contentExpression`.\",\n            \"properties\": {\n                \"ContentExpression\": {\n                    \"type\": \"string\",\n                    \"description\": \"The content of the payload. You can use a string expression that includes quoted strings (`'<string>'`), variables (`$variable.<variable-name>`), input values (`$input.<input-name>.<path-to-datum>`), string concatenations, and quoted strings that contain `${}` as the content. The recommended maximum size of a content expression is 1 KB.\",\n                    \"minLength\": 1\n                },\n                \"Type\": {\n                    \"type\": \"string\",\n                    \"description\": \"The value of the payload type can be either `STRING` or `JSON`.\"\n                }\n            },\n            \"required\": [\n                \"ContentExpression\",\n                \"Type\"\n            ]\n        },\n        \"Tag\": {\n            \"type\": \"object\",\n            \"additionalProperties\": false,\n            \"description\": \"Tags to be applied to Input.\",\n            \"properties\": {\n                \"Key\": {\n                    \"description\": \"Key of the Tag.\",\n                    \"type\": \"string\"\n                },\n                \"Value\": {\n                    \"description\": \"Value of the Tag.\",\n                    \"type\": \"string\"\n                }\n            },\n            \"required\": [\n                \"Value\",\n                \"Key\"\n            ]\n        }\n    },\n    \"properties\": {\n        \"DetectorModelDefinition\": {\n            \"$ref\": \"#/definitions/DetectorModelDefinition\"\n        },\n        \"DetectorModelDescription\": {\n            \"type\": \"string\",\n            \"description\": \"A brief description of the detector model.\",\n            \"maxLength\": 128\n        },\n        \"DetectorModelName\": {\n            \"type\": \"string\",\n            \"description\": \"The name of the detector model.\",\n            \"minLength\": 1,\n            \"maxLength\": 128,\n            \"pattern\": \"^[a-zA-Z0-9_-]+$\"\n        },\n        \"EvaluationMethod\": {\n            \"type\": \"string\",\n            \"description\": \"Information about the order in which events are evaluated and how actions are executed.\",\n            \"enum\": [\n                \"BATCH\",\n                \"SERIAL\"\n            ]\n        },\n        \"Key\": {\n            \"type\": \"string\",\n            \"description\": \"The value used to identify a detector instance. When a device or system sends input, a new detector instance with a unique key value is created. AWS IoT Events can continue to route input to its corresponding detector instance based on this identifying information.\\n\\nThis parameter uses a JSON-path expression to select the attribute-value pair in the message payload that is used for identification. To route the message to the correct detector instance, the device must send a message payload that contains the same attribute-value.\",\n            \"minLength\": 1,\n            \"maxLength\": 128,\n            \"pattern\": \"^((`[\\\\w\\\\- ]+`)|([\\\\w\\\\-]+))(\\\\.((`[\\\\w\\\\- ]+`)|([\\\\w\\\\-]+)))*$\"\n        },\n        \"RoleArn\": {\n            \"type\": \"string\",\n            \"description\": \"The ARN of the role that grants permission to AWS IoT Events to perform its operations.\",\n            \"minLength\": 1,\n            \"maxLength\": 2048\n        },\n        \"Tags\": {\n            \"type\": \"array\",\n            \"uniqueItems\": false,\n            \"insertionOrder\": false,\n            \"description\": \"An array of key-value pairs to apply to this resource.\\n\\nFor more information, see [Tag](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-resource-tags.html).\",\n            \"items\": {\n                \"$ref\": \"#/definitions/Tag\"\n            }\n        }\n    },\n    \"required\": [\n        \"DetectorModelDefinition\",\n        \"RoleArn\"\n    ],\n    \"additionalProperties\": false,\n    \"primaryIdentifier\": [\n        \"/properties/DetectorModelName\"\n    ],\n    \"createOnlyProperties\": [\n        \"/properties/DetectorModelName\",\n        \"/properties/Key\"\n    ],\n    \"taggable\": true,\n    \"handlers\": {\n        \"create\": {\n            \"permissions\": [\n                \"iotevents:CreateDetectorModel\",\n                \"iotevents:UpdateInputRouting\",\n                \"iotevents:DescribeDetectorModel\",\n                \"iotevents:ListTagsForResource\",\n                \"iotevents:TagResource\",\n                \"iam:PassRole\"\n            ]\n        },\n        \"read\": {\n            \"permissions\": [\n                \"iotevents:DescribeDetectorModel\",\n                \"iotevents:ListTagsForResource\"\n            ]\n        },\n        \"update\": {\n            \"permissions\": [\n                \"iotevents:UpdateDetectorModel\",\n                \"iotevents:UpdateInputRouting\",\n                \"iotevents:DescribeDetectorModel\",\n                \"iotevents:ListTagsForResource\",\n                \"iotevents:UntagResource\",\n                \"iotevents:TagResource\",\n                \"iam:PassRole\"\n            ]\n        },\n        \"delete\": {\n            \"permissions\": [\n                \"iotevents:DeleteDetectorModel\",\n                \"iotevents:DescribeDetectorModel\"\n            ]\n        },\n        \"list\": {\n            \"permissions\": [\n                \"iotevents:ListDetectorModels\"\n            ]\n        }\n    }\n}",
    "ProvisioningType": "FULLY_MUTABLE",
    "DeprecatedStatus": "LIVE",
    "Visibility": "PUBLIC",
    "SourceUrl": "https://github.com/aws-cloudformation/aws-cloudformation-rpdk.git",
    "TimeCreated": "2020-10-15T15:16:51.258000+00:00"
}
