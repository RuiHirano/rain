/// AWS::AmazonMQ::Broker
///
/// Generated by rain build --pkl-class AWS::AmazonMQ::Broker
module aws.amazonmq.broker

import "../../cloudformation.pkl"

/// 
open class BrokerLdapServerMetadata {
    UserRoleName: (String|Mapping)?
    RoleName: (String|Mapping)?
    UserSearchSubtree: (Boolean|Mapping)?
    RoleBase: String|Mapping
    ServiceAccountPassword: String|Mapping
    RoleSearchSubtree: (Boolean|Mapping)?
    Hosts: Listing<String|Mapping>
    UserSearchMatching: String|Mapping
    UserBase: String|Mapping
    RoleSearchMatching: String|Mapping
    ServiceAccountUsername: String|Mapping
}

/// 
open class BrokerUser {
    ReplicationUser: (Boolean|Mapping)?
    ConsoleAccess: (Boolean|Mapping)?
    Username: String|Mapping
    Groups: (Listing<String|Mapping>)?
    Password: String|Mapping
}

/// 
open class BrokerMaintenanceWindow {
    TimeOfDay: String|Mapping
    TimeZone: String|Mapping
    DayOfWeek: String|Mapping
}

/// 
open class BrokerTagsEntry {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class BrokerEncryptionOptions {
    KmsKeyId: (String|Mapping)?
    UseAwsOwnedKey: Boolean|Mapping
}

/// 
open class BrokerConfigurationId {
    Revision: Int|Mapping
    Id: String|Mapping
}

/// 
open class BrokerLogList {
    Audit: (Boolean|Mapping)?
    General: (Boolean|Mapping)?
}

/// Resource Type definition for AWS::AmazonMQ::Broker
open class Broker extends cloudformation.Resource {

    Type = "AWS::AmazonMQ::Broker"


    /// 
    hidden LdapServerMetadata: (BrokerLdapServerMetadata)?

    /// 
    hidden EncryptionOptions: (BrokerEncryptionOptions)?

    /// 
    hidden MaintenanceWindowStartTime: (BrokerMaintenanceWindow)?

    /// 
    hidden AutoMinorVersionUpgrade: Boolean|Mapping

    /// 
    hidden Configuration: (BrokerConfigurationId)?

    /// 
    hidden Users: Listing<BrokerUser>

    /// 
    hidden SubnetIds: (Listing<String|Mapping>)?

    /// 
    hidden StorageType: (String|Mapping)?

    /// 
    hidden HostInstanceType: String|Mapping

    /// 
    hidden DataReplicationPrimaryBrokerArn: (String|Mapping)?

    /// 
    hidden EngineVersion: String|Mapping

    /// 
    hidden Logs: (BrokerLogList)?

    /// 
    hidden BrokerName: String|Mapping

    /// 
    hidden SecurityGroups: (Listing<String|Mapping>)?

    /// 
    hidden AuthenticationStrategy: (String|Mapping)?

    /// 
    hidden PubliclyAccessible: Boolean|Mapping

    /// 
    hidden EngineType: String|Mapping

    /// 
    hidden Tags: (Listing<BrokerTagsEntry>)?

    /// 
    hidden DeploymentMode: String|Mapping

    /// 
    hidden DataReplicationMode: (String|Mapping)?

    Properties {
        ["LdapServerMetadata"] = if (LdapServerMetadata == null) null else LdapServerMetadata
        ["EncryptionOptions"] = if (EncryptionOptions == null) null else EncryptionOptions
        ["MaintenanceWindowStartTime"] = if (MaintenanceWindowStartTime == null) null else MaintenanceWindowStartTime
        ["AutoMinorVersionUpgrade"] = if (AutoMinorVersionUpgrade == null) null else AutoMinorVersionUpgrade
        ["Configuration"] = if (Configuration == null) null else Configuration
        ["Users"] = if (Users == null) null else Users
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
        ["StorageType"] = if (StorageType == null) null else StorageType
        ["HostInstanceType"] = if (HostInstanceType == null) null else HostInstanceType
        ["DataReplicationPrimaryBrokerArn"] = if (DataReplicationPrimaryBrokerArn == null) null else DataReplicationPrimaryBrokerArn
        ["EngineVersion"] = if (EngineVersion == null) null else EngineVersion
        ["Logs"] = if (Logs == null) null else Logs
        ["BrokerName"] = if (BrokerName == null) null else BrokerName
        ["SecurityGroups"] = if (SecurityGroups == null) null else SecurityGroups
        ["AuthenticationStrategy"] = if (AuthenticationStrategy == null) null else AuthenticationStrategy
        ["PubliclyAccessible"] = if (PubliclyAccessible == null) null else PubliclyAccessible
        ["EngineType"] = if (EngineType == null) null else EngineType
        ["Tags"] = if (Tags == null) null else Tags
        ["DeploymentMode"] = if (DeploymentMode == null) null else DeploymentMode
        ["DataReplicationMode"] = if (DataReplicationMode == null) null else DataReplicationMode
    }

}
