/// AWS::AmplifyUIBuilder::Component
///
/// Generated by rain build --pkl-class AWS::AmplifyUIBuilder::Component
module aws.amplifyuibuilder.component

import "../../cloudformation.pkl"

/// 
open class ComponentComponentBindingPropertiesValueProperties {
    Key: (String|Mapping)?
    DefaultValue: (String|Mapping)?
    SlotName: (String|Mapping)?
    Model: (String|Mapping)?
    Field: (String|Mapping)?
    Predicates: (Listing<ComponentPredicate>)?
    UserAttribute: (String|Mapping)?
    Bucket: (String|Mapping)?
}

typealias ComponentComponentOverridesValue = Mapping<String, Any>


/// 
open class ComponentComponentProperty {
    CollectionBindingProperties: (ComponentComponentPropertyBindingProperties)?
    ImportedValue: (String|Mapping)?
    Condition: (ComponentComponentConditionProperty)?
    Type: (String|Mapping)?
    Value: (String|Mapping)?
    BindingProperties: (ComponentComponentPropertyBindingProperties)?
    Model: (String|Mapping)?
    Event: (String|Mapping)?
    UserAttribute: (String|Mapping)?
    Concat: (Listing<ComponentComponentProperty>)?
    DefaultValue: (String|Mapping)?
    Bindings: (ComponentFormBindings)?
    Configured: (Boolean|Mapping)?
    ComponentName: (String|Mapping)?
    Property: (String|Mapping)?
}

typealias ComponentFormBindings = Mapping<String, Any>


/// 
open class ComponentMutationActionSetStateParameter {
    Set: ComponentComponentProperty
    ComponentName: String|Mapping
    Property: String|Mapping
}

typealias ComponentTags = Mapping<String, Any>


/// 
open class ComponentPredicate {
    And: (Listing<ComponentPredicate>)?
    Field: (String|Mapping)?
    Operator: (String|Mapping)?
    Operand: (String|Mapping)?
    OperandType: (String(matches(Regex(#"^boolean|string|number$"#)))|Mapping)?
    Or: (Listing<ComponentPredicate>)?
}

/// 
open class ComponentComponentBindingPropertiesValue {
    Type: (String|Mapping)?
    BindingProperties: (ComponentComponentBindingPropertiesValueProperties)?
    DefaultValue: (String|Mapping)?
}

typealias ComponentComponentCollectionProperties = Mapping<String, Any>


/// 
open class ComponentComponentConditionProperty {
    Else: (ComponentComponentProperty)?
    OperandType: (String|Mapping)?
    Property: (String|Mapping)?
    Field: (String|Mapping)?
    Operator: (String|Mapping)?
    Operand: (String|Mapping)?
    Then: (ComponentComponentProperty)?
}

/// 
open class ComponentComponentEvent {
    Action: (String|Mapping)?
    Parameters: (ComponentActionParameters)?
    BindingEvent: (String|Mapping)?
}

typealias ComponentComponentEvents = Mapping<String, Any>


typealias ComponentComponentOverrides = Mapping<String, Any>


/// 
open class ComponentComponentVariant {
    Overrides: (ComponentComponentOverrides)?
    VariantValues: (ComponentComponentVariantValues)?
}

/// 
open class ComponentComponentDataConfiguration {
    Model: String|Mapping
    Sort: (Listing<ComponentSortProperty>)?
    Predicate: (ComponentPredicate)?
    Identifiers: (Listing<String|Mapping>)?
}

/// 
open class ComponentFormBindingElement {
    Element: String|Mapping
    Property: String|Mapping
}

/// 
open class ComponentSortProperty {
    Field: String|Mapping
    Direction: ComponentSortDirection
}

/// 
open class ComponentActionParameters {
    State: (ComponentMutationActionSetStateParameter)?
    Url: (ComponentComponentProperty)?
    Target: (ComponentComponentProperty)?
    Id: (ComponentComponentProperty)?
    Model: (String|Mapping)?
    Fields: (ComponentComponentProperties)?
    Type: (ComponentComponentProperty)?
    Anchor: (ComponentComponentProperty)?
    Global: (ComponentComponentProperty)?
}

typealias ComponentComponentBindingProperties = Mapping<String, Any>


/// 
open class ComponentComponentChild {
    Events: (ComponentComponentEvents)?
    SourceId: (String|Mapping)?
    ComponentType: String|Mapping
    Name: String|Mapping
    Properties: ComponentComponentProperties
    Children: (Listing<ComponentComponentChild>)?
}

typealias ComponentComponentProperties = Mapping<String, Any>


/// 
open class ComponentComponentPropertyBindingProperties {
    Property: String|Mapping
    Field: (String|Mapping)?
}

typealias ComponentComponentVariantValues = Mapping<String, Any>


typealias ComponentSortDirection = String|Mapping


/// Definition of AWS::AmplifyUIBuilder::Component Resource Type
open class Component extends cloudformation.Resource {

    Type = "AWS::AmplifyUIBuilder::Component"


    /// 
    hidden AppId: (String|Mapping)?

    /// 
    hidden BindingProperties: (ComponentComponentBindingProperties)?

    /// 
    hidden Children: (Listing<ComponentComponentChild>)?

    /// 
    hidden CollectionProperties: (ComponentComponentCollectionProperties)?

    /// 
    hidden ComponentType: (String|Mapping)?

    /// 
    hidden EnvironmentName: (String|Mapping)?

    /// 
    hidden Events: (ComponentComponentEvents)?

    /// 
    hidden Name: (String|Mapping)?

    /// 
    hidden Overrides: (ComponentComponentOverrides)?

    /// 
    hidden PropertiesProperty: (ComponentComponentProperties)?

    /// 
    hidden SchemaVersion: (String|Mapping)?

    /// 
    hidden SourceId: (String|Mapping)?

    /// 
    hidden Tags: (ComponentTags)?

    /// 
    hidden Variants: (Listing<ComponentComponentVariant>)?

    Properties {
        ["AppId"] = if (AppId == null) null else AppId
        ["BindingProperties"] = if (BindingProperties == null) null else BindingProperties
        ["Children"] = if (Children == null) null else Children
        ["CollectionProperties"] = if (CollectionProperties == null) null else CollectionProperties
        ["ComponentType"] = if (ComponentType == null) null else ComponentType
        ["EnvironmentName"] = if (EnvironmentName == null) null else EnvironmentName
        ["Events"] = if (Events == null) null else Events
        ["Name"] = if (Name == null) null else Name
        ["Overrides"] = if (Overrides == null) null else Overrides
        ["Properties"] = if (PropertiesProperty == null) null else PropertiesProperty
        ["SchemaVersion"] = if (SchemaVersion == null) null else SchemaVersion
        ["SourceId"] = if (SourceId == null) null else SourceId
        ["Tags"] = if (Tags == null) null else Tags
        ["Variants"] = if (Variants == null) null else Variants
    }

}
