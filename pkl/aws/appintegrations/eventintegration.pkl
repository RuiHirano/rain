/// AWS::AppIntegrations::EventIntegration
///
/// Generated by rain build --pkl-class AWS::AppIntegrations::EventIntegration
module aws.appintegrations.eventintegration

import "../../cloudformation.pkl"

/// 
open class EventIntegrationEventFilter {
    Source: String(matches(Regex(#"^aws\.partner\/.*$"#)))|Mapping
}

/// 
open class EventIntegrationTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// 
open class EventIntegrationMetadata {
    Key: String(matches(Regex(#".*\S.*"#)))|Mapping
    Value: String(matches(Regex(#".*\S.*"#)))|Mapping
}

/// Resource Type definition for AWS::AppIntegrations::EventIntegration
open class EventIntegration extends cloudformation.Resource {

    Type = "AWS::AppIntegrations::EventIntegration"


    /// The event integration description.
    hidden Description: (String|Mapping)?

    /// The name of the event integration.
    hidden Name: String(matches(Regex(#"^[a-zA-Z0-9/\._\-]+$"#)))|Mapping

    /// The Amazon Eventbridge bus for the event integration.
    hidden EventBridgeBus: String(matches(Regex(#"^[a-zA-Z0-9/\._\-]+$"#)))|Mapping

    /// The EventFilter (source) associated with the event integration.
    hidden EventFilter: EventIntegrationEventFilter

    /// The tags (keys and values) associated with the event integration.
    hidden Tags: (Listing<EventIntegrationTag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["Name"] = if (Name == null) null else Name
        ["EventBridgeBus"] = if (EventBridgeBus == null) null else EventBridgeBus
        ["EventFilter"] = if (EventFilter == null) null else EventFilter
        ["Tags"] = if (Tags == null) null else Tags
    }

}
