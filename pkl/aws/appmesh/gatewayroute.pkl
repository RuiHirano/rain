/// AWS::AppMesh::GatewayRoute
///
/// Generated by rain build --pkl-class AWS::AppMesh::GatewayRoute
module aws.appmesh.gatewayroute

import "../../cloudformation.pkl"

/// 
open class GatewayRouteGatewayRouteTarget {
    VirtualService: GatewayRouteGatewayRouteVirtualService
    Port: (Int|Mapping)?
}

/// 
open class GatewayRouteHttpQueryParameterMatch {
    Exact: (String|Mapping)?
}

/// 
open class GatewayRouteGatewayRouteMetadataMatch {
    Suffix: (String|Mapping)?
    Exact: (String|Mapping)?
    Prefix: (String|Mapping)?
    Regex: (String|Mapping)?
    Range: (GatewayRouteGatewayRouteRangeMatch)?
}

/// 
open class GatewayRouteGatewayRouteHostnameRewrite {
    DefaultTargetHostname: (String|Mapping)?
}

/// 
open class GatewayRouteGrpcGatewayRouteMatch {
    ServiceName: (String|Mapping)?
    Port: (Int|Mapping)?
    Hostname: (GatewayRouteGatewayRouteHostnameMatch)?
    Metadata: (Listing<GatewayRouteGrpcGatewayRouteMetadata>)?
}

/// 
open class GatewayRouteHttpGatewayRouteAction {
    Target: GatewayRouteGatewayRouteTarget
    Rewrite: (GatewayRouteHttpGatewayRouteRewrite)?
}

/// 
open class GatewayRouteGatewayRouteSpec {
    HttpRoute: (GatewayRouteHttpGatewayRoute)?
    Http2Route: (GatewayRouteHttpGatewayRoute)?
    GrpcRoute: (GatewayRouteGrpcGatewayRoute)?
    Priority: (Int|Mapping)?
}

/// 
open class GatewayRouteHttpPathMatch {
    Regex: (String|Mapping)?
    Exact: (String|Mapping)?
}

/// 
open class GatewayRouteHttpGatewayRoute {
    Action: GatewayRouteHttpGatewayRouteAction
    Match: GatewayRouteHttpGatewayRouteMatch
}

/// 
open class GatewayRouteHttpGatewayRouteHeader {
    Name: String|Mapping
    Match: (GatewayRouteHttpGatewayRouteHeaderMatch)?
    Invert: (Boolean|Mapping)?
}

/// 
open class GatewayRouteGrpcGatewayRouteRewrite {
    Hostname: (GatewayRouteGatewayRouteHostnameRewrite)?
}

/// 
open class GatewayRouteHttpGatewayRouteRewrite {
    Path: (GatewayRouteHttpGatewayRoutePathRewrite)?
    Hostname: (GatewayRouteGatewayRouteHostnameRewrite)?
    Prefix: (GatewayRouteHttpGatewayRoutePrefixRewrite)?
}

/// 
open class GatewayRouteHttpGatewayRoutePrefixRewrite {
    Value: (String|Mapping)?
    DefaultPrefix: (String|Mapping)?
}

/// 
open class GatewayRouteTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class GatewayRouteGatewayRouteVirtualService {
    VirtualServiceName: String|Mapping
}

/// 
open class GatewayRouteHttpGatewayRouteMatch {
    Port: (Int|Mapping)?
    Hostname: (GatewayRouteGatewayRouteHostnameMatch)?
    Prefix: (String|Mapping)?
    Method: (String|Mapping)?
    QueryParameters: (Listing<GatewayRouteQueryParameter>)?
    Path: (GatewayRouteHttpPathMatch)?
    Headers: (Listing<GatewayRouteHttpGatewayRouteHeader>)?
}

/// 
open class GatewayRouteQueryParameter {
    Match: (GatewayRouteHttpQueryParameterMatch)?
    Name: String|Mapping
}

/// 
open class GatewayRouteGrpcGatewayRouteMetadata {
    Invert: (Boolean|Mapping)?
    Name: String|Mapping
    Match: (GatewayRouteGatewayRouteMetadataMatch)?
}

/// 
open class GatewayRouteGatewayRouteHostnameMatch {
    Suffix: (String|Mapping)?
    Exact: (String|Mapping)?
}

/// 
open class GatewayRouteGrpcGatewayRoute {
    Action: GatewayRouteGrpcGatewayRouteAction
    Match: GatewayRouteGrpcGatewayRouteMatch
}

/// 
open class GatewayRouteHttpGatewayRoutePathRewrite {
    Exact: (String|Mapping)?
}

/// 
open class GatewayRouteGrpcGatewayRouteAction {
    Target: GatewayRouteGatewayRouteTarget
    Rewrite: (GatewayRouteGrpcGatewayRouteRewrite)?
}

/// 
open class GatewayRouteHttpGatewayRouteHeaderMatch {
    Range: (GatewayRouteGatewayRouteRangeMatch)?
    Suffix: (String|Mapping)?
    Exact: (String|Mapping)?
    Prefix: (String|Mapping)?
    Regex: (String|Mapping)?
}

/// 
open class GatewayRouteGatewayRouteRangeMatch {
    Start: Int|Mapping
    End: Int|Mapping
}

/// Resource Type definition for AWS::AppMesh::GatewayRoute
open class GatewayRoute extends cloudformation.Resource {

    Type = "AWS::AppMesh::GatewayRoute"


    /// 
    hidden VirtualGatewayName: String|Mapping

    /// 
    hidden MeshOwner: (String|Mapping)?

    /// 
    hidden Tags: (Listing<GatewayRouteTag>)?

    /// 
    hidden MeshName: String|Mapping

    /// 
    hidden GatewayRouteName: (String|Mapping)?

    /// 
    hidden Spec: GatewayRouteGatewayRouteSpec

    Properties {
        ["VirtualGatewayName"] = if (VirtualGatewayName == null) null else VirtualGatewayName
        ["MeshOwner"] = if (MeshOwner == null) null else MeshOwner
        ["Tags"] = if (Tags == null) null else Tags
        ["MeshName"] = if (MeshName == null) null else MeshName
        ["GatewayRouteName"] = if (GatewayRouteName == null) null else GatewayRouteName
        ["Spec"] = if (Spec == null) null else Spec
    }

}
