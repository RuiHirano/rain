/// AWS::AppSync::GraphQLApi
///
/// Generated by rain build --pkl-class AWS::AppSync::GraphQLApi
module aws.appsync.graphqlapi

import "../../cloudformation.pkl"

/// 
open class GraphQLApiCognitoUserPoolConfig {
    AppIdClientRegex: (String|Mapping)?
    UserPoolId: (String|Mapping)?
    AwsRegion: (String|Mapping)?
}

/// 
open class GraphQLApiEnhancedMetricsConfig {
    OperationLevelMetricsConfig: String|Mapping
    ResolverLevelMetricsBehavior: String|Mapping
    DataSourceLevelMetricsBehavior: String|Mapping
}

/// 
open class GraphQLApiLambdaAuthorizerConfig {
    IdentityValidationExpression: (String|Mapping)?
    AuthorizerUri: (String|Mapping)?
    AuthorizerResultTtlInSeconds: (Number|Mapping)?
}

/// 
open class GraphQLApiLogConfig {
    FieldLogLevel: (String|Mapping)?
    CloudWatchLogsRoleArn: (String|Mapping)?
    ExcludeVerboseContent: (Boolean|Mapping)?
}

/// 
open class GraphQLApiOpenIDConnectConfig {
    Issuer: (String|Mapping)?
    IatTTL: (Number|Mapping)?
    ClientId: (String|Mapping)?
    AuthTTL: (Number|Mapping)?
}

/// 
open class GraphQLApiTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class GraphQLApiUserPoolConfig {
    DefaultAction: (String|Mapping)?
    AppIdClientRegex: (String|Mapping)?
    UserPoolId: (String|Mapping)?
    AwsRegion: (String|Mapping)?
}

/// 
open class GraphQLApiAdditionalAuthenticationProvider {
    AuthenticationType: String|Mapping
    LambdaAuthorizerConfig: (GraphQLApiLambdaAuthorizerConfig)?
    OpenIDConnectConfig: (GraphQLApiOpenIDConnectConfig)?
    UserPoolConfig: (GraphQLApiCognitoUserPoolConfig)?
}

/// Resource Type definition for AWS::AppSync::GraphQLApi
open class GraphQLApi extends cloudformation.Resource {

    Type = "AWS::AppSync::GraphQLApi"


    /// 
    hidden AdditionalAuthenticationProviders: (Listing<GraphQLApiAdditionalAuthenticationProvider>)?

    /// 
    hidden ApiType: (String|Mapping)?

    /// 
    hidden AuthenticationType: String|Mapping

    /// 
    hidden EnhancedMetricsConfig: (GraphQLApiEnhancedMetricsConfig)?

    /// 
    hidden EnvironmentVariables: (Dynamic)?

    /// 
    hidden IntrospectionConfig: (String|Mapping)?

    /// 
    hidden LambdaAuthorizerConfig: (GraphQLApiLambdaAuthorizerConfig)?

    /// 
    hidden LogConfig: (GraphQLApiLogConfig)?

    /// 
    hidden MergedApiExecutionRoleArn: (String|Mapping)?

    /// 
    hidden Name: String|Mapping

    /// 
    hidden OpenIDConnectConfig: (GraphQLApiOpenIDConnectConfig)?

    /// 
    hidden OwnerContact: (String|Mapping)?

    /// 
    hidden QueryDepthLimit: (Int|Mapping)?

    /// 
    hidden ResolverCountLimit: (Int|Mapping)?

    /// 
    hidden Tags: (Listing<GraphQLApiTag>)?

    /// 
    hidden UserPoolConfig: (GraphQLApiUserPoolConfig)?

    /// 
    hidden Visibility: (String|Mapping)?

    /// 
    hidden XrayEnabled: (Boolean|Mapping)?

    Properties {
        ["AdditionalAuthenticationProviders"] = if (AdditionalAuthenticationProviders == null) null else AdditionalAuthenticationProviders
        ["ApiType"] = if (ApiType == null) null else ApiType
        ["AuthenticationType"] = if (AuthenticationType == null) null else AuthenticationType
        ["EnhancedMetricsConfig"] = if (EnhancedMetricsConfig == null) null else EnhancedMetricsConfig
        ["EnvironmentVariables"] = if (EnvironmentVariables == null) null else EnvironmentVariables
        ["IntrospectionConfig"] = if (IntrospectionConfig == null) null else IntrospectionConfig
        ["LambdaAuthorizerConfig"] = if (LambdaAuthorizerConfig == null) null else LambdaAuthorizerConfig
        ["LogConfig"] = if (LogConfig == null) null else LogConfig
        ["MergedApiExecutionRoleArn"] = if (MergedApiExecutionRoleArn == null) null else MergedApiExecutionRoleArn
        ["Name"] = if (Name == null) null else Name
        ["OpenIDConnectConfig"] = if (OpenIDConnectConfig == null) null else OpenIDConnectConfig
        ["OwnerContact"] = if (OwnerContact == null) null else OwnerContact
        ["QueryDepthLimit"] = if (QueryDepthLimit == null) null else QueryDepthLimit
        ["ResolverCountLimit"] = if (ResolverCountLimit == null) null else ResolverCountLimit
        ["Tags"] = if (Tags == null) null else Tags
        ["UserPoolConfig"] = if (UserPoolConfig == null) null else UserPoolConfig
        ["Visibility"] = if (Visibility == null) null else Visibility
        ["XrayEnabled"] = if (XrayEnabled == null) null else XrayEnabled
    }

}
