/// AWS::AuditManager::Assessment
///
/// Generated by rain build --pkl-class AWS::AuditManager::Assessment
module aws.auditmanager.assessment

import "../../cloudformation.pkl"

typealias AssessmentAssessmentStatus = String|Mapping


typealias AssessmentRoleType = String|Mapping


typealias AssessmentAssessmentDescription = String|Mapping


typealias AssessmentTimestamp = Number|Mapping


typealias AssessmentAssessmentReportDestinationType = String|Mapping


/// The wrapper that contains the AWS accounts and AWS services in scope for the assessment.
open class AssessmentScope {
    AwsAccounts: (Listing<AssessmentAWSAccount>)?
    AwsServices: (Listing<AssessmentAWSService>)?
}

/// The AWS account associated with the assessment.
open class AssessmentAWSAccount {
    Id: (AssessmentAccountId)?
    EmailAddress: (AssessmentEmailAddress)?
    Name: (AssessmentAccountName)?
}

typealias AssessmentCreatedBy = String|Mapping


typealias AssessmentDelegationStatus = String|Mapping


/// An AWS service such as Amazon S3, AWS CloudTrail, and so on.
open class AssessmentAWSService {
    ServiceName: (AssessmentAWSServiceName)?
}

typealias AssessmentUUID = String|Mapping


typealias AssessmentS3Url = String|Mapping


typealias AssessmentFrameworkId = String|Mapping


/// The destination in which evidence reports are stored for the specified assessment.
open class AssessmentAssessmentReportsDestination {
    Destination: (AssessmentS3Url)?
    DestinationType: (AssessmentAssessmentReportDestinationType)?
}

typealias AssessmentAssessmentArn = String|Mapping


typealias AssessmentControlSetId = String|Mapping


typealias AssessmentEmailAddress = String|Mapping


typealias AssessmentAssessmentName = String|Mapping


typealias AssessmentAccountId = String|Mapping


/// A key-value pair to associate with a resource.
open class AssessmentTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The assignment of a control set to a delegate for review.
open class AssessmentDelegation {
    LastUpdated: (AssessmentTimestamp)?
    CreatedBy: (AssessmentCreatedBy)?
    RoleArn: (AssessmentIamArn)?
    AssessmentName: (AssessmentAssessmentName)?
    AssessmentId: (AssessmentUUID)?
    ControlSetId: (AssessmentControlSetId)?
    CreationTime: (AssessmentTimestamp)?
    Comment: (AssessmentDelegationComment)?
    Id: (AssessmentUUID)?
    RoleType: (AssessmentRoleType)?
    Status: (AssessmentDelegationStatus)?
}

/// The wrapper that contains AWS Audit Manager role information, such as the role type and IAM ARN.
open class AssessmentRole {
    RoleArn: (AssessmentIamArn)?
    RoleType: (AssessmentRoleType)?
}

typealias AssessmentAWSServiceName = String|Mapping


typealias AssessmentDelegationComment = String|Mapping


typealias AssessmentAccountName = String|Mapping


typealias AssessmentIamArn = String|Mapping


/// An entity that defines the scope of audit evidence collected by AWS Audit Manager.
open class Assessment extends cloudformation.Resource {

    Type = "AWS::AuditManager::Assessment"


    /// The list of delegations.
    hidden Delegations: (Listing<AssessmentDelegation>)?

    /// 
    hidden Scope: (AssessmentScope)?

    /// 
    hidden Status: (AssessmentAssessmentStatus)?

    /// 
    hidden Name: (AssessmentAssessmentName)?

    /// 
    hidden FrameworkId: (AssessmentFrameworkId)?

    /// The tags associated with the assessment.
    hidden Tags: (Listing<AssessmentTag>)?

    /// 
    hidden AwsAccount: (AssessmentAWSAccount)?

    /// The list of roles for the specified assessment.
    hidden Roles: (Listing<AssessmentRole>)?

    /// 
    hidden AssessmentReportsDestination: (AssessmentAssessmentReportsDestination)?

    /// 
    hidden Description: (AssessmentAssessmentDescription)?

    Properties {
        ["Delegations"] = if (Delegations == null) null else Delegations
        ["Scope"] = if (Scope == null) null else Scope
        ["Status"] = if (Status == null) null else Status
        ["Name"] = if (Name == null) null else Name
        ["FrameworkId"] = if (FrameworkId == null) null else FrameworkId
        ["Tags"] = if (Tags == null) null else Tags
        ["AwsAccount"] = if (AwsAccount == null) null else AwsAccount
        ["Roles"] = if (Roles == null) null else Roles
        ["AssessmentReportsDestination"] = if (AssessmentReportsDestination == null) null else AssessmentReportsDestination
        ["Description"] = if (Description == null) null else Description
    }

}
