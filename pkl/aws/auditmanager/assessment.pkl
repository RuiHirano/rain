/// AWS::AuditManager::Assessment
///
/// Generated by rain build --pkl-class AWS::AuditManager::Assessment
module aws.auditmanager.assessment

import "../../cloudformation.pkl"

/// The destination type, such as Amazon S3.
open class AssessmentReportDestinationType {
}

/// The comment related to the delegation.
open class DelegationComment {
}

/// An AWS service such as Amazon S3, AWS CloudTrail, and so on.
open class AWSService {
    ServiceName: (AWSServiceName)?
}

/// The Amazon Resource Name (ARN) of the IAM user or role.
open class IamArn {
}

/// The identifier for the specified AWS account.
open class AccountId {
}

/// The sequence of characters that identifies when the event occurred.
open class Timestamp {
}

/// The identifier for the specified control set.
open class ControlSetId {
}

/// The wrapper that contains AWS Audit Manager role information, such as the role type and IAM ARN.
open class Role {
    RoleArn: (IamArn)?
    RoleType: (RoleType)?
}

/// The name of the AWS service.
open class AWSServiceName {
}

/// The URL of the specified Amazon S3 bucket.
open class S3Url {
}

/// The destination in which evidence reports are stored for the specified assessment.
open class AssessmentReportsDestination {
    Destination: (S3Url)?
    DestinationType: (AssessmentReportDestinationType)?
}

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class UUID {
}

/// The name of the specified AWS account.
open class AccountName {
}

/// The AWS account associated with the assessment.
open class AWSAccount {
    EmailAddress: (EmailAddress)?
    Name: (AccountName)?
    Id: (AccountId)?
}

/// The name of the related assessment.
open class AssessmentName {
}

/// The wrapper that contains the AWS accounts and AWS services in scope for the assessment.
open class Scope {
    AwsAccounts: (Listing<AWSAccount>)?
    AwsServices: (Listing<AWSService>)?
}

/// The status of the specified assessment. 
open class AssessmentStatus {
}

/// The unique identifier for the email account.
open class EmailAddress {
}

/// The Amazon Resource Name (ARN) of the assessment.
open class AssessmentArn {
}

///  The IAM role type.
open class RoleType {
}

/// The description of the specified assessment.
open class AssessmentDescription {
}

/// The identifier for the specified framework.
open class FrameworkId {
}

/// The assignment of a control set to a delegate for review.
open class Delegation {
    RoleArn: (IamArn)?
    AssessmentName: (AssessmentName)?
    LastUpdated: (Timestamp)?
    ControlSetId: (ControlSetId)?
    CreationTime: (Timestamp)?
    CreatedBy: (CreatedBy)?
    Comment: (DelegationComment)?
    Id: (UUID)?
    RoleType: (RoleType)?
    AssessmentId: (UUID)?
    Status: (DelegationStatus)?
}

/// The status of the delegation.
open class DelegationStatus {
}

/// The IAM user or role that performed the action.
open class CreatedBy {
}

/// An entity that defines the scope of audit evidence collected by AWS Audit Manager.
open class Assessment extends cloudformation.Resource {

    Type = "AWS::AuditManager::Assessment"


    /// 
    hidden AwsAccount: (AWSAccount)?

    /// The list of delegations.
    hidden Delegations: (Listing<Delegation>)?

    /// 
    hidden Status: (AssessmentStatus)?

    /// 
    hidden Scope: (Scope)?

    /// 
    hidden AssessmentReportsDestination: (AssessmentReportsDestination)?

    /// 
    hidden FrameworkId: (FrameworkId)?

    /// The tags associated with the assessment.
    hidden Tags: (Listing<Tag>)?

    /// The list of roles for the specified assessment.
    hidden Roles: (Listing<Role>)?

    /// 
    hidden Description: (AssessmentDescription)?

    /// 
    hidden Name: (AssessmentName)?

    Properties {
        ["AwsAccount"] = if (AwsAccount == null) null else AwsAccount
        ["Delegations"] = if (Delegations == null) null else Delegations
        ["Status"] = if (Status == null) null else Status
        ["Scope"] = if (Scope == null) null else Scope
        ["AssessmentReportsDestination"] = if (AssessmentReportsDestination == null) null else AssessmentReportsDestination
        ["FrameworkId"] = if (FrameworkId == null) null else FrameworkId
        ["Tags"] = if (Tags == null) null else Tags
        ["Roles"] = if (Roles == null) null else Roles
        ["Description"] = if (Description == null) null else Description
        ["Name"] = if (Name == null) null else Name
    }

}
