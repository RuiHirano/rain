/// AWS::AutoScaling::AutoScalingGroup
///
/// Generated by rain build --pkl-class AWS::AutoScaling::AutoScalingGroup
module aws.autoscaling.autoscalinggroup

import "../../cloudformation.pkl"

/// 
open class BaselineEbsBandwidthMbpsRequest {
    Min: (Int|Mapping)?
    Max: (Int|Mapping)?
}

/// 
open class LaunchTemplateOverrides {
    LaunchTemplateSpecification: (LaunchTemplateSpecification)?
    WeightedCapacity: (String|Mapping)?
    InstanceRequirements: (InstanceRequirements)?
    InstanceType: (String|Mapping)?
}

/// 
open class AcceleratorTotalMemoryMiBRequest {
    Min: (Int|Mapping)?
    Max: (Int|Mapping)?
}

/// 
open class InstanceRequirements {
    LocalStorageTypes: (Listing<String|Mapping>)?
    AllowedInstanceTypes: (Listing<String|Mapping>)?
    CpuManufacturers: (Listing<String|Mapping>)?
    RequireHibernateSupport: (Boolean|Mapping)?
    SpotMaxPricePercentageOverLowestPrice: (Int|Mapping)?
    AcceleratorTypes: (Listing<String|Mapping>)?
    VCpuCount: VCpuCountRequest
    NetworkBandwidthGbps: (NetworkBandwidthGbpsRequest)?
    MaxSpotPriceAsPercentageOfOptimalOnDemandPrice: (Int|Mapping)?
    AcceleratorTotalMemoryMiB: (AcceleratorTotalMemoryMiBRequest)?
    OnDemandMaxPricePercentageOverLowestPrice: (Int|Mapping)?
    MemoryMiB: MemoryMiBRequest
    InstanceGenerations: (Listing<String|Mapping>)?
    MemoryGiBPerVCpu: (MemoryGiBPerVCpuRequest)?
    BareMetal: (String|Mapping)?
    AcceleratorNames: (Listing<String|Mapping>)?
    TotalLocalStorageGB: (TotalLocalStorageGBRequest)?
    NetworkInterfaceCount: (NetworkInterfaceCountRequest)?
    AcceleratorManufacturers: (Listing<String|Mapping>)?
    ExcludedInstanceTypes: (Listing<String|Mapping>)?
    LocalStorage: (String|Mapping)?
    AcceleratorCount: (AcceleratorCountRequest)?
    BaselineEbsBandwidthMbps: (BaselineEbsBandwidthMbpsRequest)?
    BurstablePerformance: (String|Mapping)?
}

/// 
open class TotalLocalStorageGBRequest {
    Max: (Number|Mapping)?
    Min: (Number|Mapping)?
}

/// 
open class NetworkBandwidthGbpsRequest {
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
}

/// 
open class MemoryGiBPerVCpuRequest {
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
}

/// 
open class InstanceMaintenancePolicy {
    MaxHealthyPercentage: (Int|Mapping)?
    MinHealthyPercentage: (Int|Mapping)?
}

/// 
open class MixedInstancesPolicy {
    InstancesDistribution: (InstancesDistribution)?
    LaunchTemplate: LaunchTemplate
}

/// 
open class InstancesDistribution {
    OnDemandAllocationStrategy: (String|Mapping)?
    OnDemandBaseCapacity: (Int|Mapping)?
    OnDemandPercentageAboveBaseCapacity: (Int|Mapping)?
    SpotInstancePools: (Int|Mapping)?
    SpotAllocationStrategy: (String|Mapping)?
    SpotMaxPrice: (String|Mapping)?
}

/// 
open class AcceleratorCountRequest {
    Min: (Int|Mapping)?
    Max: (Int|Mapping)?
}

/// 
open class LifecycleHookSpecification {
    LifecycleTransition: String|Mapping
    HeartbeatTimeout: (Int|Mapping)?
    NotificationMetadata: (String|Mapping)?
    DefaultResult: (String|Mapping)?
    NotificationTargetARN: (String|Mapping)?
    RoleARN: (String|Mapping)?
    LifecycleHookName: String|Mapping
}

/// 
open class NotificationConfiguration {
    NotificationTypes: (Listing<String|Mapping>)?
    TopicARN: Dynamic
}

/// 
open class MemoryMiBRequest {
    Max: (Int|Mapping)?
    Min: (Int|Mapping)?
}

/// 
open class NetworkInterfaceCountRequest {
    Min: (Int|Mapping)?
    Max: (Int|Mapping)?
}

/// 
open class TagProperty {
    Value: String|Mapping
    Key: String|Mapping
    PropagateAtLaunch: Boolean|Mapping
}

/// 
open class LaunchTemplateSpecification {
    LaunchTemplateName: (String|Mapping)?
    Version: String|Mapping
    LaunchTemplateId: (String|Mapping)?
}

/// 
open class LaunchTemplate {
    LaunchTemplateSpecification: LaunchTemplateSpecification
    Overrides: (Listing<LaunchTemplateOverrides>)?
}

/// 
open class MetricsCollection {
    Metrics: (Listing<String|Mapping>)?
    Granularity: String|Mapping
}

/// 
open class VCpuCountRequest {
    Min: (Int|Mapping)?
    Max: (Int|Mapping)?
}

/// Resource Type definition for AWS::AutoScaling::AutoScalingGroup
open class AutoScalingGroup extends cloudformation.Resource {

    Type = "AWS::AutoScaling::AutoScalingGroup"


    /// 
    hidden InstanceMaintenancePolicy: (InstanceMaintenancePolicy)?

    /// 
    hidden DesiredCapacityType: (String|Mapping)?

    /// 
    hidden LaunchConfigurationName: (String|Mapping)?

    /// 
    hidden DesiredCapacity: (String(matches(Regex(#"^[0-9]+$"#)))|Mapping)?

    /// 
    hidden InstanceId: (String|Mapping)?

    /// 
    hidden MetricsCollection: (Listing<MetricsCollection>)?

    /// 
    hidden LaunchTemplate: (LaunchTemplateSpecification)?

    /// 
    hidden Context: (String|Mapping)?

    /// 
    hidden MaxSize: String(matches(Regex(#"^[0-9]+$"#)))|Mapping

    /// 
    hidden TerminationPolicies: (Listing<String|Mapping>)?

    /// 
    hidden ServiceLinkedRoleARN: (String|Mapping)?

    /// 
    hidden HealthCheckGracePeriod: (Int|Mapping)?

    /// 
    hidden Cooldown: (String|Mapping)?

    /// 
    hidden NewInstancesProtectedFromScaleIn: (Boolean|Mapping)?

    /// 
    hidden AvailabilityZones: (Listing<String|Mapping>)?

    /// 
    hidden AutoScalingGroupName: (String|Mapping)?

    /// 
    hidden MixedInstancesPolicy: (MixedInstancesPolicy)?

    /// 
    hidden VPCZoneIdentifier: (Listing<String|Mapping>)?

    /// 
    hidden HealthCheckType: (String|Mapping)?

    /// 
    hidden LifecycleHookSpecificationList: (Listing<LifecycleHookSpecification>)?

    /// 
    hidden NotificationConfigurations: (Listing<NotificationConfiguration>)?

    /// 
    hidden CapacityRebalance: (Boolean|Mapping)?

    /// 
    hidden MinSize: String(matches(Regex(#"^[0-9]+$"#)))|Mapping

    /// 
    hidden LoadBalancerNames: (Listing<String|Mapping>)?

    /// 
    hidden DefaultInstanceWarmup: (Int|Mapping)?

    /// 
    hidden PlacementGroup: (String|Mapping)?

    /// 
    hidden MaxInstanceLifetime: (Int|Mapping)?

    /// 
    hidden TargetGroupARNs: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<TagProperty>)?

    /// 
    hidden NotificationConfiguration: (NotificationConfiguration)?

    Properties {
        ["InstanceMaintenancePolicy"] = if (InstanceMaintenancePolicy == null) null else InstanceMaintenancePolicy
        ["DesiredCapacityType"] = if (DesiredCapacityType == null) null else DesiredCapacityType
        ["LaunchConfigurationName"] = if (LaunchConfigurationName == null) null else LaunchConfigurationName
        ["DesiredCapacity"] = if (DesiredCapacity == null) null else DesiredCapacity
        ["InstanceId"] = if (InstanceId == null) null else InstanceId
        ["MetricsCollection"] = if (MetricsCollection == null) null else MetricsCollection
        ["LaunchTemplate"] = if (LaunchTemplate == null) null else LaunchTemplate
        ["Context"] = if (Context == null) null else Context
        ["MaxSize"] = if (MaxSize == null) null else MaxSize
        ["TerminationPolicies"] = if (TerminationPolicies == null) null else TerminationPolicies
        ["ServiceLinkedRoleARN"] = if (ServiceLinkedRoleARN == null) null else ServiceLinkedRoleARN
        ["HealthCheckGracePeriod"] = if (HealthCheckGracePeriod == null) null else HealthCheckGracePeriod
        ["Cooldown"] = if (Cooldown == null) null else Cooldown
        ["NewInstancesProtectedFromScaleIn"] = if (NewInstancesProtectedFromScaleIn == null) null else NewInstancesProtectedFromScaleIn
        ["AvailabilityZones"] = if (AvailabilityZones == null) null else AvailabilityZones
        ["AutoScalingGroupName"] = if (AutoScalingGroupName == null) null else AutoScalingGroupName
        ["MixedInstancesPolicy"] = if (MixedInstancesPolicy == null) null else MixedInstancesPolicy
        ["VPCZoneIdentifier"] = if (VPCZoneIdentifier == null) null else VPCZoneIdentifier
        ["HealthCheckType"] = if (HealthCheckType == null) null else HealthCheckType
        ["LifecycleHookSpecificationList"] = if (LifecycleHookSpecificationList == null) null else LifecycleHookSpecificationList
        ["NotificationConfigurations"] = if (NotificationConfigurations == null) null else NotificationConfigurations
        ["CapacityRebalance"] = if (CapacityRebalance == null) null else CapacityRebalance
        ["MinSize"] = if (MinSize == null) null else MinSize
        ["LoadBalancerNames"] = if (LoadBalancerNames == null) null else LoadBalancerNames
        ["DefaultInstanceWarmup"] = if (DefaultInstanceWarmup == null) null else DefaultInstanceWarmup
        ["PlacementGroup"] = if (PlacementGroup == null) null else PlacementGroup
        ["MaxInstanceLifetime"] = if (MaxInstanceLifetime == null) null else MaxInstanceLifetime
        ["TargetGroupARNs"] = if (TargetGroupARNs == null) null else TargetGroupARNs
        ["Tags"] = if (Tags == null) null else Tags
        ["NotificationConfiguration"] = if (NotificationConfiguration == null) null else NotificationConfiguration
    }

}
