/// AWS::Backup::BackupPlan
///
/// Generated by rain build --pkl-class AWS::Backup::BackupPlan
module aws.backup.backupplan

import "../../cloudformation.pkl"

/// 
open class BackupPlanAdvancedBackupSettingResourceType {
    BackupOptions: Dynamic
    ResourceType: String|Mapping
}

/// 
open class BackupPlanBackupPlanResourceType {
    BackupPlanName: String|Mapping
    AdvancedBackupSettings: (Listing<BackupPlanAdvancedBackupSettingResourceType>)?
    BackupPlanRule: Listing<BackupPlanBackupRuleResourceType>
}

typealias BackupPlanBackupRuleResourceTypeRecoveryPointTags = Mapping<String, Any>

/// 
open class BackupPlanBackupRuleResourceType {
    EnableContinuousBackup: (Boolean|Mapping)?
    RuleName: String|Mapping
    StartWindowMinutes: (Number|Mapping)?
    CompletionWindowMinutes: (Number|Mapping)?
    ScheduleExpressionTimezone: (String|Mapping)?
    RecoveryPointTags: (BackupPlanBackupRuleResourceTypeRecoveryPointTags)?
    Lifecycle: (BackupPlanLifecycleResourceType)?
    TargetBackupVault: String|Mapping
    ScheduleExpression: (String|Mapping)?
    CopyActions: (Listing<BackupPlanCopyActionResourceType>)?
}

/// 
open class BackupPlanCopyActionResourceType {
    Lifecycle: (BackupPlanLifecycleResourceType)?
    DestinationBackupVaultArn: String|Mapping
}

/// 
open class BackupPlanLifecycleResourceType {
    MoveToColdStorageAfterDays: (Number|Mapping)?
    DeleteAfterDays: (Number|Mapping)?
    OptInToArchiveForSupportedResources: (Boolean|Mapping)?
}

/// Resource Type definition for AWS::Backup::BackupPlan
open class BackupPlan extends cloudformation.Resource {

    Type = "AWS::Backup::BackupPlan"


    /// 
    hidden BackupPlan: BackupPlanBackupPlanResourceType

    /// 
    hidden BackupPlanTags: (BackupPlanBackupPlanBackupPlanTags)?

    Properties {
        ["BackupPlan"] = if (BackupPlan == null) null else BackupPlan
        ["BackupPlanTags"] = if (BackupPlanTags == null) null else BackupPlanTags
    }

}


typealias BackupPlanBackupPlanBackupPlanTags = Mapping<String, Any>
