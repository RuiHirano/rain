/// AWS::Backup::BackupVault
///
/// Generated by rain build --pkl-class AWS::Backup::BackupVault
module aws.backup.backupvault

import "../../cloudformation.pkl"

/// 
open class BackupVaultLockConfigurationType {
    MinRetentionDays: Int|Mapping
    MaxRetentionDays: (Int|Mapping)?
    ChangeableForDays: (Int|Mapping)?
}

typealias BackupVaultBackupVaultNamePattern = String|Mapping


/// 
open class BackupVaultNotificationObjectType {
    BackupVaultEvents: Listing<String|Mapping>
    SNSTopicArn: String|Mapping
}

/// Resource Type definition for AWS::Backup::BackupVault
open class BackupVault extends cloudformation.Resource {

    Type = "AWS::Backup::BackupVault"


    /// 
    hidden BackupVaultTags: (BackupVaultBackupVaultBackupVaultTags)?

    /// 
    hidden EncryptionKeyArn: (String|Mapping)?

    /// 
    hidden Notifications: (BackupVaultNotificationObjectType)?

    /// 
    hidden LockConfiguration: (BackupVaultLockConfigurationType)?

    /// 
    hidden AccessPolicy: (Dynamic)?

    /// 
    hidden BackupVaultName: BackupVaultBackupVaultNamePattern

    Properties {
        ["BackupVaultTags"] = if (BackupVaultTags == null) null else BackupVaultTags
        ["EncryptionKeyArn"] = if (EncryptionKeyArn == null) null else EncryptionKeyArn
        ["Notifications"] = if (Notifications == null) null else Notifications
        ["LockConfiguration"] = if (LockConfiguration == null) null else LockConfiguration
        ["AccessPolicy"] = if (AccessPolicy == null) null else AccessPolicy
        ["BackupVaultName"] = if (BackupVaultName == null) null else BackupVaultName
    }

}


typealias BackupVaultBackupVaultBackupVaultTags = Mapping<String, Any>
