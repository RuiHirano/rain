/// AWS::Budgets::Budget
///
/// Generated by rain build --pkl-class AWS::Budgets::Budget
module aws.budgets.budget

import "../../cloudformation.pkl"

/// 
open class BudgetTimePeriod {
    Start: (String|Mapping)?
    End: (String|Mapping)?
}

/// 
open class BudgetSpend {
    Unit: String|Mapping
    Amount: Number|Mapping
}

/// 
open class BudgetNotificationWithSubscribers {
    Subscribers: Listing<BudgetSubscriber>
    Notification: BudgetNotification
}

/// 
open class BudgetNotification {
    ComparisonOperator: String|Mapping
    NotificationType: String|Mapping
    Threshold: Number|Mapping
    ThresholdType: (String|Mapping)?
}

/// 
open class BudgetCostTypes {
    IncludeTax: (Boolean|Mapping)?
    IncludeSubscription: (Boolean|Mapping)?
    IncludeUpfront: (Boolean|Mapping)?
    IncludeDiscount: (Boolean|Mapping)?
    IncludeCredit: (Boolean|Mapping)?
    IncludeRecurring: (Boolean|Mapping)?
    IncludeSupport: (Boolean|Mapping)?
    IncludeOtherSubscription: (Boolean|Mapping)?
    UseBlended: (Boolean|Mapping)?
    UseAmortized: (Boolean|Mapping)?
    IncludeRefund: (Boolean|Mapping)?
}

/// 
open class BudgetHistoricalOptions {
    BudgetAdjustmentPeriod: Int|Mapping
}

/// 
open class BudgetAutoAdjustData {
    AutoAdjustType: String|Mapping
    HistoricalOptions: (BudgetHistoricalOptions)?
}

/// 
open class BudgetSubscriber {
    Address: String|Mapping
    SubscriptionType: String|Mapping
}

/// 
open class BudgetBudgetData {
    AutoAdjustData: (BudgetAutoAdjustData)?
    PlannedBudgetLimits: (Dynamic)?
    CostFilters: (Dynamic)?
    BudgetName: (String|Mapping)?
    CostTypes: (BudgetCostTypes)?
    BudgetLimit: (BudgetSpend)?
    TimePeriod: (BudgetTimePeriod)?
    TimeUnit: String|Mapping
    BudgetType: String|Mapping
}

/// Resource Type definition for AWS::Budgets::Budget
open class Budget extends cloudformation.Resource {

    Type = "AWS::Budgets::Budget"


    /// 
    hidden NotificationsWithSubscribers: (Listing<BudgetNotificationWithSubscribers>)?

    /// 
    hidden Budget: BudgetBudgetData

    Properties {
        ["NotificationsWithSubscribers"] = if (NotificationsWithSubscribers == null) null else NotificationsWithSubscribers
        ["Budget"] = if (Budget == null) null else Budget
    }

}
