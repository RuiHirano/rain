/// AWS::Cassandra::Table
///
/// Generated by rain build --pkl-class AWS::Cassandra::Table
module aws.cassandra.table

import "../../cloudformation.pkl"

/// Represents replica specifications.
open class TableReplicaSpecification {
    ReadCapacityUnits: (Int|Mapping)?
    ReadCapacityAutoScaling: (TableAutoScalingSetting)?
    Region: String|Mapping
}

typealias TableKmsKeyIdentifier = String|Mapping


/// Throughput for the specified table, which consists of values for ReadCapacityUnits and WriteCapacityUnits
open class TableProvisionedThroughput {
    ReadCapacityUnits: Int|Mapping
    WriteCapacityUnits: Int|Mapping
}

/// 
open class TableColumn {
    ColumnName: String(matches(Regex(#"^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"#)))|Mapping
    ColumnType: String|Mapping
}

/// Represents configuration for target tracking scaling policy.
open class TableTargetTrackingScalingPolicyConfiguration {
    ScaleOutCooldown: (Int|Mapping)?
    TargetValue: Int|Mapping
    DisableScaleIn: (Boolean|Mapping)?
    ScaleInCooldown: (Int|Mapping)?
}

typealias TableEncryptionType = String|Mapping


/// 
open class TableBillingMode {
    Mode: TableMode
    ProvisionedThroughput: (TableProvisionedThroughput)?
}

/// Represents configuration for auto scaling.
open class TableAutoScalingSetting {
    AutoScalingDisabled: (Boolean|Mapping)?
    MinimumUnits: (Int|Mapping)?
    MaximumUnits: (Int|Mapping)?
    ScalingPolicy: (TableScalingPolicy)?
}

/// Represents the settings used to enable server-side encryption
open class TableEncryptionSpecification {
    EncryptionType: TableEncryptionType
    KmsKeyIdentifier: (TableKmsKeyIdentifier)?
}

/// Represents the read and write settings used for AutoScaling.
open class TableAutoScalingSpecification {
    ReadCapacityAutoScaling: (TableAutoScalingSetting)?
    WriteCapacityAutoScaling: (TableAutoScalingSetting)?
}

/// Represents scaling policy.
open class TableScalingPolicy {
    TargetTrackingScalingPolicyConfiguration: (TableTargetTrackingScalingPolicyConfiguration)?
}

/// A key-value pair to apply to the resource
open class TableTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias ClusteringKeyColumnOrderBy = "ASC"|"DESC"

/// 
open class TableClusteringKeyColumn {
    Column: TableColumn
    OrderBy: (ClusteringKeyColumnOrderBy|Mapping)?
}

typealias TableMode = String|Mapping


/// Resource schema for AWS::Cassandra::Table
open class Table extends cloudformation.Resource {

    Type = "AWS::Cassandra::Table"


    /// Non-key columns of the table
    hidden RegularColumns: (Listing<TableColumn>)?

    /// Clustering key columns of the table
    hidden ClusteringKeyColumns: (Listing<TableClusteringKeyColumn>)?

    /// Name for Cassandra keyspace
    hidden KeyspaceName: String(matches(Regex(#"^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"#)))|Mapping

    /// Indicates whether client side timestamps are enabled (true) or disabled (false) on the table. False by default, once it is enabled it cannot be disabled again.
    hidden ClientSideTimestampsEnabled: (Boolean|Mapping)?

    /// An array of key-value pairs to apply to this resource
    hidden Tags: (Listing<TableTag>)?

    /// Default TTL (Time To Live) in seconds, where zero is disabled. If the value is greater than zero, TTL is enabled for the entire table and an expiration timestamp is added to each column.
    hidden DefaultTimeToLive: (Int|Mapping)?

    /// 
    hidden EncryptionSpecification: (TableEncryptionSpecification)?

    /// 
    hidden AutoScalingSpecifications: (TableAutoScalingSpecification)?

    /// Indicates whether point in time recovery is enabled (true) or disabled (false) on the table
    hidden PointInTimeRecoveryEnabled: (Boolean|Mapping)?

    /// 
    hidden BillingMode: (TableBillingMode)?

    /// Partition key columns of the table
    hidden PartitionKeyColumns: Listing<TableColumn>

    /// 
    hidden ReplicaSpecifications: (Listing<TableReplicaSpecification>)?

    /// Name for Cassandra table
    hidden TableName: (String(matches(Regex(#"^[a-zA-Z0-9][a-zA-Z0-9_]{1,47}$"#)))|Mapping)?

    Properties {
        ["RegularColumns"] = if (RegularColumns == null) null else RegularColumns
        ["ClusteringKeyColumns"] = if (ClusteringKeyColumns == null) null else ClusteringKeyColumns
        ["KeyspaceName"] = if (KeyspaceName == null) null else KeyspaceName
        ["ClientSideTimestampsEnabled"] = if (ClientSideTimestampsEnabled == null) null else ClientSideTimestampsEnabled
        ["Tags"] = if (Tags == null) null else Tags
        ["DefaultTimeToLive"] = if (DefaultTimeToLive == null) null else DefaultTimeToLive
        ["EncryptionSpecification"] = if (EncryptionSpecification == null) null else EncryptionSpecification
        ["AutoScalingSpecifications"] = if (AutoScalingSpecifications == null) null else AutoScalingSpecifications
        ["PointInTimeRecoveryEnabled"] = if (PointInTimeRecoveryEnabled == null) null else PointInTimeRecoveryEnabled
        ["BillingMode"] = if (BillingMode == null) null else BillingMode
        ["PartitionKeyColumns"] = if (PartitionKeyColumns == null) null else PartitionKeyColumns
        ["ReplicaSpecifications"] = if (ReplicaSpecifications == null) null else ReplicaSpecifications
        ["TableName"] = if (TableName == null) null else TableName
    }

}
