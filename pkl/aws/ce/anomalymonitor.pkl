/// AWS::CE::AnomalyMonitor
///
/// Generated by rain build --pkl-class AWS::CE::AnomalyMonitor
module aws.ce.anomalymonitor

import "../../cloudformation.pkl"

typealias AnomalyMonitorArn = String|Mapping


/// A key-value pair to associate with a resource.
open class AnomalyMonitorResourceTag {
    Value: String|Mapping
    Key: String(matches(Regex(#"^(?!aws:).*$"#)))|Mapping
}

/// AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. You can use Cost Anomaly Detection by creating monitor.
open class AnomalyMonitor extends cloudformation.Resource {

    Type = "AWS::CE::AnomalyMonitor"


    /// Tags to assign to monitor.
    hidden ResourceTags: (Listing<AnomalyMonitorResourceTag>)?

    /// 
    hidden MonitorType: AnomalyMonitorMonitorType|Mapping

    /// The name of the monitor.
    hidden MonitorName: String(matches(Regex(#"[\S\s]*"#)))|Mapping

    /// The dimensions to evaluate
    hidden MonitorDimension: (AnomalyMonitorMonitorDimension|Mapping)?

    /// 
    hidden MonitorSpecification: (String|Mapping)?

    Properties {
        ["ResourceTags"] = if (ResourceTags == null) null else ResourceTags
        ["MonitorType"] = if (MonitorType == null) null else MonitorType
        ["MonitorName"] = if (MonitorName == null) null else MonitorName
        ["MonitorDimension"] = if (MonitorDimension == null) null else MonitorDimension
        ["MonitorSpecification"] = if (MonitorSpecification == null) null else MonitorSpecification
    }

}


typealias AnomalyMonitorMonitorType = "DIMENSIONAL"|"CUSTOM"

typealias AnomalyMonitorMonitorDimension = "SERVICE"
