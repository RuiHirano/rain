/// AWS::CE::AnomalySubscription
///
/// Generated by rain build --pkl-class AWS::CE::AnomalySubscription
module aws.ce.anomalysubscription

import "../../cloudformation.pkl"

/// Subscription ARN
open class Arn {
}

typealias SubscriberStatus = "CONFIRMED"|"DECLINED"

typealias SubscriberType = "EMAIL"|"SNS"

/// 
open class Subscriber {
    Address: String(matches(Regex(#"(^[a-zA-Z0-9.!#$%&'*+=?^_â€˜{|}~-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+(\.fifo)?$)"#)))|Mapping
    Status: (SubscriberStatus|Mapping)?
    Type: SubscriberType|Mapping
}

/// A key-value pair to associate with a resource.
open class ResourceTag {
    Key: String(matches(Regex(#"^(?!aws:).*$"#)))|Mapping
    Value: String|Mapping
}

/// AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
open class AnomalySubscription extends cloudformation.Resource {

    Type = "AWS::CE::AnomalySubscription"


    /// A list of subscriber
    hidden Subscribers: Listing<Subscriber>

    /// The dollar value that triggers a notification if the threshold is exceeded. 
    hidden Threshold: (Number|Mapping)?

    /// Tags to assign to subscription.
    hidden ResourceTags: (Listing<ResourceTag>)?

    /// The name of the subscription.
    hidden SubscriptionName: String(matches(Regex(#"[\S\s]*"#)))|Mapping

    /// A list of cost anomaly monitors.
    hidden MonitorArnList: Listing<Arn>

    /// An Expression object in JSON String format used to specify the anomalies that you want to generate alerts for.
    hidden ThresholdExpression: (String|Mapping)?

    /// The frequency at which anomaly reports are sent over email. 
    hidden Frequency: AnomalySubscriptionFrequency|Mapping

    Properties {
        ["Subscribers"] = if (Subscribers == null) null else Subscribers
        ["Threshold"] = if (Threshold == null) null else Threshold
        ["ResourceTags"] = if (ResourceTags == null) null else ResourceTags
        ["SubscriptionName"] = if (SubscriptionName == null) null else SubscriptionName
        ["MonitorArnList"] = if (MonitorArnList == null) null else MonitorArnList
        ["ThresholdExpression"] = if (ThresholdExpression == null) null else ThresholdExpression
        ["Frequency"] = if (Frequency == null) null else Frequency
    }

}


typealias AnomalySubscriptionFrequency = "DAILY"|"IMMEDIATE"|"WEEKLY"
