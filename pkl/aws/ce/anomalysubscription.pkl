/// AWS::CE::AnomalySubscription
///
/// Generated by rain build --pkl-class AWS::CE::AnomalySubscription
module aws.ce.anomalysubscription

import "../../cloudformation.pkl"

typealias SubscriberStatus = "CONFIRMED"|"DECLINED"

typealias SubscriberType = "EMAIL"|"SNS"

/// 
open class AnomalySubscriptionSubscriber {
    Address: String(matches(Regex(#"(^[a-zA-Z0-9.!#$%&'*+=?^_â€˜{|}~-]+@[a-zA-Z0-9_-]+(\.[a-zA-Z0-9_-]+)+$)|(^arn:(aws[a-zA-Z-]*):sns:[a-zA-Z0-9-]+:[0-9]{12}:[a-zA-Z0-9_-]+(\.fifo)?$)"#)))|Mapping
    Status: (SubscriberStatus|Mapping)?
    Type: SubscriberType|Mapping
}

/// A key-value pair to associate with a resource.
open class AnomalySubscriptionResourceTag {
    Key: String(matches(Regex(#"^(?!aws:).*$"#)))|Mapping
    Value: String|Mapping
}

typealias AnomalySubscriptionArn = String|Mapping


/// AWS Cost Anomaly Detection leverages advanced Machine Learning technologies to identify anomalous spend and root causes, so you can quickly take action. Create subscription to be notified
open class AnomalySubscription extends cloudformation.Resource {

    Type = "AWS::CE::AnomalySubscription"


    /// The name of the subscription.
    hidden SubscriptionName: String(matches(Regex(#"[\S\s]*"#)))|Mapping

    /// The dollar value that triggers a notification if the threshold is exceeded. 
    hidden Threshold: (Number|Mapping)?

    /// An Expression object in JSON String format used to specify the anomalies that you want to generate alerts for.
    hidden ThresholdExpression: (String|Mapping)?

    /// Tags to assign to subscription.
    hidden ResourceTags: (Listing<AnomalySubscriptionResourceTag>)?

    /// A list of cost anomaly monitors.
    hidden MonitorArnList: Listing<AnomalySubscriptionArn>

    /// A list of subscriber
    hidden Subscribers: Listing<AnomalySubscriptionSubscriber>

    /// The frequency at which anomaly reports are sent over email. 
    hidden Frequency: AnomalySubscriptionFrequency|Mapping

    Properties {
        ["SubscriptionName"] = if (SubscriptionName == null) null else SubscriptionName
        ["Threshold"] = if (Threshold == null) null else Threshold
        ["ThresholdExpression"] = if (ThresholdExpression == null) null else ThresholdExpression
        ["ResourceTags"] = if (ResourceTags == null) null else ResourceTags
        ["MonitorArnList"] = if (MonitorArnList == null) null else MonitorArnList
        ["Subscribers"] = if (Subscribers == null) null else Subscribers
        ["Frequency"] = if (Frequency == null) null else Frequency
    }

}


typealias AnomalySubscriptionFrequency = "DAILY"|"IMMEDIATE"|"WEEKLY"
