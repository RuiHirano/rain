/// AWS::CertificateManager::Certificate
///
/// Generated by rain build --pkl-class AWS::CertificateManager::Certificate
module aws.certificatemanager.certificate

import "../../cloudformation.pkl"

/// 
open class DomainValidationOption {
    DomainName: String|Mapping
    ValidationDomain: (String|Mapping)?
    HostedZoneId: (String|Mapping)?
}

/// 
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Resource Type definition for AWS::CertificateManager::Certificate
open class Certificate extends cloudformation.Resource {

    Type = "AWS::CertificateManager::Certificate"


    /// 
    hidden CertificateAuthorityArn: (String|Mapping)?

    /// 
    hidden DomainName: String|Mapping

    /// 
    hidden ValidationMethod: (String|Mapping)?

    /// 
    hidden SubjectAlternativeNames: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden KeyAlgorithm: (String|Mapping)?

    /// 
    hidden DomainValidationOptions: (Listing<DomainValidationOption>)?

    /// 
    hidden CertificateTransparencyLoggingPreference: (String|Mapping)?

    Properties {
        ["CertificateAuthorityArn"] = if (CertificateAuthorityArn == null) null else CertificateAuthorityArn
        ["DomainName"] = if (DomainName == null) null else DomainName
        ["ValidationMethod"] = if (ValidationMethod == null) null else ValidationMethod
        ["SubjectAlternativeNames"] = if (SubjectAlternativeNames == null) null else SubjectAlternativeNames
        ["Tags"] = if (Tags == null) null else Tags
        ["KeyAlgorithm"] = if (KeyAlgorithm == null) null else KeyAlgorithm
        ["DomainValidationOptions"] = if (DomainValidationOptions == null) null else DomainValidationOptions
        ["CertificateTransparencyLoggingPreference"] = if (CertificateTransparencyLoggingPreference == null) null else CertificateTransparencyLoggingPreference
    }

}
