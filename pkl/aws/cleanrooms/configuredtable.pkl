/// AWS::CleanRooms::ConfiguredTable
///
/// Generated by rain build --pkl-class AWS::CleanRooms::ConfiguredTable
module aws.cleanrooms.configuredtable

import "../../cloudformation.pkl"

/// 
open class TableReference {
    Glue: GlueTableReference
}

/// 
open class AggregateFunctionName {
}

/// 
open class AnalysisMethod {
}

/// 
open class AnalysisRuleList {
    JoinColumns: Listing<AnalysisRuleColumnName>
    AllowedJoinOperators: (Listing<JoinOperator>)?
    ListColumns: Listing<AnalysisRuleColumnName>
}

/// 
open class AnalysisRuleCustom {
    AllowedAnalyses: AllowedAnalyses
    AllowedAnalysisProviders: (AllowedAnalysisProviders)?
}

/// 
open class AnalysisRule {
    Type: ConfiguredTableAnalysisRuleType
    Policy: ConfiguredTableAnalysisRulePolicy
}

/// 
open class AggregateColumn {
    ColumnNames: Listing<AnalysisRuleColumnName>
    Function: AggregateFunctionName
}

/// 
open class AllowedAnalysisProvider {
}

/// 
open class ConfiguredTableAnalysisRulePolicy {
    V1: ConfiguredTableAnalysisRulePolicyV1
}

/// 
open class GlueTableReference {
    TableName: String(matches(Regex(#"^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$"#)))|Mapping
    DatabaseName: String(matches(Regex(#"^[a-zA-Z0-9_](([a-zA-Z0-9_ ]+-)*([a-zA-Z0-9_ ]+))?$"#)))|Mapping
}

/// 
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class AnalysisRuleColumnName {
}

/// 
open class AggregationConstraint {
    ColumnName: AnalysisRuleColumnName
    Minimum: Number|Mapping
    Type: AggregationType
}

/// 
open class AggregationType {
}

/// 
open class AllowedAnalysisProviders {
}

/// 
open class ConfiguredTableAnalysisRulePolicyV1 {
}

/// 
open class AllowedAnalyses {
}

/// 
open class ConfiguredTableAnalysisRuleType {
}

/// 
open class JoinOperator {
}

/// 
open class JoinRequiredOption {
}

/// 
open class ScalarFunctions {
}

/// 
open class AnalysisRuleAggregation {
    ScalarFunctions: Listing<ScalarFunctions>
    OutputConstraints: Listing<AggregationConstraint>
    AggregateColumns: Listing<AggregateColumn>
    JoinColumns: Listing<AnalysisRuleColumnName>
    AllowedJoinOperators: (Listing<JoinOperator>)?
    JoinRequired: (JoinRequiredOption)?
    DimensionColumns: Listing<AnalysisRuleColumnName>
}

/// 
open class AllowedAnalysis {
}

/// Represents a table that can be associated with collaborations
open class ConfiguredTable extends cloudformation.Resource {

    Type = "AWS::CleanRooms::ConfiguredTable"


    /// 
    hidden AllowedColumns: Listing<String|Mapping>

    /// 
    hidden AnalysisMethod: AnalysisMethod

    /// 
    hidden Name: String(matches(Regex(#"^(?!\s*$)[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t]*$"#)))|Mapping

    /// 
    hidden TableReference: TableReference

    /// An arbitrary set of tags (key-value pairs) for this cleanrooms collaboration.
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden Description: (String(matches(Regex(#"^[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDBFF-\uDC00\uDFFF\t\r\n]*$"#)))|Mapping)?

    /// 
    hidden AnalysisRules: (Listing<AnalysisRule>)?

    Properties {
        ["AllowedColumns"] = if (AllowedColumns == null) null else AllowedColumns
        ["AnalysisMethod"] = if (AnalysisMethod == null) null else AnalysisMethod
        ["Name"] = if (Name == null) null else Name
        ["TableReference"] = if (TableReference == null) null else TableReference
        ["Tags"] = if (Tags == null) null else Tags
        ["Description"] = if (Description == null) null else Description
        ["AnalysisRules"] = if (AnalysisRules == null) null else AnalysisRules
    }

}
