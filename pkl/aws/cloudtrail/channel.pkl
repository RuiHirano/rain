/// AWS::CloudTrail::Channel
///
/// Generated by rain build --pkl-class AWS::CloudTrail::Channel
module aws.cloudtrail.channel

import "../../cloudformation.pkl"

typealias ChannelChannelName = String|Mapping


/// A key-value pair to associate with a resource.
open class ChannelTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias DestinationType = "EVENT_DATA_STORE"

/// The resource that receives events arriving from a channel.
open class ChannelDestination {
    Type: DestinationType|Mapping
    Location: String(matches(Regex(#"(^[a-zA-Z0-9._/\-:]+$)"#)))|Mapping
}

typealias ChannelUUID = String|Mapping


typealias ChannelTimestamp = String|Mapping


typealias ChannelChannelArn = String|Mapping


/// A channel receives events from a specific source (such as an on-premises storage solution or application, or a partner event data source), and delivers the events to one or more event data stores. You use channels to ingest events into CloudTrail from sources outside AWS.
open class Channel extends cloudformation.Resource {

    Type = "AWS::CloudTrail::Channel"


    /// 
    hidden Name: (ChannelChannelName)?

    /// The ARN of an on-premises storage solution or application, or a partner event source.
    hidden Source: (String(matches(Regex(#"(.*)"#)))|Mapping)?

    /// One or more resources to which events arriving through a channel are logged and stored.
    hidden Destinations: (Listing<ChannelDestination>)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<ChannelTag>)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["Source"] = if (Source == null) null else Source
        ["Destinations"] = if (Destinations == null) null else Destinations
        ["Tags"] = if (Tags == null) null else Tags
    }

}
