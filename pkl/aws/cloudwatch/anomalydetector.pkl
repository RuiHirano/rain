/// AWS::CloudWatch::AnomalyDetector
///
/// Generated by rain build --pkl-class AWS::CloudWatch::AnomalyDetector
module aws.cloudwatch.anomalydetector

import "../../cloudformation.pkl"

/// 
open class AnomalyDetectorMetricDataQuery {
    MetricStat: (AnomalyDetectorMetricStat)?
    Label: (String|Mapping)?
    Period: (Int|Mapping)?
    Id: String|Mapping
    AccountId: (String|Mapping)?
    ReturnData: (Boolean|Mapping)?
    Expression: (String|Mapping)?
}

/// 
open class AnomalyDetectorRange {
    EndTime: String|Mapping
    StartTime: String|Mapping
}

/// 
open class AnomalyDetectorSingleMetricAnomalyDetector {
    MetricName: (String|Mapping)?
    Dimensions: (Listing<AnomalyDetectorDimension>)?
    Stat: (String|Mapping)?
    Namespace: (String|Mapping)?
}

/// 
open class AnomalyDetectorMetricMathAnomalyDetector {
    MetricDataQueries: (Listing<AnomalyDetectorMetricDataQuery>)?
}

/// 
open class AnomalyDetectorConfiguration {
    MetricTimeZone: (String|Mapping)?
    ExcludedTimeRanges: (Listing<AnomalyDetectorRange>)?
}

/// 
open class AnomalyDetectorMetricStat {
    Stat: String|Mapping
    Unit: (String|Mapping)?
    Period: Int|Mapping
    Metric: AnomalyDetectorMetric
}

/// 
open class AnomalyDetectorMetric {
    MetricName: String|Mapping
    Dimensions: (Listing<AnomalyDetectorDimension>)?
    Namespace: String|Mapping
}

/// 
open class AnomalyDetectorDimension {
    Value: String|Mapping
    Name: String|Mapping
}

/// Resource Type definition for AWS::CloudWatch::AnomalyDetector
open class AnomalyDetector extends cloudformation.Resource {

    Type = "AWS::CloudWatch::AnomalyDetector"


    /// 
    hidden Namespace: (String|Mapping)?

    /// 
    hidden SingleMetricAnomalyDetector: (AnomalyDetectorSingleMetricAnomalyDetector)?

    /// 
    hidden MetricName: (String|Mapping)?

    /// 
    hidden Stat: (String|Mapping)?

    /// 
    hidden Configuration: (AnomalyDetectorConfiguration)?

    /// 
    hidden MetricMathAnomalyDetector: (AnomalyDetectorMetricMathAnomalyDetector)?

    /// 
    hidden Dimensions: (Listing<AnomalyDetectorDimension>)?

    Properties {
        ["Namespace"] = if (Namespace == null) null else Namespace
        ["SingleMetricAnomalyDetector"] = if (SingleMetricAnomalyDetector == null) null else SingleMetricAnomalyDetector
        ["MetricName"] = if (MetricName == null) null else MetricName
        ["Stat"] = if (Stat == null) null else Stat
        ["Configuration"] = if (Configuration == null) null else Configuration
        ["MetricMathAnomalyDetector"] = if (MetricMathAnomalyDetector == null) null else MetricMathAnomalyDetector
        ["Dimensions"] = if (Dimensions == null) null else Dimensions
    }

}
