/// AWS::CodeDeploy::DeploymentGroup
///
/// Generated by rain build --pkl-class AWS::CodeDeploy::DeploymentGroup
module aws.codedeploy.deploymentgroup

import "../../cloudformation.pkl"

/// 
open class DeploymentGroupAlarmConfiguration {
    IgnorePollAlarmFailure: (Boolean|Mapping)?
    Enabled: (Boolean|Mapping)?
    Alarms: (Listing<DeploymentGroupAlarm>)?
}

/// 
open class DeploymentGroupELBInfo {
    Name: (String|Mapping)?
}

/// 
open class DeploymentGroupTargetGroupPairInfo {
    ProdTrafficRoute: (DeploymentGroupTrafficRoute)?
    TestTrafficRoute: (DeploymentGroupTrafficRoute)?
    TargetGroups: (Listing<DeploymentGroupTargetGroupInfo>)?
}

/// 
open class DeploymentGroupOnPremisesTagSetListObject {
    OnPremisesTagGroup: (Listing<DeploymentGroupTagFilter>)?
}

/// 
open class DeploymentGroupDeploymentStyle {
    DeploymentOption: (String|Mapping)?
    DeploymentType: (String|Mapping)?
}

/// 
open class DeploymentGroupEC2TagSet {
    Ec2TagSetList: (Listing<DeploymentGroupEC2TagSetListObject>)?
}

/// 
open class DeploymentGroupEC2TagFilter {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
    Type: (String|Mapping)?
}

/// 
open class DeploymentGroupEC2TagSetListObject {
    Ec2TagGroup: (Listing<DeploymentGroupEC2TagFilter>)?
}

/// 
open class DeploymentGroupLoadBalancerInfo {
    TargetGroupInfoList: (Listing<DeploymentGroupTargetGroupInfo>)?
    ElbInfoList: (Listing<DeploymentGroupELBInfo>)?
    TargetGroupPairInfoList: (Listing<DeploymentGroupTargetGroupPairInfo>)?
}

/// 
open class DeploymentGroupS3Location {
    BundleType: (String|Mapping)?
    Bucket: String|Mapping
    ETag: (String|Mapping)?
    Version: (String|Mapping)?
    Key: String|Mapping
}

/// 
open class DeploymentGroupTriggerConfig {
    TriggerTargetArn: (String|Mapping)?
    TriggerName: (String|Mapping)?
    TriggerEvents: (Listing<String|Mapping>)?
}

/// 
open class DeploymentGroupDeploymentReadyOption {
    WaitTimeInMinutes: (Int|Mapping)?
    ActionOnTimeout: (String|Mapping)?
}

/// 
open class DeploymentGroupOnPremisesTagSet {
    OnPremisesTagSetList: (Listing<DeploymentGroupOnPremisesTagSetListObject>)?
}

/// 
open class DeploymentGroupTagFilter {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
    Type: (String|Mapping)?
}

/// 
open class DeploymentGroupTrafficRoute {
    ListenerArns: (Listing<String|Mapping>)?
}

/// 
open class DeploymentGroupAlarm {
    Name: (String|Mapping)?
}

/// 
open class DeploymentGroupBlueGreenDeploymentConfiguration {
    TerminateBlueInstancesOnDeploymentSuccess: (DeploymentGroupBlueInstanceTerminationOption)?
    GreenFleetProvisioningOption: (DeploymentGroupGreenFleetProvisioningOption)?
    DeploymentReadyOption: (DeploymentGroupDeploymentReadyOption)?
}

/// 
open class DeploymentGroupECSService {
    ClusterName: String|Mapping
    ServiceName: String|Mapping
}

/// 
open class DeploymentGroupGreenFleetProvisioningOption {
    Action: (String|Mapping)?
}

/// 
open class DeploymentGroupTargetGroupInfo {
    Name: (String|Mapping)?
}

/// 
open class DeploymentGroupRevisionLocation {
    S3Location: (DeploymentGroupS3Location)?
    GitHubLocation: (DeploymentGroupGitHubLocation)?
    RevisionType: (String|Mapping)?
}

/// 
open class DeploymentGroupAutoRollbackConfiguration {
    Events: (Listing<String|Mapping>)?
    Enabled: (Boolean|Mapping)?
}

/// 
open class DeploymentGroupBlueInstanceTerminationOption {
    Action: (String|Mapping)?
    TerminationWaitTimeInMinutes: (Int|Mapping)?
}

/// 
open class DeploymentGroupDeployment {
    Description: (String|Mapping)?
    Revision: DeploymentGroupRevisionLocation
    IgnoreApplicationStopFailures: (Boolean|Mapping)?
}

/// 
open class DeploymentGroupGitHubLocation {
    Repository: String|Mapping
    CommitId: String|Mapping
}

/// 
open class DeploymentGroupTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// Resource Type definition for AWS::CodeDeploy::DeploymentGroup
open class DeploymentGroup extends cloudformation.Resource {

    Type = "AWS::CodeDeploy::DeploymentGroup"


    /// 
    hidden AlarmConfiguration: (DeploymentGroupAlarmConfiguration)?

    /// 
    hidden ApplicationName: String|Mapping

    /// 
    hidden AutoRollbackConfiguration: (DeploymentGroupAutoRollbackConfiguration)?

    /// 
    hidden AutoScalingGroups: (Listing<String|Mapping>)?

    /// 
    hidden BlueGreenDeploymentConfiguration: (DeploymentGroupBlueGreenDeploymentConfiguration)?

    /// 
    hidden Deployment: (DeploymentGroupDeployment)?

    /// 
    hidden DeploymentConfigName: (String|Mapping)?

    /// 
    hidden DeploymentGroupName: (String|Mapping)?

    /// 
    hidden DeploymentStyle: (DeploymentGroupDeploymentStyle)?

    /// 
    hidden ECSServices: (Listing<DeploymentGroupECSService>)?

    /// 
    hidden Ec2TagFilters: (Listing<DeploymentGroupEC2TagFilter>)?

    /// 
    hidden Ec2TagSet: (DeploymentGroupEC2TagSet)?

    /// 
    hidden LoadBalancerInfo: (DeploymentGroupLoadBalancerInfo)?

    /// 
    hidden OnPremisesInstanceTagFilters: (Listing<DeploymentGroupTagFilter>)?

    /// 
    hidden OnPremisesTagSet: (DeploymentGroupOnPremisesTagSet)?

    /// 
    hidden OutdatedInstancesStrategy: (String|Mapping)?

    /// 
    hidden ServiceRoleArn: String|Mapping

    /// 
    hidden Tags: (Listing<DeploymentGroupTag>)?

    /// 
    hidden TerminationHookEnabled: (Boolean|Mapping)?

    /// 
    hidden TriggerConfigurations: (Listing<DeploymentGroupTriggerConfig>)?

    Properties {
        ["AlarmConfiguration"] = if (AlarmConfiguration == null) null else AlarmConfiguration
        ["ApplicationName"] = if (ApplicationName == null) null else ApplicationName
        ["AutoRollbackConfiguration"] = if (AutoRollbackConfiguration == null) null else AutoRollbackConfiguration
        ["AutoScalingGroups"] = if (AutoScalingGroups == null) null else AutoScalingGroups
        ["BlueGreenDeploymentConfiguration"] = if (BlueGreenDeploymentConfiguration == null) null else BlueGreenDeploymentConfiguration
        ["Deployment"] = if (Deployment == null) null else Deployment
        ["DeploymentConfigName"] = if (DeploymentConfigName == null) null else DeploymentConfigName
        ["DeploymentGroupName"] = if (DeploymentGroupName == null) null else DeploymentGroupName
        ["DeploymentStyle"] = if (DeploymentStyle == null) null else DeploymentStyle
        ["ECSServices"] = if (ECSServices == null) null else ECSServices
        ["Ec2TagFilters"] = if (Ec2TagFilters == null) null else Ec2TagFilters
        ["Ec2TagSet"] = if (Ec2TagSet == null) null else Ec2TagSet
        ["LoadBalancerInfo"] = if (LoadBalancerInfo == null) null else LoadBalancerInfo
        ["OnPremisesInstanceTagFilters"] = if (OnPremisesInstanceTagFilters == null) null else OnPremisesInstanceTagFilters
        ["OnPremisesTagSet"] = if (OnPremisesTagSet == null) null else OnPremisesTagSet
        ["OutdatedInstancesStrategy"] = if (OutdatedInstancesStrategy == null) null else OutdatedInstancesStrategy
        ["ServiceRoleArn"] = if (ServiceRoleArn == null) null else ServiceRoleArn
        ["Tags"] = if (Tags == null) null else Tags
        ["TerminationHookEnabled"] = if (TerminationHookEnabled == null) null else TerminationHookEnabled
        ["TriggerConfigurations"] = if (TriggerConfigurations == null) null else TriggerConfigurations
    }

}
