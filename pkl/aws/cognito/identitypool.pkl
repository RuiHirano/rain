/// AWS::Cognito::IdentityPool
///
/// Generated by rain build --pkl-class AWS::Cognito::IdentityPool
module aws.cognito.identitypool

import "../../cloudformation.pkl"

/// 
open class IdentityPoolCognitoIdentityProvider {
    ServerSideTokenCheck: (Boolean|Mapping)?
    ProviderName: String|Mapping
    ClientId: String|Mapping
}

/// 
open class IdentityPoolCognitoStreams {
    StreamingStatus: (String|Mapping)?
    StreamName: (String|Mapping)?
    RoleArn: (String|Mapping)?
}

/// 
open class IdentityPoolPushSync {
    ApplicationArns: (Listing<String|Mapping>)?
    RoleArn: (String|Mapping)?
}

/// Resource Type definition for AWS::Cognito::IdentityPool
open class IdentityPool extends cloudformation.Resource {

    Type = "AWS::Cognito::IdentityPool"


    /// 
    hidden CognitoIdentityProviders: (Listing<IdentityPoolCognitoIdentityProvider>)?

    /// 
    hidden SupportedLoginProviders: (Dynamic)?

    /// 
    hidden IdentityPoolName: (String|Mapping)?

    /// 
    hidden CognitoStreams: (IdentityPoolCognitoStreams)?

    /// 
    hidden CognitoEvents: (Dynamic)?

    /// 
    hidden AllowUnauthenticatedIdentities: Boolean|Mapping

    /// 
    hidden SamlProviderARNs: (Listing<String|Mapping>)?

    /// 
    hidden OpenIdConnectProviderARNs: (Listing<String|Mapping>)?

    /// 
    hidden AllowClassicFlow: (Boolean|Mapping)?

    /// 
    hidden PushSync: (IdentityPoolPushSync)?

    /// 
    hidden DeveloperProviderName: (String|Mapping)?

    Properties {
        ["CognitoIdentityProviders"] = if (CognitoIdentityProviders == null) null else CognitoIdentityProviders
        ["SupportedLoginProviders"] = if (SupportedLoginProviders == null) null else SupportedLoginProviders
        ["IdentityPoolName"] = if (IdentityPoolName == null) null else IdentityPoolName
        ["CognitoStreams"] = if (CognitoStreams == null) null else CognitoStreams
        ["CognitoEvents"] = if (CognitoEvents == null) null else CognitoEvents
        ["AllowUnauthenticatedIdentities"] = if (AllowUnauthenticatedIdentities == null) null else AllowUnauthenticatedIdentities
        ["SamlProviderARNs"] = if (SamlProviderARNs == null) null else SamlProviderARNs
        ["OpenIdConnectProviderARNs"] = if (OpenIdConnectProviderARNs == null) null else OpenIdConnectProviderARNs
        ["AllowClassicFlow"] = if (AllowClassicFlow == null) null else AllowClassicFlow
        ["PushSync"] = if (PushSync == null) null else PushSync
        ["DeveloperProviderName"] = if (DeveloperProviderName == null) null else DeveloperProviderName
    }

}
