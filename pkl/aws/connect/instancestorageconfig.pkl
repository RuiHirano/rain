/// AWS::Connect::InstanceStorageConfig
///
/// Generated by rain build --pkl-class AWS::Connect::InstanceStorageConfig
module aws.connect.instancestorageconfig

import "../../cloudformation.pkl"

/// An ARN is a unique AWS resource identifier.
open class KinesisStreamArn {
}

/// An associationID is automatically generated when a storage config is associated with an instance
open class AssociationId {
}

/// Prefixes are used to infer logical hierarchy
open class Prefix {
}

/// Specifies default encryption using AWS KMS-Managed Keys
open class EncryptionType {
}

/// 
open class S3Config {
    BucketName: BucketName
    BucketPrefix: Prefix
    EncryptionConfig: (EncryptionConfig)?
}

/// 
open class KinesisStreamConfig {
    StreamArn: KinesisStreamArn
}

/// Specifies the storage type to be associated with the instance
open class StorageType {
}

/// A name for the S3 Bucket
open class BucketName {
}

/// An ARN is a unique AWS resource identifier.
open class FirehoseDeliveryStreamArn {
}

/// 
open class EncryptionConfig {
    EncryptionType: EncryptionType
    KeyId: KeyId
}

/// Specifies the type of storage resource available for the instance
open class InstanceStorageResourceType {
}

/// Number of hours
open class Hours {
}

/// Specifies the encryption key id
open class KeyId {
}

/// 
open class KinesisVideoStreamConfig {
    Prefix: Prefix
    RetentionPeriodHours: Hours
    EncryptionConfig: EncryptionConfig
}

/// 
open class KinesisFirehoseConfig {
    FirehoseArn: FirehoseDeliveryStreamArn
}

/// Resource Type definition for AWS::Connect::InstanceStorageConfig
open class InstanceStorageConfig extends cloudformation.Resource {

    Type = "AWS::Connect::InstanceStorageConfig"


    /// Connect Instance ID with which the storage config will be associated
    hidden InstanceArn: String(matches(Regex(#"^arn:aws[-a-z0-9]*:connect:[-a-z0-9]*:[0-9]{12}:instance/[-a-zA-Z0-9]*$"#)))|Mapping

    /// 
    hidden ResourceType: InstanceStorageResourceType

    /// 
    hidden StorageType: StorageType

    /// 
    hidden S3Config: (S3Config)?

    /// 
    hidden KinesisVideoStreamConfig: (KinesisVideoStreamConfig)?

    /// 
    hidden KinesisStreamConfig: (KinesisStreamConfig)?

    /// 
    hidden KinesisFirehoseConfig: (KinesisFirehoseConfig)?

    Properties {
        ["InstanceArn"] = if (InstanceArn == null) null else InstanceArn
        ["ResourceType"] = if (ResourceType == null) null else ResourceType
        ["StorageType"] = if (StorageType == null) null else StorageType
        ["S3Config"] = if (S3Config == null) null else S3Config
        ["KinesisVideoStreamConfig"] = if (KinesisVideoStreamConfig == null) null else KinesisVideoStreamConfig
        ["KinesisStreamConfig"] = if (KinesisStreamConfig == null) null else KinesisStreamConfig
        ["KinesisFirehoseConfig"] = if (KinesisFirehoseConfig == null) null else KinesisFirehoseConfig
    }

}
