/// AWS::DLM::LifecyclePolicy
///
/// Generated by rain build --pkl-class AWS::DLM::LifecyclePolicy
module aws.dlm.lifecyclepolicy

import "../../cloudformation.pkl"

/// 
open class LifecyclePolicyAction {
    Name: String|Mapping
    CrossRegionCopy: Listing<LifecyclePolicyCrossRegionCopyAction>
}

/// 
open class LifecyclePolicyCrossRegionCopyRetainRule {
    IntervalUnit: String|Mapping
    Interval: Int|Mapping
}

/// 
open class LifecyclePolicyRetainRule {
    IntervalUnit: (String|Mapping)?
    Count: (Int|Mapping)?
    Interval: (Int|Mapping)?
}

/// 
open class LifecyclePolicySchedule {
    ShareRules: (Listing<LifecyclePolicyShareRule>)?
    DeprecateRule: (LifecyclePolicyDeprecateRule)?
    TagsToAdd: (Listing<LifecyclePolicyTag>)?
    VariableTags: (Listing<LifecyclePolicyTag>)?
    RetainRule: (LifecyclePolicyRetainRule)?
    CrossRegionCopyRules: (Listing<LifecyclePolicyCrossRegionCopyRule>)?
    CreateRule: (LifecyclePolicyCreateRule)?
    FastRestoreRule: (LifecyclePolicyFastRestoreRule)?
    ArchiveRule: (LifecyclePolicyArchiveRule)?
    Name: (String|Mapping)?
    CopyTags: (Boolean|Mapping)?
}

typealias LifecyclePolicyExcludeTags = Dynamic


/// 
open class LifecyclePolicyEventSource {
    Type: String|Mapping
    Parameters: (LifecyclePolicyEventParameters)?
}

/// 
open class LifecyclePolicyArchiveRetainRule {
    RetentionArchiveTier: LifecyclePolicyRetentionArchiveTier
}

typealias LifecyclePolicyExcludeVolumeTypesList = Dynamic


/// 
open class LifecyclePolicyScript {
    ExecuteOperationOnScriptFailure: (Boolean|Mapping)?
    ExecutionHandlerService: (String|Mapping)?
    ExecutionTimeout: (Int|Mapping)?
    Stages: (Listing<String|Mapping>)?
    ExecutionHandler: (String|Mapping)?
    MaximumRetryCount: (Int|Mapping)?
}

/// 
open class LifecyclePolicyArchiveRule {
    RetainRule: LifecyclePolicyArchiveRetainRule
}

/// 
open class LifecyclePolicyExclusions {
    ExcludeTags: (LifecyclePolicyExcludeTags)?
    ExcludeVolumeTypes: (LifecyclePolicyExcludeVolumeTypesList)?
    ExcludeBootVolumes: (Boolean|Mapping)?
}

/// 
open class LifecyclePolicyTag {
    Value: String|Mapping
    Key: String|Mapping
}

typealias LifecyclePolicyCrossRegionCopyTargets = Dynamic


/// 
open class LifecyclePolicyDeprecateRule {
    IntervalUnit: (String|Mapping)?
    Count: (Int|Mapping)?
    Interval: (Int|Mapping)?
}

/// 
open class LifecyclePolicyShareRule {
    UnshareInterval: (Int|Mapping)?
    TargetAccounts: (Listing<String|Mapping>)?
    UnshareIntervalUnit: (String|Mapping)?
}

/// 
open class LifecyclePolicyCreateRule {
    Interval: (Int|Mapping)?
    Location: (String|Mapping)?
    IntervalUnit: (String|Mapping)?
    Scripts: (Listing<LifecyclePolicyScript>)?
    Times: (Listing<String|Mapping>)?
    CronExpression: (String|Mapping)?
}

/// 
open class LifecyclePolicyCrossRegionCopyAction {
    RetainRule: (LifecyclePolicyCrossRegionCopyRetainRule)?
    Target: String|Mapping
    EncryptionConfiguration: LifecyclePolicyEncryptionConfiguration
}

/// 
open class LifecyclePolicyCrossRegionCopyRule {
    TargetRegion: (String|Mapping)?
    Target: (String|Mapping)?
    DeprecateRule: (LifecyclePolicyCrossRegionCopyDeprecateRule)?
    Encrypted: Boolean|Mapping
    CmkArn: (String|Mapping)?
    RetainRule: (LifecyclePolicyCrossRegionCopyRetainRule)?
    CopyTags: (Boolean|Mapping)?
}

/// 
open class LifecyclePolicyEventParameters {
    DescriptionRegex: (String|Mapping)?
    EventType: String|Mapping
    SnapshotOwner: Listing<String|Mapping>
}

/// 
open class LifecyclePolicyCrossRegionCopyDeprecateRule {
    IntervalUnit: String|Mapping
    Interval: Int|Mapping
}

/// 
open class LifecyclePolicyPolicyDetails {
    Exclusions: (LifecyclePolicyExclusions)?
    RetainInterval: (Int|Mapping)?
    CopyTags: (Boolean|Mapping)?
    PolicyLanguage: (String|Mapping)?
    ExtendDeletion: (Boolean|Mapping)?
    EventSource: (LifecyclePolicyEventSource)?
    ResourceLocations: (Listing<String|Mapping>)?
    TargetTags: (Listing<LifecyclePolicyTag>)?
    ResourceTypes: (Listing<String|Mapping>)?
    Schedules: (Listing<LifecyclePolicySchedule>)?
    CreateInterval: (Int|Mapping)?
    ResourceType: (String|Mapping)?
    CrossRegionCopyTargets: (LifecyclePolicyCrossRegionCopyTargets)?
    PolicyType: (String|Mapping)?
    Parameters: (LifecyclePolicyParameters)?
    Actions: (Listing<LifecyclePolicyAction>)?
}

/// 
open class LifecyclePolicyEncryptionConfiguration {
    Encrypted: Boolean|Mapping
    CmkArn: (String|Mapping)?
}

/// 
open class LifecyclePolicyFastRestoreRule {
    Count: (Int|Mapping)?
    AvailabilityZones: (Listing<String|Mapping>)?
    Interval: (Int|Mapping)?
    IntervalUnit: (String|Mapping)?
}

/// 
open class LifecyclePolicyParameters {
    NoReboot: (Boolean|Mapping)?
    ExcludeDataVolumeTags: (Listing<LifecyclePolicyTag>)?
    ExcludeBootVolume: (Boolean|Mapping)?
}

/// 
open class LifecyclePolicyRetentionArchiveTier {
    IntervalUnit: (String|Mapping)?
    Count: (Int|Mapping)?
    Interval: (Int|Mapping)?
}

/// Resource Type definition for AWS::DLM::LifecyclePolicy
open class LifecyclePolicy extends cloudformation.Resource {

    Type = "AWS::DLM::LifecyclePolicy"


    /// 
    hidden CopyTags: (Boolean|Mapping)?

    /// 
    hidden CreateInterval: (Int|Mapping)?

    /// 
    hidden CrossRegionCopyTargets: (LifecyclePolicyCrossRegionCopyTargets)?

    /// 
    hidden DefaultPolicy: (String|Mapping)?

    /// 
    hidden Description: (String|Mapping)?

    /// 
    hidden Exclusions: (LifecyclePolicyExclusions)?

    /// 
    hidden ExecutionRoleArn: (String|Mapping)?

    /// 
    hidden ExtendDeletion: (Boolean|Mapping)?

    /// 
    hidden PolicyDetails: (LifecyclePolicyPolicyDetails)?

    /// 
    hidden RetainInterval: (Int|Mapping)?

    /// 
    hidden State: (String|Mapping)?

    /// 
    hidden Tags: (Listing<LifecyclePolicyTag>)?

    Properties {
        ["CopyTags"] = if (CopyTags == null) null else CopyTags
        ["CreateInterval"] = if (CreateInterval == null) null else CreateInterval
        ["CrossRegionCopyTargets"] = if (CrossRegionCopyTargets == null) null else CrossRegionCopyTargets
        ["DefaultPolicy"] = if (DefaultPolicy == null) null else DefaultPolicy
        ["Description"] = if (Description == null) null else Description
        ["Exclusions"] = if (Exclusions == null) null else Exclusions
        ["ExecutionRoleArn"] = if (ExecutionRoleArn == null) null else ExecutionRoleArn
        ["ExtendDeletion"] = if (ExtendDeletion == null) null else ExtendDeletion
        ["PolicyDetails"] = if (PolicyDetails == null) null else PolicyDetails
        ["RetainInterval"] = if (RetainInterval == null) null else RetainInterval
        ["State"] = if (State == null) null else State
        ["Tags"] = if (Tags == null) null else Tags
    }

}
