/// AWS::DocDBElastic::Cluster
///
/// Generated by rain build --pkl-class AWS::DocDBElastic::Cluster
module aws.docdbelastic.cluster

import "../../cloudformation.pkl"

/// 
open class ClusterTag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String|Mapping
}

/// The AWS::DocDBElastic::Cluster Amazon DocumentDB (with MongoDB compatibility) Elastic Scale resource describes a Cluster
open class Cluster extends cloudformation.Resource {

    Type = "AWS::DocDBElastic::Cluster"


    /// 
    hidden AdminUserName: String|Mapping

    /// 
    hidden AdminUserPassword: (String|Mapping)?

    /// 
    hidden AuthType: String|Mapping

    /// 
    hidden ClusterName: String(matches(Regex(#"[a-zA-z][a-zA-Z0-9]*(-[a-zA-Z0-9]+)*"#)))|Mapping

    /// 
    hidden KmsKeyId: (String|Mapping)?

    /// 
    hidden PreferredMaintenanceWindow: (String|Mapping)?

    /// 
    hidden ShardCapacity: Int|Mapping

    /// 
    hidden ShardCount: Int|Mapping

    /// 
    hidden SubnetIds: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<ClusterTag>)?

    /// 
    hidden VpcSecurityGroupIds: (Listing<String|Mapping>)?

    Properties {
        ["AdminUserName"] = if (AdminUserName == null) null else AdminUserName
        ["AdminUserPassword"] = if (AdminUserPassword == null) null else AdminUserPassword
        ["AuthType"] = if (AuthType == null) null else AuthType
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["PreferredMaintenanceWindow"] = if (PreferredMaintenanceWindow == null) null else PreferredMaintenanceWindow
        ["ShardCapacity"] = if (ShardCapacity == null) null else ShardCapacity
        ["ShardCount"] = if (ShardCount == null) null else ShardCount
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
        ["Tags"] = if (Tags == null) null else Tags
        ["VpcSecurityGroupIds"] = if (VpcSecurityGroupIds == null) null else VpcSecurityGroupIds
    }

}
