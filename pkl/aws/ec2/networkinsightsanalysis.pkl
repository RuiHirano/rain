/// AWS::EC2::NetworkInsightsAnalysis
///
/// Generated by rain build --pkl-class AWS::EC2::NetworkInsightsAnalysis
module aws.ec2.networkinsightsanalysis

import "../../cloudformation.pkl"

/// 
open class NetworkInsightsAnalysisPortRange {
    From: (Int|Mapping)?
    To: (Int|Mapping)?
}

/// 
open class NetworkInsightsAnalysisAnalysisLoadBalancerTarget {
    Address: (NetworkInsightsAnalysisIpAddress)?
    Instance: (NetworkInsightsAnalysisAnalysisComponent)?
    Port: (NetworkInsightsAnalysisPort)?
    AvailabilityZone: (String|Mapping)?
}

/// 
open class NetworkInsightsAnalysisExplanation {
    State: (String|Mapping)?
    Cidrs: (Listing<String|Mapping>)?
    VpnConnection: (NetworkInsightsAnalysisAnalysisComponent)?
    Component: (NetworkInsightsAnalysisAnalysisComponent)?
    Protocols: (Listing<NetworkInsightsAnalysisProtocol>)?
    InternetGateway: (NetworkInsightsAnalysisAnalysisComponent)?
    DestinationVpc: (NetworkInsightsAnalysisAnalysisComponent)?
    SecurityGroup: (NetworkInsightsAnalysisAnalysisComponent)?
    AclRule: (NetworkInsightsAnalysisAnalysisAclRule)?
    MissingComponent: (String|Mapping)?
    AvailabilityZones: (Listing<String|Mapping>)?
    VpcPeeringConnection: (NetworkInsightsAnalysisAnalysisComponent)?
    Addresses: (Listing<NetworkInsightsAnalysisIpAddress>)?
    CustomerGateway: (NetworkInsightsAnalysisAnalysisComponent)?
    RouteTable: (NetworkInsightsAnalysisAnalysisComponent)?
    NetworkInterface: (NetworkInsightsAnalysisAnalysisComponent)?
    Subnet: (NetworkInsightsAnalysisAnalysisComponent)?
    PacketField: (String|Mapping)?
    ClassicLoadBalancerListener: (NetworkInsightsAnalysisAnalysisLoadBalancerListener)?
    PrefixList: (NetworkInsightsAnalysisAnalysisComponent)?
    TransitGatewayRouteTableRoute: (NetworkInsightsAnalysisTransitGatewayRouteTableRoute)?
    LoadBalancerTargetGroup: (NetworkInsightsAnalysisAnalysisComponent)?
    SubnetRouteTable: (NetworkInsightsAnalysisAnalysisComponent)?
    LoadBalancerTarget: (NetworkInsightsAnalysisAnalysisLoadBalancerTarget)?
    Acl: (NetworkInsightsAnalysisAnalysisComponent)?
    IngressRouteTable: (NetworkInsightsAnalysisAnalysisComponent)?
    TransitGatewayRouteTable: (NetworkInsightsAnalysisAnalysisComponent)?
    ExplanationCode: (String|Mapping)?
    LoadBalancerListenerPort: (NetworkInsightsAnalysisPort)?
    SecurityGroups: (Listing<NetworkInsightsAnalysisAnalysisComponent>)?
    Vpc: (NetworkInsightsAnalysisAnalysisComponent)?
    AttachedTo: (NetworkInsightsAnalysisAnalysisComponent)?
    TransitGateway: (NetworkInsightsAnalysisAnalysisComponent)?
    LoadBalancerTargetPort: (NetworkInsightsAnalysisPort)?
    NatGateway: (NetworkInsightsAnalysisAnalysisComponent)?
    TransitGatewayAttachment: (NetworkInsightsAnalysisAnalysisComponent)?
    ComponentAccount: (String|Mapping)?
    Address: (NetworkInsightsAnalysisIpAddress)?
    ComponentRegion: (String|Mapping)?
    SecurityGroupRule: (NetworkInsightsAnalysisAnalysisSecurityGroupRule)?
    vpcEndpoint: (NetworkInsightsAnalysisAnalysisComponent)?
    VpnGateway: (NetworkInsightsAnalysisAnalysisComponent)?
    LoadBalancerTargetGroups: (Listing<NetworkInsightsAnalysisAnalysisComponent>)?
    SourceVpc: (NetworkInsightsAnalysisAnalysisComponent)?
    PortRanges: (Listing<NetworkInsightsAnalysisPortRange>)?
    Port: (NetworkInsightsAnalysisPort)?
    Direction: (String|Mapping)?
    RouteTableRoute: (NetworkInsightsAnalysisAnalysisRouteTableRoute)?
    LoadBalancerArn: (NetworkInsightsAnalysisResourceArn)?
    ElasticLoadBalancerListener: (NetworkInsightsAnalysisAnalysisComponent)?
    Destination: (NetworkInsightsAnalysisAnalysisComponent)?
}

/// 
open class NetworkInsightsAnalysisTag {
    Value: (String|Mapping)?
    Key: String|Mapping
}

/// 
open class NetworkInsightsAnalysisAnalysisSecurityGroupRule {
    Protocol: (NetworkInsightsAnalysisProtocol)?
    Direction: (String|Mapping)?
    PortRange: (NetworkInsightsAnalysisPortRange)?
    Cidr: (String|Mapping)?
    PrefixListId: (String|Mapping)?
    SecurityGroupId: (String|Mapping)?
}

/// 
open class NetworkInsightsAnalysisAnalysisRouteTableRoute {
    instanceId: (String|Mapping)?
    egressOnlyInternetGatewayId: (String|Mapping)?
    NatGatewayId: (String|Mapping)?
    Origin: (String|Mapping)?
    VpcPeeringConnectionId: (String|Mapping)?
    NetworkInterfaceId: (String|Mapping)?
    TransitGatewayId: (String|Mapping)?
    State: (String|Mapping)?
    gatewayId: (String|Mapping)?
    destinationPrefixListId: (String|Mapping)?
    destinationCidr: (String|Mapping)?
}

typealias NetworkInsightsAnalysisResourceArn = String|Mapping


typealias NetworkInsightsAnalysisPort = Int|Mapping


typealias NetworkInsightsAnalysisProtocol = String|Mapping


/// 
open class NetworkInsightsAnalysisAnalysisComponent {
    Id: (String|Mapping)?
    Arn: (String|Mapping)?
}

typealias NetworkInsightsAnalysisIpAddress = String|Mapping


/// 
open class NetworkInsightsAnalysisTransitGatewayRouteTableRoute {
    ResourceType: (String|Mapping)?
    RouteOrigin: (String|Mapping)?
    DestinationCidr: (String|Mapping)?
    AttachmentId: (String|Mapping)?
    PrefixListId: (String|Mapping)?
    ResourceId: (String|Mapping)?
    State: (String|Mapping)?
}

/// 
open class NetworkInsightsAnalysisPathComponent {
    Explanations: (Listing<NetworkInsightsAnalysisExplanation>)?
    SequenceNumber: (Int|Mapping)?
    Component: (NetworkInsightsAnalysisAnalysisComponent)?
    AclRule: (NetworkInsightsAnalysisAnalysisAclRule)?
    TransitGatewayRouteTableRoute: (NetworkInsightsAnalysisTransitGatewayRouteTableRoute)?
    Subnet: (NetworkInsightsAnalysisAnalysisComponent)?
    TransitGateway: (NetworkInsightsAnalysisAnalysisComponent)?
    RouteTableRoute: (NetworkInsightsAnalysisAnalysisRouteTableRoute)?
    InboundHeader: (NetworkInsightsAnalysisAnalysisPacketHeader)?
    DestinationVpc: (NetworkInsightsAnalysisAnalysisComponent)?
    SecurityGroupRule: (NetworkInsightsAnalysisAnalysisSecurityGroupRule)?
    ServiceName: (String|Mapping)?
    SourceVpc: (NetworkInsightsAnalysisAnalysisComponent)?
    OutboundHeader: (NetworkInsightsAnalysisAnalysisPacketHeader)?
    AdditionalDetails: (Listing<NetworkInsightsAnalysisAdditionalDetail>)?
    Vpc: (NetworkInsightsAnalysisAnalysisComponent)?
    ElasticLoadBalancerListener: (NetworkInsightsAnalysisAnalysisComponent)?
}

typealias NetworkInsightsAnalysisTags = Listing<(NetworkInsightsAnalysisTag)?>


/// 
open class NetworkInsightsAnalysisAlternatePathHint {
    ComponentArn: (String|Mapping)?
    ComponentId: (String|Mapping)?
}

/// 
open class NetworkInsightsAnalysisAnalysisLoadBalancerListener {
    InstancePort: (NetworkInsightsAnalysisPort)?
    LoadBalancerPort: (NetworkInsightsAnalysisPort)?
}

/// 
open class NetworkInsightsAnalysisAnalysisPacketHeader {
    DestinationPortRanges: (Listing<NetworkInsightsAnalysisPortRange>)?
    SourcePortRanges: (Listing<NetworkInsightsAnalysisPortRange>)?
    DestinationAddresses: (Listing<NetworkInsightsAnalysisIpAddress>)?
    Protocol: (NetworkInsightsAnalysisProtocol)?
    SourceAddresses: (Listing<NetworkInsightsAnalysisIpAddress>)?
}

/// 
open class NetworkInsightsAnalysisAdditionalDetail {
    ServiceName: (String|Mapping)?
    AdditionalDetailType: (String|Mapping)?
    LoadBalancers: (Listing<NetworkInsightsAnalysisAnalysisComponent>)?
    Component: (NetworkInsightsAnalysisAnalysisComponent)?
}

/// 
open class NetworkInsightsAnalysisAnalysisAclRule {
    RuleNumber: (Int|Mapping)?
    Protocol: (NetworkInsightsAnalysisProtocol)?
    PortRange: (NetworkInsightsAnalysisPortRange)?
    Cidr: (String|Mapping)?
    RuleAction: (String|Mapping)?
    Egress: (Boolean|Mapping)?
}

/// Resource schema for AWS::EC2::NetworkInsightsAnalysis
open class NetworkInsightsAnalysis extends cloudformation.Resource {

    Type = "AWS::EC2::NetworkInsightsAnalysis"


    /// 
    hidden FilterInArns: (Listing<NetworkInsightsAnalysisResourceArn>)?

    /// 
    hidden AdditionalAccounts: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<NetworkInsightsAnalysisTag>)?

    /// 
    hidden NetworkInsightsPathId: String|Mapping

    Properties {
        ["FilterInArns"] = if (FilterInArns == null) null else FilterInArns
        ["AdditionalAccounts"] = if (AdditionalAccounts == null) null else AdditionalAccounts
        ["Tags"] = if (Tags == null) null else Tags
        ["NetworkInsightsPathId"] = if (NetworkInsightsPathId == null) null else NetworkInsightsPathId
    }

}
