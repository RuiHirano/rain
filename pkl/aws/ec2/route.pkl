/// AWS::EC2::Route
///
/// Generated by rain build --pkl-class AWS::EC2::Route
module aws.ec2.route

import "../../cloudformation.pkl"

/// Resource Type definition for AWS::EC2::Route
open class Route extends cloudformation.Resource {

    Type = "AWS::EC2::Route"


    /// The ID of managed prefix list, it's a set of one or more CIDR blocks.
    hidden DestinationPrefixListId: (String|Mapping)?

    /// The ID of a VPC peering connection.
    hidden VpcPeeringConnectionId: (String|Mapping)?

    /// The ID of the carrier gateway.
    hidden CarrierGatewayId: (String|Mapping)?

    /// The ID of an internet gateway or virtual private gateway attached to your VPC.
    hidden GatewayId: (String|Mapping)?

    /// The ID of a NAT instance in your VPC.
    hidden InstanceId: (String|Mapping)?

    /// The ID of the network interface.
    hidden NetworkInterfaceId: (String|Mapping)?

    /// The Amazon Resource Name (ARN) of the core network.
    hidden CoreNetworkArn: (String|Mapping)?

    /// The IPv4 CIDR block used for the destination match.
    hidden DestinationCidrBlock: (String|Mapping)?

    /// The ID of a VPC endpoint. Supported for Gateway Load Balancer endpoints only.
    hidden VpcEndpointId: (String|Mapping)?

    /// The IPv6 CIDR block used for the destination match.
    hidden DestinationIpv6CidrBlock: (String|Mapping)?

    /// The ID of the egress-only internet gateway.
    hidden EgressOnlyInternetGatewayId: (String|Mapping)?

    /// The ID of the local gateway.
    hidden LocalGatewayId: (String|Mapping)?

    /// The ID of a NAT gateway.
    hidden NatGatewayId: (String|Mapping)?

    /// The ID of the route table. The routing table must be associated with the same VPC that the virtual private gateway is attached to.
    hidden RouteTableId: String|Mapping

    /// The ID of a transit gateway.
    hidden TransitGatewayId: (String|Mapping)?

    Properties {
        ["DestinationPrefixListId"] = if (DestinationPrefixListId == null) null else DestinationPrefixListId
        ["VpcPeeringConnectionId"] = if (VpcPeeringConnectionId == null) null else VpcPeeringConnectionId
        ["CarrierGatewayId"] = if (CarrierGatewayId == null) null else CarrierGatewayId
        ["GatewayId"] = if (GatewayId == null) null else GatewayId
        ["InstanceId"] = if (InstanceId == null) null else InstanceId
        ["NetworkInterfaceId"] = if (NetworkInterfaceId == null) null else NetworkInterfaceId
        ["CoreNetworkArn"] = if (CoreNetworkArn == null) null else CoreNetworkArn
        ["DestinationCidrBlock"] = if (DestinationCidrBlock == null) null else DestinationCidrBlock
        ["VpcEndpointId"] = if (VpcEndpointId == null) null else VpcEndpointId
        ["DestinationIpv6CidrBlock"] = if (DestinationIpv6CidrBlock == null) null else DestinationIpv6CidrBlock
        ["EgressOnlyInternetGatewayId"] = if (EgressOnlyInternetGatewayId == null) null else EgressOnlyInternetGatewayId
        ["LocalGatewayId"] = if (LocalGatewayId == null) null else LocalGatewayId
        ["NatGatewayId"] = if (NatGatewayId == null) null else NatGatewayId
        ["RouteTableId"] = if (RouteTableId == null) null else RouteTableId
        ["TransitGatewayId"] = if (TransitGatewayId == null) null else TransitGatewayId
    }

}
