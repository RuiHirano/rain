/// AWS::EC2::VerifiedAccessInstance
///
/// Generated by rain build --pkl-class AWS::EC2::VerifiedAccessInstance
module aws.ec2.verifiedaccessinstance

import "../../cloudformation.pkl"

/// A Verified Access Trust Provider.
open class VerifiedAccessInstanceVerifiedAccessTrustProvider {
    VerifiedAccessTrustProviderId: (String|Mapping)?
    Description: (String|Mapping)?
    TrustProviderType: (String|Mapping)?
    UserTrustProviderType: (String|Mapping)?
    DeviceTrustProviderType: (String|Mapping)?
}

typealias VerifiedAccessInstanceVerifiedAccessTrustProviderId = String


/// The configuration options for AWS Verified Access instances.
open class VerifiedAccessInstanceVerifiedAccessLogs {
    CloudWatchLogs: (Dynamic)?
    KinesisDataFirehose: (Dynamic)?
    S3: (Dynamic)?
    LogVersion: (String|Mapping)?
    IncludeTrustContext: (Boolean|Mapping)?
}

/// A key-value pair to associate with a resource.
open class VerifiedAccessInstanceTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The AWS::EC2::VerifiedAccessInstance resource creates an AWS EC2 Verified Access Instance.
open class VerifiedAccessInstance extends cloudformation.Resource {

    Type = "AWS::EC2::VerifiedAccessInstance"


    /// Indicates whether FIPS is enabled
    hidden FipsEnabled: (Boolean|Mapping)?

    /// The configuration options for AWS Verified Access instances.
    hidden LoggingConfigurations: (VerifiedAccessInstanceVerifiedAccessLogs)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<VerifiedAccessInstanceTag>)?

    /// A description for the AWS Verified Access instance.
    hidden Description: (String|Mapping)?

    /// AWS Verified Access trust providers.
    hidden VerifiedAccessTrustProviders: (Listing<VerifiedAccessInstanceVerifiedAccessTrustProvider>)?

    /// The IDs of the AWS Verified Access trust providers.
    hidden VerifiedAccessTrustProviderIds: (Listing<VerifiedAccessInstanceVerifiedAccessTrustProviderId>)?

    Properties {
        ["FipsEnabled"] = if (FipsEnabled == null) null else FipsEnabled
        ["LoggingConfigurations"] = if (LoggingConfigurations == null) null else LoggingConfigurations
        ["Tags"] = if (Tags == null) null else Tags
        ["Description"] = if (Description == null) null else Description
        ["VerifiedAccessTrustProviders"] = if (VerifiedAccessTrustProviders == null) null else VerifiedAccessTrustProviders
        ["VerifiedAccessTrustProviderIds"] = if (VerifiedAccessTrustProviderIds == null) null else VerifiedAccessTrustProviderIds
    }

}
