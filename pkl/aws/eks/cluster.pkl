/// AWS::EKS::Cluster
///
/// Generated by rain build --pkl-class AWS::EKS::Cluster
module aws.eks.cluster

import "../../cloudformation.pkl"

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The encryption configuration for the cluster
open class EncryptionConfig {
    Provider: (Provider)?
    Resources: (Listing<String|Mapping>)?
}

/// An object representing the VPC configuration to use for an Amazon EKS cluster.
open class ResourcesVpcConfig {
    EndpointPrivateAccess: (Boolean|Mapping)?
    EndpointPublicAccess: (Boolean|Mapping)?
    PublicAccessCidrs: (Listing<String|Mapping>)?
    SecurityGroupIds: (Listing<String|Mapping>)?
    SubnetIds: Listing<String|Mapping>
}

typealias LoggingTypeConfigType = "api"|"audit"|"authenticator"|"controllerManager"|"scheduler"

/// Enabled Logging Type
open class LoggingTypeConfig {
    Type: (LoggingTypeConfigType|Mapping)?
}

/// Enable control plane logs for your cluster, all log types will be disabled if the array is empty
open class EnabledTypes {
}

typealias KubernetesNetworkConfigIpFamily = "ipv4"|"ipv6"

/// The Kubernetes network configuration for the cluster.
open class KubernetesNetworkConfig {
    ServiceIpv4Cidr: (String|Mapping)?
    ServiceIpv6Cidr: (String|Mapping)?
    IpFamily: (KubernetesNetworkConfigIpFamily|Mapping)?
}

/// An object representing the Outpost configuration to use for AWS EKS outpost cluster.
open class OutpostConfig {
    OutpostArns: Listing<String|Mapping>
    ControlPlaneInstanceType: String|Mapping
    ControlPlanePlacement: (ControlPlanePlacement)?
}

/// 
open class Provider {
    KeyArn: (String|Mapping)?
}

/// The cluster control plane logging configuration for your cluster. 
open class ClusterLogging {
    EnabledTypes: (EnabledTypes)?
}

/// Enable exporting the Kubernetes control plane logs for your cluster to CloudWatch Logs based on log types. By default, cluster control plane logs aren't exported to CloudWatch Logs.
open class Logging {
    ClusterLogging: (ClusterLogging)?
}

/// Specify the placement group of the control plane machines for your cluster.
open class ControlPlanePlacement {
    GroupName: (String|Mapping)?
}

typealias AccessConfigAuthenticationMode = "CONFIG_MAP"|"API_AND_CONFIG_MAP"|"API"

/// An object representing the Access Config to use for the cluster.
open class AccessConfig {
    BootstrapClusterCreatorAdminPermissions: (Boolean|Mapping)?
    AuthenticationMode: (AccessConfigAuthenticationMode|Mapping)?
}

/// An object representing an Amazon EKS cluster.
open class Cluster extends cloudformation.Resource {

    Type = "AWS::EKS::Cluster"


    /// The desired Kubernetes version for your cluster. If you don't specify a value here, the latest version available in Amazon EKS is used.
    hidden Version: (String(matches(Regex(#"1\.\d\d"#)))|Mapping)?

    /// 
    hidden EncryptionConfig: (Listing<EncryptionConfig>)?

    /// The unique name to give to your cluster.
    hidden Name: (String(matches(Regex(#"^[0-9A-Za-z][A-Za-z0-9\-_]*"#)))|Mapping)?

    /// 
    hidden KubernetesNetworkConfig: (KubernetesNetworkConfig)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden AccessConfig: (AccessConfig)?

    /// 
    hidden ResourcesVpcConfig: ResourcesVpcConfig

    /// 
    hidden OutpostConfig: (OutpostConfig)?

    /// The Amazon Resource Name (ARN) of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
    hidden RoleArn: String|Mapping

    /// 
    hidden Logging: (Logging)?

    Properties {
        ["Version"] = if (Version == null) null else Version
        ["EncryptionConfig"] = if (EncryptionConfig == null) null else EncryptionConfig
        ["Name"] = if (Name == null) null else Name
        ["KubernetesNetworkConfig"] = if (KubernetesNetworkConfig == null) null else KubernetesNetworkConfig
        ["Tags"] = if (Tags == null) null else Tags
        ["AccessConfig"] = if (AccessConfig == null) null else AccessConfig
        ["ResourcesVpcConfig"] = if (ResourcesVpcConfig == null) null else ResourcesVpcConfig
        ["OutpostConfig"] = if (OutpostConfig == null) null else OutpostConfig
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Logging"] = if (Logging == null) null else Logging
    }

}
