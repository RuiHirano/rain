/// AWS::EKS::IdentityProviderConfig
///
/// Generated by rain build --pkl-class AWS::EKS::IdentityProviderConfig
module aws.eks.identityproviderconfig

import "../../cloudformation.pkl"

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The key value pairs that describe required claims in the identity token. If set, each claim is verified to be present in the token with a matching value.
open class RequiredClaim {
    Key: String|Mapping
    Value: String|Mapping
}

/// An object representing an OpenID Connect (OIDC) configuration.
open class OidcIdentityProviderConfig {
    GroupsPrefix: (String|Mapping)?
    IssuerUrl: String|Mapping
    RequiredClaims: (Listing<RequiredClaim>)?
    UsernameClaim: (String|Mapping)?
    UsernamePrefix: (String|Mapping)?
    ClientId: String|Mapping
    GroupsClaim: (String|Mapping)?
}

/// An object representing an Amazon EKS IdentityProviderConfig.
open class IdentityProviderConfig extends cloudformation.Resource {

    Type = "AWS::EKS::IdentityProviderConfig"


    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    /// The name of the identity provider configuration.
    hidden ClusterName: String|Mapping

    /// The type of the identity provider configuration.
    hidden TypeProperty: IdentityProviderConfigType|Mapping

    /// The name of the OIDC provider configuration.
    hidden IdentityProviderConfigName: (String|Mapping)?

    /// 
    hidden Oidc: (OidcIdentityProviderConfig)?

    Properties {
        ["Tags"] = if (Tags == null) null else Tags
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["IdentityProviderConfigName"] = if (IdentityProviderConfigName == null) null else IdentityProviderConfigName
        ["Oidc"] = if (Oidc == null) null else Oidc
    }

}


typealias IdentityProviderConfigType = "oidc"
