/// AWS::EKS::Nodegroup
///
/// Generated by rain build --pkl-class AWS::EKS::Nodegroup
module aws.eks.nodegroup

import "../../cloudformation.pkl"

/// An object representing a launch template specification for AWS EKS Nodegroup.
open class LaunchTemplateSpecification {
    Id: (String|Mapping)?
    Version: (String|Mapping)?
    Name: (String|Mapping)?
}

/// An object representing a Taint specification for AWS EKS Nodegroup.
open class Taint {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
    Effect: (String|Mapping)?
}

/// An object representing a auto scaling group specification for AWS EKS Nodegroup.
open class ScalingConfig {
    MinSize: (Int|Mapping)?
    DesiredSize: (Int|Mapping)?
    MaxSize: (Int|Mapping)?
}

/// An object representing a remote access configuration specification for AWS EKS Nodegroup.
open class RemoteAccess {
    SourceSecurityGroups: (Listing<String|Mapping>)?
    Ec2SshKey: String|Mapping
}

/// The node group update configuration.
open class UpdateConfig {
    MaxUnavailable: (Number|Mapping)?
    MaxUnavailablePercentage: (Number|Mapping)?
}

/// Resource schema for AWS::EKS::Nodegroup
open class Nodegroup extends cloudformation.Resource {

    Type = "AWS::EKS::Nodegroup"


    /// The scaling configuration details for the Auto Scaling group that is created for your node group.
    hidden ScalingConfig: (ScalingConfig)?

    /// The root device disk size (in GiB) for your node group instances.
    hidden DiskSize: (Int|Mapping)?

    /// Force the update if the existing node group's pods are unable to be drained due to a pod disruption budget issue.
    hidden ForceUpdateEnabled: (Boolean|Mapping)?

    /// Specify the instance types for a node group.
    hidden InstanceTypes: (Listing<String|Mapping>)?

    /// The unique name to give your node group.
    hidden NodegroupName: (String|Mapping)?

    /// The remote access (SSH) configuration to use with your node group.
    hidden RemoteAccess: (RemoteAccess)?

    /// The AMI type for your node group.
    hidden AmiType: (String|Mapping)?

    /// The AMI version of the Amazon EKS-optimized AMI to use with your node group.
    hidden ReleaseVersion: (String|Mapping)?

    /// The subnets to use for the Auto Scaling group that is created for your node group.
    hidden Subnets: Listing<String|Mapping>

    /// The capacity type of your managed node group.
    hidden CapacityType: (String|Mapping)?

    /// The Amazon Resource Name (ARN) of the IAM role to associate with your node group.
    hidden NodeRole: String|Mapping

    /// The metadata, as key-value pairs, to apply to the node group to assist with categorization and organization. Follows same schema as Labels for consistency.
    hidden Tags: (Dynamic)?

    /// The Kubernetes taints to be applied to the nodes in the node group when they are created.
    hidden Taints: (Listing<Taint>)?

    /// Name of the cluster to create the node group in.
    hidden ClusterName: String|Mapping

    /// The Kubernetes labels to be applied to the nodes in the node group when they are created.
    hidden Labels: (Dynamic)?

    /// An object representing a node group's launch template specification.
    hidden LaunchTemplate: (LaunchTemplateSpecification)?

    /// The node group update configuration.
    hidden UpdateConfig: (UpdateConfig)?

    /// The Kubernetes version to use for your managed nodes.
    hidden Version: (String|Mapping)?

    Properties {
        ["ScalingConfig"] = if (ScalingConfig == null) null else ScalingConfig
        ["DiskSize"] = if (DiskSize == null) null else DiskSize
        ["ForceUpdateEnabled"] = if (ForceUpdateEnabled == null) null else ForceUpdateEnabled
        ["InstanceTypes"] = if (InstanceTypes == null) null else InstanceTypes
        ["NodegroupName"] = if (NodegroupName == null) null else NodegroupName
        ["RemoteAccess"] = if (RemoteAccess == null) null else RemoteAccess
        ["AmiType"] = if (AmiType == null) null else AmiType
        ["ReleaseVersion"] = if (ReleaseVersion == null) null else ReleaseVersion
        ["Subnets"] = if (Subnets == null) null else Subnets
        ["CapacityType"] = if (CapacityType == null) null else CapacityType
        ["NodeRole"] = if (NodeRole == null) null else NodeRole
        ["Tags"] = if (Tags == null) null else Tags
        ["Taints"] = if (Taints == null) null else Taints
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["Labels"] = if (Labels == null) null else Labels
        ["LaunchTemplate"] = if (LaunchTemplate == null) null else LaunchTemplate
        ["UpdateConfig"] = if (UpdateConfig == null) null else UpdateConfig
        ["Version"] = if (Version == null) null else Version
    }

}
