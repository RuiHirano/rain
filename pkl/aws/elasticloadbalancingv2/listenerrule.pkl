/// AWS::ElasticLoadBalancingV2::ListenerRule
///
/// Generated by rain build --pkl-class AWS::ElasticLoadBalancingV2::ListenerRule
module aws.elasticloadbalancingv2.listenerrule

import "../../cloudformation.pkl"

/// Information about the target group stickiness for a rule.
open class ListenerRuleTargetGroupStickinessConfig {
    Enabled: (Boolean|Mapping)?
    DurationSeconds: (Int|Mapping)?
}

/// Specifies information required when integrating with Amazon Cognito to authenticate users.
open class ListenerRuleAuthenticateCognitoConfig {
    SessionTimeout: (Int|Mapping)?
    Scope: (String|Mapping)?
    SessionCookieName: (String|Mapping)?
    UserPoolArn: String|Mapping
    AuthenticationRequestExtraParams: (Dynamic)?
    OnUnauthenticatedRequest: (String|Mapping)?
    UserPoolClientId: String|Mapping
    UserPoolDomain: String|Mapping
}

/// Information about a host header condition.
open class ListenerRuleHostHeaderConfig {
    Values: (Listing<String|Mapping>)?
}

/// Information about a redirect action.
///
///  A URI consists of the following components: protocol://hostname:port/path?query. You must modify at least one of the following components to avoid a redirect loop: protocol, hostname, port, or path. Any components that you do not modify retain their original values.
///  You can reuse URI components using the following reserved keywords:
///   +  #{protocol}
///   +  #{host}
///   +  #{port}
///   +  #{path} (the leading "/" is removed)
///   +  #{query}
///   
///  For example, you can change the path to "/new/#{path}", the hostname to "example.#{host}", or the query to "#{query}&value=xyz".
open class ListenerRuleRedirectConfig {
    Host: (String|Mapping)?
    Protocol: (String|Mapping)?
    StatusCode: String|Mapping
    Path: (String|Mapping)?
    Query: (String|Mapping)?
    Port: (String|Mapping)?
}

/// Information about a path pattern condition.
open class ListenerRulePathPatternConfig {
    Values: (Listing<String|Mapping>)?
}

/// Specifies an action for a listener rule.
open class ListenerRuleAction {
    TargetGroupArn: (String|Mapping)?
    FixedResponseConfig: (ListenerRuleFixedResponseConfig)?
    AuthenticateCognitoConfig: (ListenerRuleAuthenticateCognitoConfig)?
    Type: String|Mapping
    RedirectConfig: (ListenerRuleRedirectConfig)?
    ForwardConfig: (ListenerRuleForwardConfig)?
    AuthenticateOidcConfig: (ListenerRuleAuthenticateOidcConfig)?
    Order: (Int|Mapping)?
}

/// Information about a source IP condition.
///
///  You can use this condition to route based on the IP address of the source that connects to the load balancer. If a client is behind a proxy, this is the IP address of the proxy not the IP address of the client.
open class ListenerRuleSourceIpConfig {
    Values: (Listing<String|Mapping>)?
}

/// Specifies information required when returning a custom HTTP response.
open class ListenerRuleFixedResponseConfig {
    ContentType: (String|Mapping)?
    StatusCode: String|Mapping
    MessageBody: (String|Mapping)?
}

/// Specifies a condition for a listener rule.
open class ListenerRuleRuleCondition {
    HttpHeaderConfig: (ListenerRuleHttpHeaderConfig)?
    SourceIpConfig: (ListenerRuleSourceIpConfig)?
    HostHeaderConfig: (ListenerRuleHostHeaderConfig)?
    QueryStringConfig: (ListenerRuleQueryStringConfig)?
    Field: (String|Mapping)?
    Values: (Listing<String|Mapping>)?
    HttpRequestMethodConfig: (ListenerRuleHttpRequestMethodConfig)?
    PathPatternConfig: (ListenerRulePathPatternConfig)?
}

/// Information about a query string condition.
///
///  The query string component of a URI starts after the first '?' character and is terminated by either a '#' character or the end of the URI. A typical query string contains key/value pairs separated by '&' characters. The allowed characters are specified by RFC 3986. Any character can be percentage encoded.
open class ListenerRuleQueryStringConfig {
    Values: (Listing<ListenerRuleQueryStringKeyValue>)?
}

/// Information about a key/value pair.
open class ListenerRuleQueryStringKeyValue {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

/// Information about an HTTP method condition.
///
///  HTTP defines a set of request methods, also referred to as HTTP verbs. For more information, see the [HTTP Method Registry](https://docs.aws.amazon.com/https://www.iana.org/assignments/http-methods/http-methods.xhtml). You can also define custom HTTP methods.
open class ListenerRuleHttpRequestMethodConfig {
    Values: (Listing<String|Mapping>)?
}

/// Information about an HTTP header condition.
///
///  There is a set of standard HTTP header fields. You can also define custom HTTP header fields.
open class ListenerRuleHttpHeaderConfig {
    Values: (Listing<String|Mapping>)?
    HttpHeaderName: (String|Mapping)?
}

/// Information about how traffic will be distributed between multiple target groups in a forward rule.
open class ListenerRuleTargetGroupTuple {
    TargetGroupArn: (String|Mapping)?
    Weight: (Int|Mapping)?
}

/// Specifies information required using an identity provide (IdP) that is compliant with OpenID Connect (OIDC) to authenticate users.
open class ListenerRuleAuthenticateOidcConfig {
    OnUnauthenticatedRequest: (String|Mapping)?
    TokenEndpoint: String|Mapping
    SessionTimeout: (Int|Mapping)?
    ClientSecret: (String|Mapping)?
    AuthorizationEndpoint: String|Mapping
    SessionCookieName: (String|Mapping)?
    Scope: (String|Mapping)?
    Issuer: String|Mapping
    UserInfoEndpoint: String|Mapping
    ClientId: String|Mapping
    UseExistingClientSecret: (Boolean|Mapping)?
    AuthenticationRequestExtraParams: (Dynamic)?
}

/// Information for creating an action that distributes requests among one or more target groups. For Network Load Balancers, you can specify a single target group. Specify only when ``Type`` is ``forward``. If you specify both ``ForwardConfig`` and ``TargetGroupArn``, you can specify only one target group using ``ForwardConfig`` and it must be the same target group specified in ``TargetGroupArn``.
open class ListenerRuleForwardConfig {
    TargetGroupStickinessConfig: (ListenerRuleTargetGroupStickinessConfig)?
    TargetGroups: (Listing<ListenerRuleTargetGroupTuple>)?
}

/// Specifies a listener rule. The listener must be associated with an Application Load Balancer. Each rule consists of a priority, one or more actions, and one or more conditions.
///
///  For more information, see [Quotas for your Application Load Balancers](https://docs.aws.amazon.com/elasticloadbalancing/latest/application/load-balancer-limits.html) in the *User Guide for Application Load Balancers*.
open class ListenerRule extends cloudformation.Resource {

    Type = "AWS::ElasticLoadBalancingV2::ListenerRule"


    /// The conditions.
    ///
    ///  The rule can optionally include up to one of each of the following conditions: ``http-request-method``, ``host-header``, ``path-pattern``, and ``source-ip``. A rule can also optionally include one or more of each of the following conditions: ``http-header`` and ``query-string``.
    hidden Conditions: Listing<ListenerRuleRuleCondition>

    /// The Amazon Resource Name (ARN) of the listener.
    hidden ListenerArn: (String|Mapping)?

    /// The actions.
    ///
    ///  The rule must include exactly one of the following types of actions: ``forward``, ``fixed-response``, or ``redirect``, and it must be the last action to be performed. If the rule is for an HTTPS listener, it can also optionally include an authentication action.
    hidden Actions: Listing<ListenerRuleAction>

    /// The rule priority. A listener can't have multiple rules with the same priority.
    ///
    ///  If you try to reorder rules by updating their priorities, do not specify a new priority if an existing rule already uses this priority, as this can cause an error. If you need to reuse a priority with a different rule, you must remove it as a priority first, and then specify it in a subsequent update.
    hidden Priority: Int|Mapping

    Properties {
        ["Conditions"] = if (Conditions == null) null else Conditions
        ["ListenerArn"] = if (ListenerArn == null) null else ListenerArn
        ["Actions"] = if (Actions == null) null else Actions
        ["Priority"] = if (Priority == null) null else Priority
    }

}
