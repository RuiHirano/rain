/// AWS::ElasticLoadBalancingV2::TargetGroup
///
/// Generated by rain build --pkl-class AWS::ElasticLoadBalancingV2::TargetGroup
module aws.elasticloadbalancingv2.targetgroup

import "../../cloudformation.pkl"

/// 
open class Matcher {
    GrpcCode: (String|Mapping)?
    HttpCode: (String|Mapping)?
}

/// 
open class TargetDescription {
    AvailabilityZone: (String|Mapping)?
    Id: String|Mapping
    Port: (Int|Mapping)?
}

/// 
open class TargetGroupAttribute {
    Value: (String|Mapping)?
    Key: (String|Mapping)?
}

/// 
open class Tag {
    Value: String|Mapping
    Key: String|Mapping
}

/// Resource Type definition for AWS::ElasticLoadBalancingV2::TargetGroup
open class TargetGroup extends cloudformation.Resource {

    Type = "AWS::ElasticLoadBalancingV2::TargetGroup"


    /// The number of consecutive health check failures required before considering a target unhealthy.
    hidden UnhealthyThresholdCount: (Int|Mapping)?

    /// The identifier of the virtual private cloud (VPC). If the target is a Lambda function, this parameter does not apply.
    hidden VpcId: (String|Mapping)?

    /// The port the load balancer uses when performing health checks on targets. 
    hidden HealthCheckPort: (String|Mapping)?

    /// The tags.
    hidden Tags: (Listing<Tag>)?

    /// The approximate amount of time, in seconds, between health checks of an individual target.
    hidden HealthCheckIntervalSeconds: (Int|Mapping)?

    /// [HTTP/HTTPS health checks] The HTTP or gRPC codes to use when checking for a successful response from a target.
    hidden Matcher: (Matcher)?

    /// [HTTP/HTTPS protocol] The protocol version. The possible values are GRPC, HTTP1, and HTTP2.
    hidden ProtocolVersion: (String|Mapping)?

    /// The protocol to use for routing traffic to the targets.
    hidden Protocol: (String|Mapping)?

    /// The type of IP address used for this target group. The possible values are ipv4 and ipv6. 
    hidden IpAddressType: (String|Mapping)?

    /// Indicates whether health checks are enabled. If the target type is lambda, health checks are disabled by default but can be enabled. If the target type is instance, ip, or alb, health checks are always enabled and cannot be disabled.
    hidden HealthCheckEnabled: (Boolean|Mapping)?

    /// The number of consecutive health checks successes required before considering an unhealthy target healthy. 
    hidden HealthyThresholdCount: (Int|Mapping)?

    /// The type of target that you must specify when registering targets with this target group. You can't specify targets for a target group using more than one target type.
    hidden TargetType: (String|Mapping)?

    /// The name of the target group.
    hidden Name: (String|Mapping)?

    /// The protocol the load balancer uses when performing health checks on targets. 
    hidden HealthCheckProtocol: (String|Mapping)?

    /// [HTTP/HTTPS health checks] The destination for health checks on the targets. [HTTP1 or HTTP2 protocol version] The ping path. The default is /. [GRPC protocol version] The path of a custom health check method with the format /package.service/method. The default is /AWS.ALB/healthcheck.
    hidden HealthCheckPath: (String|Mapping)?

    /// The port on which the targets receive traffic. This port is used unless you specify a port override when registering the target. If the target is a Lambda function, this parameter does not apply. If the protocol is GENEVE, the supported port is 6081.
    hidden Port: (Int|Mapping)?

    /// The targets.
    hidden Targets: (Listing<TargetDescription>)?

    /// The amount of time, in seconds, during which no response from a target means a failed health check.
    hidden HealthCheckTimeoutSeconds: (Int|Mapping)?

    /// The attributes.
    hidden TargetGroupAttributes: (Listing<TargetGroupAttribute>)?

    Properties {
        ["UnhealthyThresholdCount"] = if (UnhealthyThresholdCount == null) null else UnhealthyThresholdCount
        ["VpcId"] = if (VpcId == null) null else VpcId
        ["HealthCheckPort"] = if (HealthCheckPort == null) null else HealthCheckPort
        ["Tags"] = if (Tags == null) null else Tags
        ["HealthCheckIntervalSeconds"] = if (HealthCheckIntervalSeconds == null) null else HealthCheckIntervalSeconds
        ["Matcher"] = if (Matcher == null) null else Matcher
        ["ProtocolVersion"] = if (ProtocolVersion == null) null else ProtocolVersion
        ["Protocol"] = if (Protocol == null) null else Protocol
        ["IpAddressType"] = if (IpAddressType == null) null else IpAddressType
        ["HealthCheckEnabled"] = if (HealthCheckEnabled == null) null else HealthCheckEnabled
        ["HealthyThresholdCount"] = if (HealthyThresholdCount == null) null else HealthyThresholdCount
        ["TargetType"] = if (TargetType == null) null else TargetType
        ["Name"] = if (Name == null) null else Name
        ["HealthCheckProtocol"] = if (HealthCheckProtocol == null) null else HealthCheckProtocol
        ["HealthCheckPath"] = if (HealthCheckPath == null) null else HealthCheckPath
        ["Port"] = if (Port == null) null else Port
        ["Targets"] = if (Targets == null) null else Targets
        ["HealthCheckTimeoutSeconds"] = if (HealthCheckTimeoutSeconds == null) null else HealthCheckTimeoutSeconds
        ["TargetGroupAttributes"] = if (TargetGroupAttributes == null) null else TargetGroupAttributes
    }

}
