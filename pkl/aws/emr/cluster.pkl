/// AWS::EMR::Cluster
///
/// Generated by rain build --pkl-class AWS::EMR::Cluster
module aws.emr.cluster

import "../../cloudformation.pkl"

/// 
open class BootstrapActionConfig {
    ScriptBootstrapAction: ScriptBootstrapActionConfig
    Name: String|Mapping
}

/// 
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class SpotProvisioningSpecification {
    AllocationStrategy: (String|Mapping)?
    TimeoutDurationMinutes: Int|Mapping
    TimeoutAction: String|Mapping
    BlockDurationMinutes: (Int|Mapping)?
}

/// 
open class InstanceGroupConfig {
    AutoScalingPolicy: (AutoScalingPolicy)?
    BidPrice: (String|Mapping)?
    CustomAmiId: (String|Mapping)?
    InstanceType: String|Mapping
    Name: (String|Mapping)?
    InstanceCount: Int|Mapping
    EbsConfiguration: (EbsConfiguration)?
    Configurations: (Listing<Configuration>)?
    Market: (String|Mapping)?
}

/// 
open class VolumeSpecification {
    Throughput: (Int|Mapping)?
    VolumeType: String|Mapping
    Iops: (Int|Mapping)?
    SizeInGB: Int|Mapping
}

/// 
open class AutoTerminationPolicy {
    IdleTimeout: (Int|Mapping)?
}

/// 
open class KerberosAttributes {
    KdcAdminPassword: String|Mapping
    Realm: String|Mapping
    ADDomainJoinPassword: (String|Mapping)?
    ADDomainJoinUser: (String|Mapping)?
    CrossRealmTrustPrincipalPassword: (String|Mapping)?
}

/// 
open class ScriptBootstrapActionConfig {
    Args: (Listing<String|Mapping>)?
    Path: String|Mapping
}

/// 
open class OnDemandProvisioningSpecification {
    AllocationStrategy: String|Mapping
}

/// 
open class ScalingRule {
    Action: ScalingAction
    Description: (String|Mapping)?
    Trigger: ScalingTrigger
    Name: String|Mapping
}

/// 
open class ComputeLimits {
    UnitType: String|Mapping
    MaximumOnDemandCapacityUnits: (Int|Mapping)?
    MaximumCapacityUnits: Int|Mapping
    MaximumCoreCapacityUnits: (Int|Mapping)?
    MinimumCapacityUnits: Int|Mapping
}

/// 
open class MetricDimension {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class AutoScalingPolicy {
    Rules: Listing<ScalingRule>
    Constraints: ScalingConstraints
}

/// 
open class ScalingTrigger {
    CloudWatchAlarmDefinition: CloudWatchAlarmDefinition
}

/// 
open class ScalingAction {
    Market: (String|Mapping)?
    SimpleScalingPolicyConfiguration: SimpleScalingPolicyConfiguration
}

/// 
open class Application {
    AdditionalInfo: (Dynamic)?
    Args: (Listing<String|Mapping>)?
    Version: (String|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class SimpleScalingPolicyConfiguration {
    ScalingAdjustment: Int|Mapping
    CoolDown: (Int|Mapping)?
    AdjustmentType: (String|Mapping)?
}

/// 
open class EbsBlockDeviceConfig {
    VolumeSpecification: VolumeSpecification
    VolumesPerInstance: (Int|Mapping)?
}

/// 
open class HadoopJarStepConfig {
    Args: (Listing<String|Mapping>)?
    MainClass: (String|Mapping)?
    Jar: String|Mapping
    StepProperties: (Listing<KeyValue>)?
}

/// 
open class CloudWatchAlarmDefinition {
    ComparisonOperator: String|Mapping
    Period: Int|Mapping
    Threshold: Number|Mapping
    Namespace: (String|Mapping)?
    MetricName: String|Mapping
    Statistic: (String|Mapping)?
    Dimensions: (Listing<MetricDimension>)?
    EvaluationPeriods: (Int|Mapping)?
    Unit: (String|Mapping)?
}

/// 
open class PlacementType {
    AvailabilityZone: String|Mapping
}

/// 
open class StepConfig {
    HadoopJarStep: HadoopJarStepConfig
    ActionOnFailure: (String|Mapping)?
    Name: String|Mapping
}

/// 
open class ManagedScalingPolicy {
    ComputeLimits: (ComputeLimits)?
}

/// 
open class InstanceTypeConfig {
    InstanceType: String|Mapping
    BidPrice: (String|Mapping)?
    WeightedCapacity: (Int|Mapping)?
    EbsConfiguration: (EbsConfiguration)?
    BidPriceAsPercentageOfOnDemandPrice: (Number|Mapping)?
    CustomAmiId: (String|Mapping)?
    Configurations: (Listing<Configuration>)?
}

/// 
open class InstanceFleetProvisioningSpecifications {
    SpotSpecification: (SpotProvisioningSpecification)?
    OnDemandSpecification: (OnDemandProvisioningSpecification)?
}

/// 
open class KeyValue {
    Value: (String|Mapping)?
    Key: (String|Mapping)?
}

/// 
open class Configuration {
    ConfigurationProperties: (Dynamic)?
    Configurations: (Listing<Configuration>)?
    Classification: (String|Mapping)?
}

/// 
open class ScalingConstraints {
    MinCapacity: Int|Mapping
    MaxCapacity: Int|Mapping
}

/// 
open class EbsConfiguration {
    EbsBlockDeviceConfigs: (Listing<EbsBlockDeviceConfig>)?
    EbsOptimized: (Boolean|Mapping)?
}

/// 
open class InstanceFleetConfig {
    TargetSpotCapacity: (Int|Mapping)?
    InstanceTypeConfigs: (Listing<InstanceTypeConfig>)?
    LaunchSpecifications: (InstanceFleetProvisioningSpecifications)?
    Name: (String|Mapping)?
    TargetOnDemandCapacity: (Int|Mapping)?
}

/// 
open class PlacementGroupConfig {
    InstanceRole: String|Mapping
    PlacementStrategy: (String|Mapping)?
}

/// 
open class JobFlowInstancesConfig {
    TerminationProtected: (Boolean|Mapping)?
    KeepJobFlowAliveWhenNoSteps: (Boolean|Mapping)?
    Placement: (PlacementType)?
    AdditionalMasterSecurityGroups: (Listing<String|Mapping>)?
    CoreInstanceGroup: (InstanceGroupConfig)?
    MasterInstanceGroup: (InstanceGroupConfig)?
    Ec2SubnetId: (String|Mapping)?
    UnhealthyNodeReplacement: (Boolean|Mapping)?
    EmrManagedSlaveSecurityGroup: (String|Mapping)?
    AdditionalSlaveSecurityGroups: (Listing<String|Mapping>)?
    CoreInstanceFleet: (InstanceFleetConfig)?
    Ec2SubnetIds: (Listing<String|Mapping>)?
    HadoopVersion: (String|Mapping)?
    Ec2KeyName: (String|Mapping)?
    TaskInstanceFleets: (Listing<InstanceFleetConfig>)?
    TaskInstanceGroups: (Listing<InstanceGroupConfig>)?
    MasterInstanceFleet: (InstanceFleetConfig)?
    EmrManagedMasterSecurityGroup: (String|Mapping)?
    ServiceAccessSecurityGroup: (String|Mapping)?
}

/// Resource Type definition for AWS::EMR::Cluster
open class Cluster extends cloudformation.Resource {

    Type = "AWS::EMR::Cluster"


    /// 
    hidden VisibleToAllUsers: (Boolean|Mapping)?

    /// 
    hidden SecurityConfiguration: (String|Mapping)?

    /// 
    hidden AdditionalInfo: (Dynamic)?

    /// 
    hidden PlacementGroupConfigs: (Listing<PlacementGroupConfig>)?

    /// 
    hidden ServiceRole: String|Mapping

    /// 
    hidden LogUri: (String|Mapping)?

    /// 
    hidden AutoScalingRole: (String|Mapping)?

    /// 
    hidden EbsRootVolumeThroughput: (Int|Mapping)?

    /// 
    hidden Steps: (Listing<StepConfig>)?

    /// 
    hidden LogEncryptionKmsKeyId: (String|Mapping)?

    /// 
    hidden ManagedScalingPolicy: (ManagedScalingPolicy)?

    /// 
    hidden AutoTerminationPolicy: (AutoTerminationPolicy)?

    /// 
    hidden CustomAmiId: (String|Mapping)?

    /// 
    hidden StepConcurrencyLevel: (Int|Mapping)?

    /// 
    hidden Instances: JobFlowInstancesConfig

    /// 
    hidden ReleaseLabel: (String|Mapping)?

    /// 
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden KerberosAttributes: (KerberosAttributes)?

    /// 
    hidden EbsRootVolumeIops: (Int|Mapping)?

    /// 
    hidden JobFlowRole: String|Mapping

    /// 
    hidden BootstrapActions: (Listing<BootstrapActionConfig>)?

    /// 
    hidden Name: String|Mapping

    /// 
    hidden EbsRootVolumeSize: (Int|Mapping)?

    /// 
    hidden Configurations: (Listing<Configuration>)?

    /// 
    hidden Applications: (Listing<Application>)?

    /// 
    hidden ScaleDownBehavior: (String|Mapping)?

    /// 
    hidden OSReleaseLabel: (String|Mapping)?

    Properties {
        ["VisibleToAllUsers"] = if (VisibleToAllUsers == null) null else VisibleToAllUsers
        ["SecurityConfiguration"] = if (SecurityConfiguration == null) null else SecurityConfiguration
        ["AdditionalInfo"] = if (AdditionalInfo == null) null else AdditionalInfo
        ["PlacementGroupConfigs"] = if (PlacementGroupConfigs == null) null else PlacementGroupConfigs
        ["ServiceRole"] = if (ServiceRole == null) null else ServiceRole
        ["LogUri"] = if (LogUri == null) null else LogUri
        ["AutoScalingRole"] = if (AutoScalingRole == null) null else AutoScalingRole
        ["EbsRootVolumeThroughput"] = if (EbsRootVolumeThroughput == null) null else EbsRootVolumeThroughput
        ["Steps"] = if (Steps == null) null else Steps
        ["LogEncryptionKmsKeyId"] = if (LogEncryptionKmsKeyId == null) null else LogEncryptionKmsKeyId
        ["ManagedScalingPolicy"] = if (ManagedScalingPolicy == null) null else ManagedScalingPolicy
        ["AutoTerminationPolicy"] = if (AutoTerminationPolicy == null) null else AutoTerminationPolicy
        ["CustomAmiId"] = if (CustomAmiId == null) null else CustomAmiId
        ["StepConcurrencyLevel"] = if (StepConcurrencyLevel == null) null else StepConcurrencyLevel
        ["Instances"] = if (Instances == null) null else Instances
        ["ReleaseLabel"] = if (ReleaseLabel == null) null else ReleaseLabel
        ["Tags"] = if (Tags == null) null else Tags
        ["KerberosAttributes"] = if (KerberosAttributes == null) null else KerberosAttributes
        ["EbsRootVolumeIops"] = if (EbsRootVolumeIops == null) null else EbsRootVolumeIops
        ["JobFlowRole"] = if (JobFlowRole == null) null else JobFlowRole
        ["BootstrapActions"] = if (BootstrapActions == null) null else BootstrapActions
        ["Name"] = if (Name == null) null else Name
        ["EbsRootVolumeSize"] = if (EbsRootVolumeSize == null) null else EbsRootVolumeSize
        ["Configurations"] = if (Configurations == null) null else Configurations
        ["Applications"] = if (Applications == null) null else Applications
        ["ScaleDownBehavior"] = if (ScaleDownBehavior == null) null else ScaleDownBehavior
        ["OSReleaseLabel"] = if (OSReleaseLabel == null) null else OSReleaseLabel
    }

}
