/// AWS::EMR::Studio
///
/// Generated by rain build --pkl-class AWS::EMR::Studio
module aws.emr.studio

import "../../cloudformation.pkl"

/// Identifier of a subnet
open class SubnetId {
}

/// 
open class Arn {
}

/// 
open class Tags {
}

/// An arbitrary set of tags (key-value pairs) for this EMR Studio.
open class Tag {
    Key: String(matches(Regex(#"^(?!aws:)[a-zA-Z+-=._:/]+$"#)))|Mapping
    Value: String(matches(Regex(#"[a-zA-Z+-=._:/]+$"#)))|Mapping
}

/// Resource schema for AWS::EMR::Studio
open class Studio extends cloudformation.Resource {

    Type = "AWS::EMR::Studio"


    /// The ID of the Amazon EMR Studio Workspace security group. The Workspace security group allows outbound network traffic to resources in the Engine security group, and it must be in the same VPC specified by VpcId.
    hidden WorkspaceSecurityGroupId: String(matches(Regex(#"^sg-[a-zA-Z0-9\-._]+$"#)))|Mapping

    /// Your identity provider's authentication endpoint. Amazon EMR Studio redirects federated users to this endpoint for authentication when logging in to a Studio with the Studio URL.
    hidden IdpAuthUrl: (String(matches(Regex(#"^https://[0-9a-zA-Z]([-.\w]*[0-9a-zA-Z])(:[0-9]*)*([?/#].*)?$"#)))|Mapping)?

    /// A Boolean indicating whether to enable Trusted identity propagation for the Studio. The default value is false.
    hidden TrustedIdentityPropagationEnabled: (Boolean|Mapping)?

    /// The ARN of the IAM Identity Center instance to create the Studio application.
    hidden IdcInstanceArn: (String|Mapping)?

    /// The IAM user role that will be assumed by users and groups logged in to a Studio. The permissions attached to this IAM role can be scoped down for each user or group using session policies.
    hidden UserRole: (Arn)?

    /// The ID of the Amazon Virtual Private Cloud (Amazon VPC) to associate with the Studio.
    hidden VpcId: String(matches(Regex(#"^(vpc-[0-9a-f]{8}|vpc-[0-9a-f]{17})$"#)))|Mapping

    /// Specifies whether IAM Identity Center user assignment is REQUIRED or OPTIONAL. If the value is set to REQUIRED, users must be explicitly assigned to the Studio application to access the Studio.
    hidden IdcUserAssignment: (StudioIdcUserAssignment|Mapping)?

    /// The AWS KMS key identifier (ARN) used to encrypt AWS EMR Studio workspace and notebook files when backed up to AWS S3.
    hidden EncryptionKeyArn: (Arn)?

    /// The default Amazon S3 location to back up EMR Studio Workspaces and notebook files. A Studio user can select an alternative Amazon S3 location when creating a Workspace.
    hidden DefaultS3Location: String(matches(Regex(#"^s3://.*"#)))|Mapping

    /// A list of tags to associate with the Studio. Tags are user-defined key-value pairs that consist of a required key string with a maximum of 128 characters, and an optional value string with a maximum of 256 characters.
    hidden Tags: (Tags)?

    /// A detailed description of the Studio.
    hidden Description: (String|Mapping)?

    /// The ID of the Amazon EMR Studio Engine security group. The Engine security group allows inbound network traffic from the Workspace security group, and it must be in the same VPC specified by VpcId.
    hidden EngineSecurityGroupId: String(matches(Regex(#"^sg-[a-zA-Z0-9\-._]+$"#)))|Mapping

    /// The name of relay state parameter for external Identity Provider.
    hidden IdpRelayStateParameterName: (String|Mapping)?

    /// Specifies whether the Studio authenticates users using single sign-on (SSO) or IAM. Amazon EMR Studio currently only supports SSO authentication.
    hidden AuthMode: StudioAuthMode|Mapping

    /// A descriptive name for the Amazon EMR Studio.
    hidden Name: String(matches(Regex(#"[a-zA-Z0-9_-]+"#)))|Mapping

    /// The IAM role that will be assumed by the Amazon EMR Studio. The service role provides a way for Amazon EMR Studio to interoperate with other AWS services.
    hidden ServiceRole: Arn

    /// A list of up to 5 subnet IDs to associate with the Studio. The subnets must belong to the VPC specified by VpcId. Studio users can create a Workspace in any of the specified subnets.
    hidden SubnetIds: Listing<SubnetId>

    Properties {
        ["WorkspaceSecurityGroupId"] = if (WorkspaceSecurityGroupId == null) null else WorkspaceSecurityGroupId
        ["IdpAuthUrl"] = if (IdpAuthUrl == null) null else IdpAuthUrl
        ["TrustedIdentityPropagationEnabled"] = if (TrustedIdentityPropagationEnabled == null) null else TrustedIdentityPropagationEnabled
        ["IdcInstanceArn"] = if (IdcInstanceArn == null) null else IdcInstanceArn
        ["UserRole"] = if (UserRole == null) null else UserRole
        ["VpcId"] = if (VpcId == null) null else VpcId
        ["IdcUserAssignment"] = if (IdcUserAssignment == null) null else IdcUserAssignment
        ["EncryptionKeyArn"] = if (EncryptionKeyArn == null) null else EncryptionKeyArn
        ["DefaultS3Location"] = if (DefaultS3Location == null) null else DefaultS3Location
        ["Tags"] = if (Tags == null) null else Tags
        ["Description"] = if (Description == null) null else Description
        ["EngineSecurityGroupId"] = if (EngineSecurityGroupId == null) null else EngineSecurityGroupId
        ["IdpRelayStateParameterName"] = if (IdpRelayStateParameterName == null) null else IdpRelayStateParameterName
        ["AuthMode"] = if (AuthMode == null) null else AuthMode
        ["Name"] = if (Name == null) null else Name
        ["ServiceRole"] = if (ServiceRole == null) null else ServiceRole
        ["SubnetIds"] = if (SubnetIds == null) null else SubnetIds
    }

}


typealias StudioIdcUserAssignment = "REQUIRED"|"OPTIONAL"

typealias StudioAuthMode = "SSO"|"IAM"
