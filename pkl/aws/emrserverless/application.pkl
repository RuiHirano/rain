/// AWS::EMRServerless::Application
///
/// Generated by rain build --pkl-class AWS::EMRServerless::Application
module aws.emrserverless.application

import "../../cloudformation.pkl"

typealias ApplicationSecurityGroupId = String


/// Configuration for a JobRun.
open class ApplicationConfigurationObject {
    Classification: ApplicationClassification
    Properties: (Dynamic)?
    Configurations: (Listing<ApplicationConfigurationObject>)?
}

typealias ApplicationSensitivePropertiesKeyValuePair = String


/// 
open class ApplicationNetworkConfiguration {
    SubnetIds: (Listing<ApplicationSubnetId>)?
    SecurityGroupIds: (Listing<ApplicationSecurityGroupId>)?
}

typealias ApplicationSensitivePropertiesMap = String


/// 
open class ApplicationLogTypeMapKeyValuePair {
    Value: ApplicationLogTypeList
    Key: ApplicationWorkerTypeString
}

/// The image configuration.
open class ApplicationImageConfigurationInput {
    ImageUri: (String(matches(Regex(#"^([a-z0-9]+[a-z0-9-.]*)\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\:([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))$"#)))|Mapping)?
}

/// The specifications for a worker type.
open class ApplicationWorkerTypeSpecificationInput {
    ImageConfiguration: (ApplicationImageConfigurationInput)?
}

/// 
open class ApplicationWorkerConfiguration {
    Cpu: ApplicationCpuSize
    Memory: ApplicationMemorySize
    Disk: (ApplicationDiskSize)?
}

/// 
open class ApplicationS3MonitoringConfiguration {
    LogUri: (ApplicationUriString)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

typealias ApplicationConfigurationList = Listing<(ApplicationConfigurationObject)?>


/// 
open class ApplicationManagedPersistenceMonitoringConfiguration {
    Enabled: (Boolean|Mapping)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

typealias ApplicationLogTypeString = String


typealias ApplicationArchitecture = "ARM64"|"X86_64"


/// Monitoring configuration for batch and interactive JobRun.
open class ApplicationMonitoringConfiguration {
    S3MonitoringConfiguration: (ApplicationS3MonitoringConfiguration)?
    ManagedPersistenceMonitoringConfiguration: (ApplicationManagedPersistenceMonitoringConfiguration)?
    CloudWatchLoggingConfiguration: (ApplicationCloudWatchLoggingConfiguration)?
}

typealias ApplicationInitialCapacityConfigMap = Listing<(ApplicationInitialCapacityConfigKeyValuePair)?>


/// Configuration for Auto Start of Application
open class ApplicationAutoStartConfiguration {
    Enabled: (Boolean|Mapping)?
}

typealias ApplicationUriString = String


typealias ApplicationEncryptionKeyArn = String


/// A key-value pair to associate with a resource.
open class ApplicationTag {
    Key: String(matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]+$"#)))|Mapping
    Value: String(matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]*$"#)))|Mapping
}

typealias ApplicationMemorySize = String


typealias ApplicationLogStreamNamePrefix = String


typealias ApplicationClassification = String


typealias ApplicationCpuSize = String


/// 
open class ApplicationMaximumAllowedResources {
    Cpu: ApplicationCpuSize
    Memory: ApplicationMemorySize
    Disk: (ApplicationDiskSize)?
}

/// 
open class ApplicationInitialCapacityConfig {
    WorkerCount: Int|Mapping
    WorkerConfiguration: ApplicationWorkerConfiguration
}

typealias ApplicationLogGroupName = String


/// 
open class ApplicationInitialCapacityConfigKeyValuePair {
    Key: String(matches(Regex(#"^[a-zA-Z]+[-_]*[a-zA-Z]+$"#)))|Mapping
    Value: ApplicationInitialCapacityConfig
}

/// Configuration for Auto Stop of Application
open class ApplicationAutoStopConfiguration {
    Enabled: (Boolean|Mapping)?
    IdleTimeoutMinutes: (Int|Mapping)?
}

/// 
open class ApplicationCloudWatchLoggingConfiguration {
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
    LogTypeMap: (Listing<ApplicationLogTypeMapKeyValuePair>)?
    Enabled: (Boolean|Mapping)?
    LogGroupName: (ApplicationLogGroupName)?
    LogStreamNamePrefix: (ApplicationLogStreamNamePrefix)?
}

typealias ApplicationLogTypeList = Listing<(ApplicationLogTypeString)?>


typealias ApplicationWorkerTypeSpecificationInputMap = Mapping<String, Any>


typealias ApplicationDiskSize = String


typealias ApplicationSubnetId = String


typealias ApplicationWorkerTypeString = String


/// Resource schema for AWS::EMRServerless::Application Type
open class Application extends cloudformation.Resource {

    Type = "AWS::EMRServerless::Application"


    /// User friendly Application name.
    hidden Name: (String(matches(Regex(#"^[A-Za-z0-9._\/#-]+$"#)))|Mapping)?

    /// EMR release label.
    hidden ReleaseLabel: String(matches(Regex(#"^[A-Za-z0-9._/-]+$"#)))|Mapping

    /// Tag map with key and value
    hidden Tags: (Listing<ApplicationTag>)?

    /// Configuration for Auto Start of Application.
    hidden AutoStartConfiguration: (ApplicationAutoStartConfiguration)?

    /// Configuration for Auto Stop of Application.
    hidden AutoStopConfiguration: (ApplicationAutoStopConfiguration)?

    /// 
    hidden RuntimeConfiguration: (ApplicationConfigurationList)?

    /// 
    hidden Architecture: (ApplicationArchitecture)?

    /// The type of the application
    hidden TypeProperty: String|Mapping

    /// 
    hidden MonitoringConfiguration: (ApplicationMonitoringConfiguration)?

    /// The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
    hidden WorkerTypeSpecifications: (ApplicationWorkerTypeSpecificationInputMap)?

    /// Initial capacity initialized when an Application is started.
    hidden InitialCapacity: (ApplicationInitialCapacityConfigMap)?

    /// 
    hidden ImageConfiguration: (ApplicationImageConfigurationInput)?

    /// Network Configuration for customer VPC connectivity.
    hidden NetworkConfiguration: (ApplicationNetworkConfiguration)?

    /// Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
    hidden MaximumCapacity: (ApplicationMaximumAllowedResources)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["ReleaseLabel"] = if (ReleaseLabel == null) null else ReleaseLabel
        ["Tags"] = if (Tags == null) null else Tags
        ["AutoStartConfiguration"] = if (AutoStartConfiguration == null) null else AutoStartConfiguration
        ["AutoStopConfiguration"] = if (AutoStopConfiguration == null) null else AutoStopConfiguration
        ["RuntimeConfiguration"] = if (RuntimeConfiguration == null) null else RuntimeConfiguration
        ["Architecture"] = if (Architecture == null) null else Architecture
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["MonitoringConfiguration"] = if (MonitoringConfiguration == null) null else MonitoringConfiguration
        ["WorkerTypeSpecifications"] = if (WorkerTypeSpecifications == null) null else WorkerTypeSpecifications
        ["InitialCapacity"] = if (InitialCapacity == null) null else InitialCapacity
        ["ImageConfiguration"] = if (ImageConfiguration == null) null else ImageConfiguration
        ["NetworkConfiguration"] = if (NetworkConfiguration == null) null else NetworkConfiguration
        ["MaximumCapacity"] = if (MaximumCapacity == null) null else MaximumCapacity
    }

}
