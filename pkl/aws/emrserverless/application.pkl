/// AWS::EMRServerless::Application
///
/// Generated by rain build --pkl-class AWS::EMRServerless::Application
module aws.emrserverless.application

import "../../cloudformation.pkl"

/// 
open class ApplicationLogTypeMapKeyValuePair {
    Key: ApplicationWorkerTypeString
    Value: ApplicationLogTypeList
}

/// The specifications for a worker type.
open class ApplicationWorkerTypeSpecificationInput {
    ImageConfiguration: (ApplicationImageConfigurationInput)?
}

/// 
open class ApplicationWorkerConfiguration {
    Cpu: ApplicationCpuSize
    Memory: ApplicationMemorySize
    Disk: (ApplicationDiskSize)?
}

typealias ApplicationLogTypeList = Listing<(ApplicationLogTypeString)?>


typealias ApplicationClassification = String|Mapping


typealias ApplicationUriString = String|Mapping


/// 
open class ApplicationCloudWatchLoggingConfiguration {
    LogStreamNamePrefix: (ApplicationLogStreamNamePrefix)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
    LogTypeMap: (Listing<ApplicationLogTypeMapKeyValuePair>)?
    Enabled: (Boolean|Mapping)?
    LogGroupName: (ApplicationLogGroupName)?
}

typealias ApplicationSensitivePropertiesMap = String|Mapping


typealias ApplicationSensitivePropertiesKeyValuePair = String|Mapping


typealias ApplicationEncryptionKeyArn = String|Mapping


typealias ApplicationCpuSize = String|Mapping


/// 
open class ApplicationS3MonitoringConfiguration {
    LogUri: (ApplicationUriString)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

typealias ApplicationWorkerTypeString = String|Mapping


typealias ApplicationLogStreamNamePrefix = String|Mapping


/// 
open class ApplicationInitialCapacityConfig {
    WorkerCount: Int|Mapping
    WorkerConfiguration: ApplicationWorkerConfiguration
}

typealias ApplicationConfigurationObjectProperties = Mapping<String, Any>

/// Configuration for a JobRun.
open class ApplicationConfigurationObject {
    Configurations: (Listing<ApplicationConfigurationObject>)?
    Classification: ApplicationClassification
    Properties: (ApplicationConfigurationObjectProperties)?
}

/// 
open class ApplicationManagedPersistenceMonitoringConfiguration {
    Enabled: (Boolean|Mapping)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

typealias ApplicationMemorySize = String|Mapping


typealias ApplicationSubnetId = String|Mapping


typealias ApplicationLogGroupName = String|Mapping


/// Configuration for Auto Start of Application
open class ApplicationAutoStartConfiguration {
    Enabled: (Boolean|Mapping)?
}

/// 
open class ApplicationNetworkConfiguration {
    SecurityGroupIds: (Listing<ApplicationSecurityGroupId>)?
    SubnetIds: (Listing<ApplicationSubnetId>)?
}

typealias ApplicationDiskSize = String|Mapping


/// Configuration for Auto Stop of Application
open class ApplicationAutoStopConfiguration {
    Enabled: (Boolean|Mapping)?
    IdleTimeoutMinutes: (Int|Mapping)?
}

/// A key-value pair to associate with a resource.
open class ApplicationTag {
    Key: String(matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]+$"#)))|Mapping
    Value: String(matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]*$"#)))|Mapping
}

/// The image configuration.
open class ApplicationImageConfigurationInput {
    ImageUri: (String(matches(Regex(#"^([a-z0-9]+[a-z0-9-.]*)\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\:([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))$"#)))|Mapping)?
}

typealias ApplicationArchitecture = String|Mapping


typealias ApplicationLogTypeString = String|Mapping


typealias ApplicationSecurityGroupId = String|Mapping


typealias ApplicationInitialCapacityConfigMap = Listing<(ApplicationInitialCapacityConfigKeyValuePair)?>


/// Monitoring configuration for batch and interactive JobRun.
open class ApplicationMonitoringConfiguration {
    S3MonitoringConfiguration: (ApplicationS3MonitoringConfiguration)?
    ManagedPersistenceMonitoringConfiguration: (ApplicationManagedPersistenceMonitoringConfiguration)?
    CloudWatchLoggingConfiguration: (ApplicationCloudWatchLoggingConfiguration)?
}

/// 
open class ApplicationMaximumAllowedResources {
    Disk: (ApplicationDiskSize)?
    Cpu: ApplicationCpuSize
    Memory: ApplicationMemorySize
}

typealias ApplicationConfigurationList = Listing<(ApplicationConfigurationObject)?>


typealias ApplicationWorkerTypeSpecificationInputMap = Mapping<String, Any>


/// 
open class ApplicationInitialCapacityConfigKeyValuePair {
    Key: String(matches(Regex(#"^[a-zA-Z]+[-_]*[a-zA-Z]+$"#)))|Mapping
    Value: ApplicationInitialCapacityConfig
}

/// Resource schema for AWS::EMRServerless::Application Type
open class Application extends cloudformation.Resource {

    Type = "AWS::EMRServerless::Application"


    /// Configuration for Auto Stop of Application.
    hidden AutoStopConfiguration: (ApplicationAutoStopConfiguration)?

    /// 
    hidden ImageConfiguration: (ApplicationImageConfigurationInput)?

    /// The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
    hidden WorkerTypeSpecifications: (ApplicationWorkerTypeSpecificationInputMap)?

    /// Tag map with key and value
    hidden Tags: (Listing<ApplicationTag>)?

    /// EMR release label.
    hidden ReleaseLabel: String(matches(Regex(#"^[A-Za-z0-9._/-]+$"#)))|Mapping

    /// The type of the application
    hidden TypeProperty: String|Mapping

    /// Initial capacity initialized when an Application is started.
    hidden InitialCapacity: (ApplicationInitialCapacityConfigMap)?

    /// Network Configuration for customer VPC connectivity.
    hidden NetworkConfiguration: (ApplicationNetworkConfiguration)?

    /// 
    hidden Architecture: (ApplicationArchitecture)?

    /// User friendly Application name.
    hidden Name: (String(matches(Regex(#"^[A-Za-z0-9._\/#-]+$"#)))|Mapping)?

    /// Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
    hidden MaximumCapacity: (ApplicationMaximumAllowedResources)?

    /// Configuration for Auto Start of Application.
    hidden AutoStartConfiguration: (ApplicationAutoStartConfiguration)?

    /// 
    hidden MonitoringConfiguration: (ApplicationMonitoringConfiguration)?

    /// 
    hidden RuntimeConfiguration: (ApplicationConfigurationList)?

    Properties {
        ["AutoStopConfiguration"] = if (AutoStopConfiguration == null) null else AutoStopConfiguration
        ["ImageConfiguration"] = if (ImageConfiguration == null) null else ImageConfiguration
        ["WorkerTypeSpecifications"] = if (WorkerTypeSpecifications == null) null else WorkerTypeSpecifications
        ["Tags"] = if (Tags == null) null else Tags
        ["ReleaseLabel"] = if (ReleaseLabel == null) null else ReleaseLabel
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["InitialCapacity"] = if (InitialCapacity == null) null else InitialCapacity
        ["NetworkConfiguration"] = if (NetworkConfiguration == null) null else NetworkConfiguration
        ["Architecture"] = if (Architecture == null) null else Architecture
        ["Name"] = if (Name == null) null else Name
        ["MaximumCapacity"] = if (MaximumCapacity == null) null else MaximumCapacity
        ["AutoStartConfiguration"] = if (AutoStartConfiguration == null) null else AutoStartConfiguration
        ["MonitoringConfiguration"] = if (MonitoringConfiguration == null) null else MonitoringConfiguration
        ["RuntimeConfiguration"] = if (RuntimeConfiguration == null) null else RuntimeConfiguration
    }

}
