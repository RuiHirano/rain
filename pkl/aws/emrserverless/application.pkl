/// AWS::EMRServerless::Application
///
/// Generated by rain build --pkl-class AWS::EMRServerless::Application
module aws.emrserverless.application

import "../../cloudformation.pkl"

typealias ApplicationCpuSize = String|Mapping


typealias ApplicationDiskSize = String|Mapping


typealias ApplicationEncryptionKeyArn = String|Mapping


typealias ApplicationInitialCapacityConfigMap = Listing<(ApplicationInitialCapacityConfigKeyValuePair)?>


/// 
open class ApplicationS3MonitoringConfiguration {
    LogUri: (ApplicationUriString)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

/// Configuration for Auto Start of Application
open class ApplicationAutoStartConfiguration {
    Enabled: (Boolean|Mapping)?
}

typealias ApplicationLogTypeList = Listing<(ApplicationLogTypeString)?>


typealias ApplicationMemorySize = String|Mapping


/// 
open class ApplicationNetworkConfiguration {
    SecurityGroupIds: (Listing<ApplicationSecurityGroupId>)?
    SubnetIds: (Listing<ApplicationSubnetId>)?
}

typealias ApplicationConfigurationObjectProperties = Mapping<String, Any>

/// Configuration for a JobRun.
open class ApplicationConfigurationObject {
    Properties: (ApplicationConfigurationObjectProperties)?
    Configurations: (Listing<ApplicationConfigurationObject>)?
    Classification: ApplicationClassification
}

/// 
open class ApplicationInitialCapacityConfig {
    WorkerConfiguration: ApplicationWorkerConfiguration
    WorkerCount: Int|Mapping
}

typealias ApplicationLogGroupName = String|Mapping


typealias ApplicationLogStreamNamePrefix = String|Mapping


typealias ApplicationLogTypeString = String|Mapping


typealias ApplicationSensitivePropertiesMap = String|Mapping


typealias ApplicationUriString = String|Mapping


/// 
open class ApplicationCloudWatchLoggingConfiguration {
    LogTypeMap: (Listing<ApplicationLogTypeMapKeyValuePair>)?
    Enabled: (Boolean|Mapping)?
    LogGroupName: (ApplicationLogGroupName)?
    LogStreamNamePrefix: (ApplicationLogStreamNamePrefix)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

typealias ApplicationSensitivePropertiesKeyValuePair = String|Mapping


/// 
open class ApplicationLogTypeMapKeyValuePair {
    Key: ApplicationWorkerTypeString
    Value: ApplicationLogTypeList
}

/// 
open class ApplicationInitialCapacityConfigKeyValuePair {
    Key: String(matches(Regex(#"^[a-zA-Z]+[-_]*[a-zA-Z]+$"#)))|Mapping
    Value: ApplicationInitialCapacityConfig
}

/// Monitoring configuration for batch and interactive JobRun.
open class ApplicationMonitoringConfiguration {
    S3MonitoringConfiguration: (ApplicationS3MonitoringConfiguration)?
    ManagedPersistenceMonitoringConfiguration: (ApplicationManagedPersistenceMonitoringConfiguration)?
    CloudWatchLoggingConfiguration: (ApplicationCloudWatchLoggingConfiguration)?
}

/// A key-value pair to associate with a resource.
open class ApplicationTag {
    Key: String(matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]+$"#)))|Mapping
    Value: String(matches(Regex(#"^[A-Za-z0-9 /_.:=+@-]*$"#)))|Mapping
}

/// The specifications for a worker type.
open class ApplicationWorkerTypeSpecificationInput {
    ImageConfiguration: (ApplicationImageConfigurationInput)?
}

typealias ApplicationClassification = String|Mapping


/// 
open class ApplicationManagedPersistenceMonitoringConfiguration {
    Enabled: (Boolean|Mapping)?
    EncryptionKeyArn: (ApplicationEncryptionKeyArn)?
}

typealias ApplicationSecurityGroupId = String|Mapping


typealias ApplicationSubnetId = String|Mapping


/// 
open class ApplicationWorkerConfiguration {
    Cpu: ApplicationCpuSize
    Memory: ApplicationMemorySize
    Disk: (ApplicationDiskSize)?
}

typealias ApplicationWorkerTypeString = String|Mapping


typealias ApplicationArchitecture = String|Mapping


typealias ApplicationConfigurationList = Listing<(ApplicationConfigurationObject)?>


/// The image configuration.
open class ApplicationImageConfigurationInput {
    ImageUri: (String(matches(Regex(#"^([a-z0-9]+[a-z0-9-.]*)\/((?:[a-z0-9]+(?:[._-][a-z0-9]+)*\/)*[a-z0-9]+(?:[._-][a-z0-9]+)*)(?:\:([a-zA-Z0-9_][a-zA-Z0-9-._]{0,299})|@(sha256:[0-9a-f]{64}))$"#)))|Mapping)?
}

typealias ApplicationWorkerTypeSpecificationInputMap = Mapping<String, Any>


/// Configuration for Auto Stop of Application
open class ApplicationAutoStopConfiguration {
    Enabled: (Boolean|Mapping)?
    IdleTimeoutMinutes: (Int|Mapping)?
}

/// 
open class ApplicationMaximumAllowedResources {
    Cpu: ApplicationCpuSize
    Memory: ApplicationMemorySize
    Disk: (ApplicationDiskSize)?
}

/// Resource schema for AWS::EMRServerless::Application Type
open class Application extends cloudformation.Resource {

    Type = "AWS::EMRServerless::Application"


    /// 
    hidden Architecture: (ApplicationArchitecture)?

    /// Configuration for Auto Start of Application.
    hidden AutoStartConfiguration: (ApplicationAutoStartConfiguration)?

    /// Configuration for Auto Stop of Application.
    hidden AutoStopConfiguration: (ApplicationAutoStopConfiguration)?

    /// 
    hidden ImageConfiguration: (ApplicationImageConfigurationInput)?

    /// Initial capacity initialized when an Application is started.
    hidden InitialCapacity: (ApplicationInitialCapacityConfigMap)?

    /// Maximum allowed cumulative resources for an Application. No new resources will be created once the limit is hit.
    hidden MaximumCapacity: (ApplicationMaximumAllowedResources)?

    /// 
    hidden MonitoringConfiguration: (ApplicationMonitoringConfiguration)?

    /// User friendly Application name.
    hidden Name: (String(matches(Regex(#"^[A-Za-z0-9._\/#-]+$"#)))|Mapping)?

    /// Network Configuration for customer VPC connectivity.
    hidden NetworkConfiguration: (ApplicationNetworkConfiguration)?

    /// EMR release label.
    hidden ReleaseLabel: String(matches(Regex(#"^[A-Za-z0-9._/-]+$"#)))|Mapping

    /// 
    hidden RuntimeConfiguration: (ApplicationConfigurationList)?

    /// Tag map with key and value
    hidden Tags: (Listing<ApplicationTag>)?

    /// The type of the application
    hidden TypeProperty: String|Mapping

    /// The key-value pairs that specify worker type to WorkerTypeSpecificationInput. This parameter must contain all valid worker types for a Spark or Hive application. Valid worker types include Driver and Executor for Spark applications and HiveDriver and TezTask for Hive applications. You can either set image details in this parameter for each worker type, or in imageConfiguration for all worker types.
    hidden WorkerTypeSpecifications: (ApplicationWorkerTypeSpecificationInputMap)?

    Properties {
        ["Architecture"] = if (Architecture == null) null else Architecture
        ["AutoStartConfiguration"] = if (AutoStartConfiguration == null) null else AutoStartConfiguration
        ["AutoStopConfiguration"] = if (AutoStopConfiguration == null) null else AutoStopConfiguration
        ["ImageConfiguration"] = if (ImageConfiguration == null) null else ImageConfiguration
        ["InitialCapacity"] = if (InitialCapacity == null) null else InitialCapacity
        ["MaximumCapacity"] = if (MaximumCapacity == null) null else MaximumCapacity
        ["MonitoringConfiguration"] = if (MonitoringConfiguration == null) null else MonitoringConfiguration
        ["Name"] = if (Name == null) null else Name
        ["NetworkConfiguration"] = if (NetworkConfiguration == null) null else NetworkConfiguration
        ["ReleaseLabel"] = if (ReleaseLabel == null) null else ReleaseLabel
        ["RuntimeConfiguration"] = if (RuntimeConfiguration == null) null else RuntimeConfiguration
        ["Tags"] = if (Tags == null) null else Tags
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["WorkerTypeSpecifications"] = if (WorkerTypeSpecifications == null) null else WorkerTypeSpecifications
    }

}
