/// AWS::EntityResolution::MatchingWorkflow
///
/// Generated by rain build --pkl-class AWS::EntityResolution::MatchingWorkflow
module aws.entityresolution.matchingworkflow

import "../../cloudformation.pkl"

/// 
open class EntityName {
}

/// 
open class Description {
}

/// The default MatchingWorkflow arn
open class MatchingWorkflowArn {
}

/// 
open class OutputSource {
    OutputS3Path: String(matches(Regex(#"^s3://([^/]+)/?(.*?([^/]+)/?)$"#)))|Mapping
    Output: Listing<OutputAttribute>
    KMSArn: (KMSArn)?
    ApplyNormalization: (Boolean|Mapping)?
}

typealias RuleBasedPropertiesAttributeMatchingModel = "ONE_TO_ONE"|"MANY_TO_MANY"

/// 
open class RuleBasedProperties {
    Rules: Listing<Rule>
    AttributeMatchingModel: RuleBasedPropertiesAttributeMatchingModel|Mapping
}

/// The time of this MatchingWorkflow got created
open class CreatedAt {
}

/// 
open class InputSource {
    InputSourceARN: String(matches(Regex(#"arn:(aws|aws-us-gov|aws-cn):.*:.*:[0-9]+:.*$"#)))|Mapping
    SchemaArn: String|Mapping
    ApplyNormalization: (Boolean|Mapping)?
}

/// 
open class KMSArn {
}

typealias ResolutionTechniquesResolutionType = "RULE_MATCHING"|"ML_MATCHING"|"PROVIDER"

/// 
open class ResolutionTechniques {
    ProviderProperties: (ProviderProperties)?
    ResolutionType: (ResolutionTechniquesResolutionType|Mapping)?
    RuleBasedProperties: (RuleBasedProperties)?
}

/// A key-value pair to associate with a resource
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class AttributeName {
}

/// The SchemaMapping arn associated with the Schema
open class SchemaMappingArn {
}

/// The time of this MatchingWorkflow got last updated at
open class UpdatedAt {
}

/// 
open class OutputAttribute {
    Name: AttributeName
    Hashed: (Boolean|Mapping)?
}

/// 
open class Rule {
    RuleName: String(matches(Regex(#"^[a-zA-Z_0-9- \t]*$"#)))|Mapping
    MatchingKeys: Listing<AttributeName>
}

/// 
open class ProviderProperties {
    ProviderServiceArn: String|Mapping
    ProviderConfiguration: (Dynamic)?
    IntermediateSourceConfiguration: (IntermediateSourceConfiguration)?
}

/// 
open class IntermediateSourceConfiguration {
    IntermediateS3Path: String|Mapping
}

/// MatchingWorkflow defined in AWS Entity Resolution service
open class MatchingWorkflow extends cloudformation.Resource {

    Type = "AWS::EntityResolution::MatchingWorkflow"


    /// The description of the MatchingWorkflow
    hidden Description: (Description)?

    /// 
    hidden InputSourceConfig: Listing<InputSource>

    /// 
    hidden ResolutionTechniques: ResolutionTechniques

    /// The name of the MatchingWorkflow
    hidden WorkflowName: EntityName

    /// 
    hidden OutputSourceConfig: Listing<OutputSource>

    /// 
    hidden RoleArn: String(matches(Regex(#"^arn:(aws|aws-us-gov|aws-cn):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping

    /// 
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["InputSourceConfig"] = if (InputSourceConfig == null) null else InputSourceConfig
        ["ResolutionTechniques"] = if (ResolutionTechniques == null) null else ResolutionTechniques
        ["WorkflowName"] = if (WorkflowName == null) null else WorkflowName
        ["OutputSourceConfig"] = if (OutputSourceConfig == null) null else OutputSourceConfig
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["Tags"] = if (Tags == null) null else Tags
    }

}
