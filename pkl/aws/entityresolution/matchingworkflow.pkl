/// AWS::EntityResolution::MatchingWorkflow
///
/// Generated by rain build --pkl-class AWS::EntityResolution::MatchingWorkflow
module aws.entityresolution.matchingworkflow

import "../../cloudformation.pkl"

typealias RuleBasedPropertiesAttributeMatchingModel = "ONE_TO_ONE"|"MANY_TO_MANY"

/// 
open class MatchingWorkflowRuleBasedProperties {
    Rules: Listing<MatchingWorkflowRule>
    AttributeMatchingModel: RuleBasedPropertiesAttributeMatchingModel|Mapping
}

typealias MatchingWorkflowAttributeName = String


/// 
open class MatchingWorkflowProviderProperties {
    ProviderServiceArn: String|Mapping
    ProviderConfiguration: (Dynamic)?
    IntermediateSourceConfiguration: (MatchingWorkflowIntermediateSourceConfiguration)?
}

typealias MatchingWorkflowDescription = String


/// 
open class MatchingWorkflowOutputSource {
    OutputS3Path: String(matches(Regex(#"^s3://([^/]+)/?(.*?([^/]+)/?)$"#)))|Mapping
    Output: Listing<MatchingWorkflowOutputAttribute>
    KMSArn: (MatchingWorkflowKMSArn)?
    ApplyNormalization: (Boolean|Mapping)?
}

/// 
open class MatchingWorkflowOutputAttribute {
    Name: MatchingWorkflowAttributeName
    Hashed: (Boolean|Mapping)?
}

typealias MatchingWorkflowEntityName = String


typealias MatchingWorkflowCreatedAt = String


typealias MatchingWorkflowMatchingWorkflowArn = String


typealias ResolutionTechniquesResolutionType = "RULE_MATCHING"|"ML_MATCHING"|"PROVIDER"

/// 
open class MatchingWorkflowResolutionTechniques {
    ResolutionType: (ResolutionTechniquesResolutionType|Mapping)?
    RuleBasedProperties: (MatchingWorkflowRuleBasedProperties)?
    ProviderProperties: (MatchingWorkflowProviderProperties)?
}

typealias MatchingWorkflowUpdatedAt = String


typealias MatchingWorkflowKMSArn = String


typealias MatchingWorkflowSchemaMappingArn = String


/// A key-value pair to associate with a resource
open class MatchingWorkflowTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class MatchingWorkflowInputSource {
    SchemaArn: String|Mapping
    ApplyNormalization: (Boolean|Mapping)?
    InputSourceARN: String(matches(Regex(#"arn:(aws|aws-us-gov|aws-cn):.*:.*:[0-9]+:.*$"#)))|Mapping
}

/// 
open class MatchingWorkflowRule {
    RuleName: String(matches(Regex(#"^[a-zA-Z_0-9- \t]*$"#)))|Mapping
    MatchingKeys: Listing<MatchingWorkflowAttributeName>
}

/// 
open class MatchingWorkflowIntermediateSourceConfiguration {
    IntermediateS3Path: String|Mapping
}

/// MatchingWorkflow defined in AWS Entity Resolution service
open class MatchingWorkflow extends cloudformation.Resource {

    Type = "AWS::EntityResolution::MatchingWorkflow"


    /// 
    hidden InputSourceConfig: Listing<MatchingWorkflowInputSource>

    /// 
    hidden RoleArn: String(matches(Regex(#"^arn:(aws|aws-us-gov|aws-cn):iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping

    /// 
    hidden ResolutionTechniques: MatchingWorkflowResolutionTechniques

    /// 
    hidden Tags: (Listing<MatchingWorkflowTag>)?

    /// The name of the MatchingWorkflow
    hidden WorkflowName: MatchingWorkflowEntityName

    /// The description of the MatchingWorkflow
    hidden Description: (MatchingWorkflowDescription)?

    /// 
    hidden OutputSourceConfig: Listing<MatchingWorkflowOutputSource>

    Properties {
        ["InputSourceConfig"] = if (InputSourceConfig == null) null else InputSourceConfig
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["ResolutionTechniques"] = if (ResolutionTechniques == null) null else ResolutionTechniques
        ["Tags"] = if (Tags == null) null else Tags
        ["WorkflowName"] = if (WorkflowName == null) null else WorkflowName
        ["Description"] = if (Description == null) null else Description
        ["OutputSourceConfig"] = if (OutputSourceConfig == null) null else OutputSourceConfig
    }

}
