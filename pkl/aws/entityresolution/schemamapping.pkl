/// AWS::EntityResolution::SchemaMapping
///
/// Generated by rain build --pkl-class AWS::EntityResolution::SchemaMapping
module aws.entityresolution.schemamapping

import "../../cloudformation.pkl"

/// The time of this SchemaMapping got last updated at
open class UpdatedAt {
}

/// 
open class EntityName {
}

/// 
open class Description {
}

/// 
open class AttributeName {
}

/// 
open class SchemaAttributeType {
}

/// 
open class MappedInputFields {
}

/// 
open class SchemaInputAttribute {
    FieldName: AttributeName
    Type: SchemaAttributeType
    SubType: (String|Mapping)?
    GroupName: (AttributeName)?
    MatchKey: (AttributeName)?
}

/// The SchemaMapping arn associated with the Schema
open class SchemaMappingArn {
}

/// The time of this SchemaMapping got created
open class CreatedAt {
}

/// The boolean value that indicates whether or not a SchemaMapping has MatchingWorkflows that are associated with
open class HasWorkflows {
}

/// A key-value pair to associate with a resource
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// SchemaMapping defined in AWS Entity Resolution service
open class SchemaMapping extends cloudformation.Resource {

    Type = "AWS::EntityResolution::SchemaMapping"


    /// The name of the SchemaMapping
    hidden SchemaName: EntityName

    /// The description of the SchemaMapping
    hidden Description: (Description)?

    /// The SchemaMapping attributes input
    hidden MappedInputFields: MappedInputFields

    /// 
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["SchemaName"] = if (SchemaName == null) null else SchemaName
        ["Description"] = if (Description == null) null else Description
        ["MappedInputFields"] = if (MappedInputFields == null) null else MappedInputFields
        ["Tags"] = if (Tags == null) null else Tags
    }

}
