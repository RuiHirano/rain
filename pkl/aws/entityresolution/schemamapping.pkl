/// AWS::EntityResolution::SchemaMapping
///
/// Generated by rain build --pkl-class AWS::EntityResolution::SchemaMapping
module aws.entityresolution.schemamapping

import "../../cloudformation.pkl"

typealias SchemaMappingHasWorkflows = Boolean|Mapping


typealias SchemaMappingMappedInputFields = Listing<(SchemaMappingSchemaInputAttribute)?>


typealias SchemaMappingSchemaAttributeType = String|Mapping


/// A key-value pair to associate with a resource
open class SchemaMappingTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class SchemaMappingSchemaInputAttribute {
    FieldName: SchemaMappingAttributeName
    Type: SchemaMappingSchemaAttributeType
    SubType: (String|Mapping)?
    GroupName: (SchemaMappingAttributeName)?
    MatchKey: (SchemaMappingAttributeName)?
}

typealias SchemaMappingSchemaMappingArn = String|Mapping


typealias SchemaMappingUpdatedAt = String|Mapping


typealias SchemaMappingAttributeName = String|Mapping


typealias SchemaMappingCreatedAt = String|Mapping


typealias SchemaMappingDescription = String|Mapping


typealias SchemaMappingEntityName = String|Mapping


/// SchemaMapping defined in AWS Entity Resolution service
open class SchemaMapping extends cloudformation.Resource {

    Type = "AWS::EntityResolution::SchemaMapping"


    /// The description of the SchemaMapping
    hidden Description: (SchemaMappingDescription)?

    /// The SchemaMapping attributes input
    hidden MappedInputFields: SchemaMappingMappedInputFields

    /// The name of the SchemaMapping
    hidden SchemaName: SchemaMappingEntityName

    /// 
    hidden Tags: (Listing<SchemaMappingTag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["MappedInputFields"] = if (MappedInputFields == null) null else MappedInputFields
        ["SchemaName"] = if (SchemaName == null) null else SchemaName
        ["Tags"] = if (Tags == null) null else Tags
    }

}
