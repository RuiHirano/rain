/// AWS::Events::Connection
///
/// Generated by rain build --pkl-class AWS::Events::Connection
module aws.events.connection

import "../../cloudformation.pkl"

typealias OAuthParametersHttpMethod = "GET"|"POST"|"PUT"

/// 
open class ConnectionOAuthParameters {
    OAuthHttpParameters: (ConnectionConnectionHttpParameters)?
    ClientParameters: ConnectionClientParameters
    AuthorizationEndpoint: String|Mapping
    HttpMethod: OAuthParametersHttpMethod|Mapping
}

/// 
open class ConnectionApiKeyAuthParameters {
    ApiKeyName: String|Mapping
    ApiKeyValue: String|Mapping
}

/// 
open class ConnectionClientParameters {
    ClientSecret: String|Mapping
    ClientID: String|Mapping
}

/// 
open class ConnectionConnectionHttpParameters {
    HeaderParameters: (Listing<ConnectionParameter>)?
    QueryStringParameters: (Listing<ConnectionParameter>)?
    BodyParameters: (Listing<ConnectionParameter>)?
}

/// 
open class ConnectionParameter {
    Key: String|Mapping
    Value: String|Mapping
    IsValueSecret: (Boolean|Mapping)?
}

/// 
open class ConnectionAuthParameters {
    ApiKeyAuthParameters: (ConnectionApiKeyAuthParameters)?
    BasicAuthParameters: (ConnectionBasicAuthParameters)?
    OAuthParameters: (ConnectionOAuthParameters)?
    InvocationHttpParameters: (ConnectionConnectionHttpParameters)?
}

/// 
open class ConnectionBasicAuthParameters {
    Username: String|Mapping
    Password: String|Mapping
}

/// Resource Type definition for AWS::Events::Connection.
open class Connection extends cloudformation.Resource {

    Type = "AWS::Events::Connection"


    /// Description of the connection.
    hidden Description: (String|Mapping)?

    /// 
    hidden AuthorizationType: (ConnectionAuthorizationType|Mapping)?

    /// 
    hidden AuthParameters: (ConnectionAuthParameters)?

    /// Name of the connection.
    hidden Name: (String|Mapping)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["AuthorizationType"] = if (AuthorizationType == null) null else AuthorizationType
        ["AuthParameters"] = if (AuthParameters == null) null else AuthParameters
        ["Name"] = if (Name == null) null else Name
    }

}


typealias ConnectionAuthorizationType = "API_KEY"|"BASIC"|"OAUTH_CLIENT_CREDENTIALS"
