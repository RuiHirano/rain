/// AWS::Events::Rule
///
/// Generated by rain build --pkl-class AWS::Events::Rule
module aws.events.rule

import "../../cloudformation.pkl"

/// 
open class RuleAwsVpcConfiguration {
    SecurityGroups: (Listing<String|Mapping>)?
    Subnets: Listing<String|Mapping>
    AssignPublicIp: (String|Mapping)?
}

/// 
open class RuleNetworkConfiguration {
    AwsVpcConfiguration: (RuleAwsVpcConfiguration)?
}

/// 
open class RulePlacementStrategy {
    Field: (String|Mapping)?
    Type: (String|Mapping)?
}

/// 
open class RuleRunCommandTarget {
    Values: Listing<String|Mapping>
    Key: String|Mapping
}

/// 
open class RuleRetryPolicy {
    MaximumRetryAttempts: (Int|Mapping)?
    MaximumEventAgeInSeconds: (Int|Mapping)?
}

/// 
open class RulePlacementConstraint {
    Type: (String|Mapping)?
    Expression: (String|Mapping)?
}

typealias RuleInputTransformerInputPathsMap = Mapping<String, Any>

/// 
open class RuleInputTransformer {
    InputPathsMap: (RuleInputTransformerInputPathsMap)?
    InputTemplate: String|Mapping
}

/// 
open class RuleKinesisParameters {
    PartitionKeyPath: String|Mapping
}

/// 
open class RuleAppSyncParameters {
    GraphQLOperation: String|Mapping
}

/// 
open class RuleTag {
    Value: (String|Mapping)?
    Key: (String|Mapping)?
}

typealias RuleHttpParametersHeaderParameters = Mapping<String, Any>

typealias RuleHttpParametersQueryStringParameters = Mapping<String, Any>

/// 
open class RuleHttpParameters {
    PathParameterValues: (Listing<String|Mapping>)?
    HeaderParameters: (RuleHttpParametersHeaderParameters)?
    QueryStringParameters: (RuleHttpParametersQueryStringParameters)?
}

/// 
open class RuleBatchRetryStrategy {
    Attempts: (Int|Mapping)?
}

/// 
open class RuleEcsParameters {
    Group: (String|Mapping)?
    EnableExecuteCommand: (Boolean|Mapping)?
    ReferenceId: (String|Mapping)?
    PropagateTags: (String|Mapping)?
    CapacityProviderStrategy: (Listing<RuleCapacityProviderStrategyItem>)?
    LaunchType: (String|Mapping)?
    NetworkConfiguration: (RuleNetworkConfiguration)?
    PlatformVersion: (String|Mapping)?
    EnableECSManagedTags: (Boolean|Mapping)?
    TagList: (Listing<RuleTag>)?
    PlacementConstraints: (Listing<RulePlacementConstraint>)?
    TaskCount: (Int|Mapping)?
    PlacementStrategies: (Listing<RulePlacementStrategy>)?
    TaskDefinitionArn: String|Mapping
}

/// 
open class RuleRedshiftDataParameters {
    Sql: (String|Mapping)?
    WithEvent: (Boolean|Mapping)?
    StatementName: (String|Mapping)?
    Sqls: (Listing<String|Mapping>)?
    Database: String|Mapping
    SecretManagerArn: (String|Mapping)?
    DbUser: (String|Mapping)?
}

/// 
open class RuleBatchArrayProperties {
    Size: (Int|Mapping)?
}

/// 
open class RuleRunCommandParameters {
    RunCommandTargets: Listing<RuleRunCommandTarget>
}

/// 
open class RuleSageMakerPipelineParameters {
    PipelineParameterList: (Listing<RuleSageMakerPipelineParameter>)?
}

/// 
open class RuleDeadLetterConfig {
    Arn: (String|Mapping)?
}

/// 
open class RuleSqsParameters {
    MessageGroupId: String|Mapping
}

/// 
open class RuleBatchParameters {
    ArrayProperties: (RuleBatchArrayProperties)?
    JobName: String|Mapping
    RetryStrategy: (RuleBatchRetryStrategy)?
    JobDefinition: String|Mapping
}

/// 
open class RuleCapacityProviderStrategyItem {
    CapacityProvider: String|Mapping
    Base: (Int|Mapping)?
    Weight: (Int|Mapping)?
}

/// 
open class RuleTarget {
    DeadLetterConfig: (RuleDeadLetterConfig)?
    InputTransformer: (RuleInputTransformer)?
    AppSyncParameters: (RuleAppSyncParameters)?
    SqsParameters: (RuleSqsParameters)?
    EcsParameters: (RuleEcsParameters)?
    BatchParameters: (RuleBatchParameters)?
    SageMakerPipelineParameters: (RuleSageMakerPipelineParameters)?
    InputPath: (String|Mapping)?
    RunCommandParameters: (RuleRunCommandParameters)?
    Id: String|Mapping
    HttpParameters: (RuleHttpParameters)?
    RoleArn: (String|Mapping)?
    RetryPolicy: (RuleRetryPolicy)?
    KinesisParameters: (RuleKinesisParameters)?
    Input: (String|Mapping)?
    Arn: String|Mapping
    RedshiftDataParameters: (RuleRedshiftDataParameters)?
}

/// 
open class RuleSageMakerPipelineParameter {
    Value: String|Mapping
    Name: String|Mapping
}

/// Resource Type definition for AWS::Events::Rule
open class Rule extends cloudformation.Resource {

    Type = "AWS::Events::Rule"


    /// The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
    hidden EventBusName: (String|Mapping)?

    /// The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
    hidden EventPattern: (Dynamic)?

    /// The Amazon Resource Name (ARN) of the role that is used for target invocation.
    hidden RoleArn: (String|Mapping)?

    /// The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
    hidden ScheduleExpression: (String|Mapping)?

    /// The description of the rule.
    hidden Description: (String|Mapping)?

    /// The state of the rule.
    hidden State: (RuleState|Mapping)?

    /// Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
    ///
    /// Targets are the resources that are invoked when a rule is triggered.
    hidden Targets: (Listing<RuleTarget>)?

    /// The name of the rule.
    hidden Name: (String|Mapping)?

    Properties {
        ["EventBusName"] = if (EventBusName == null) null else EventBusName
        ["EventPattern"] = if (EventPattern == null) null else EventPattern
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["ScheduleExpression"] = if (ScheduleExpression == null) null else ScheduleExpression
        ["Description"] = if (Description == null) null else Description
        ["State"] = if (State == null) null else State
        ["Targets"] = if (Targets == null) null else Targets
        ["Name"] = if (Name == null) null else Name
    }

}


typealias RuleState = "DISABLED"|"ENABLED"|"ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS"
