/// AWS::Events::Rule
///
/// Generated by rain build --pkl-class AWS::Events::Rule
module aws.events.rule

import "../../cloudformation.pkl"

/// 
open class RetryPolicy {
    MaximumRetryAttempts: (Int|Mapping)?
    MaximumEventAgeInSeconds: (Int|Mapping)?
}

/// 
open class DeadLetterConfig {
    Arn: (String|Mapping)?
}

/// 
open class RunCommandParameters {
    RunCommandTargets: Listing<RunCommandTarget>
}

/// 
open class InputTransformer {
    InputPathsMap: (Dynamic)?
    InputTemplate: String|Mapping
}

/// 
open class RedshiftDataParameters {
    StatementName: (String|Mapping)?
    Sqls: (Listing<String|Mapping>)?
    Database: String|Mapping
    SecretManagerArn: (String|Mapping)?
    DbUser: (String|Mapping)?
    Sql: (String|Mapping)?
    WithEvent: (Boolean|Mapping)?
}

/// 
open class PlacementConstraint {
    Type: (String|Mapping)?
    Expression: (String|Mapping)?
}

/// 
open class SqsParameters {
    MessageGroupId: String|Mapping
}

/// 
open class NetworkConfiguration {
    AwsVpcConfiguration: (AwsVpcConfiguration)?
}

/// 
open class BatchArrayProperties {
    Size: (Int|Mapping)?
}

/// 
open class CapacityProviderStrategyItem {
    CapacityProvider: String|Mapping
    Base: (Int|Mapping)?
    Weight: (Int|Mapping)?
}

/// 
open class HttpParameters {
    PathParameterValues: (Listing<String|Mapping>)?
    HeaderParameters: (Dynamic)?
    QueryStringParameters: (Dynamic)?
}

/// 
open class KinesisParameters {
    PartitionKeyPath: String|Mapping
}

/// 
open class BatchRetryStrategy {
    Attempts: (Int|Mapping)?
}

/// 
open class RunCommandTarget {
    Key: String|Mapping
    Values: Listing<String|Mapping>
}

/// 
open class EcsParameters {
    Group: (String|Mapping)?
    PropagateTags: (String|Mapping)?
    TaskCount: (Int|Mapping)?
    PlatformVersion: (String|Mapping)?
    ReferenceId: (String|Mapping)?
    TagList: (Listing<Tag>)?
    EnableECSManagedTags: (Boolean|Mapping)?
    PlacementStrategies: (Listing<PlacementStrategy>)?
    LaunchType: (String|Mapping)?
    NetworkConfiguration: (NetworkConfiguration)?
    TaskDefinitionArn: String|Mapping
    EnableExecuteCommand: (Boolean|Mapping)?
    PlacementConstraints: (Listing<PlacementConstraint>)?
    CapacityProviderStrategy: (Listing<CapacityProviderStrategyItem>)?
}

/// 
open class Tag {
    Value: (String|Mapping)?
    Key: (String|Mapping)?
}

/// 
open class AppSyncParameters {
    GraphQLOperation: String|Mapping
}

/// 
open class BatchParameters {
    ArrayProperties: (BatchArrayProperties)?
    JobName: String|Mapping
    RetryStrategy: (BatchRetryStrategy)?
    JobDefinition: String|Mapping
}

/// 
open class SageMakerPipelineParameters {
    PipelineParameterList: (Listing<SageMakerPipelineParameter>)?
}

/// 
open class PlacementStrategy {
    Field: (String|Mapping)?
    Type: (String|Mapping)?
}

/// 
open class Target {
    DeadLetterConfig: (DeadLetterConfig)?
    KinesisParameters: (KinesisParameters)?
    RedshiftDataParameters: (RedshiftDataParameters)?
    AppSyncParameters: (AppSyncParameters)?
    SqsParameters: (SqsParameters)?
    Id: String|Mapping
    EcsParameters: (EcsParameters)?
    Arn: String|Mapping
    RetryPolicy: (RetryPolicy)?
    InputPath: (String|Mapping)?
    RunCommandParameters: (RunCommandParameters)?
    RoleArn: (String|Mapping)?
    BatchParameters: (BatchParameters)?
    SageMakerPipelineParameters: (SageMakerPipelineParameters)?
    HttpParameters: (HttpParameters)?
    InputTransformer: (InputTransformer)?
    Input: (String|Mapping)?
}

/// 
open class AwsVpcConfiguration {
    SecurityGroups: (Listing<String|Mapping>)?
    Subnets: Listing<String|Mapping>
    AssignPublicIp: (String|Mapping)?
}

/// 
open class SageMakerPipelineParameter {
    Name: String|Mapping
    Value: String|Mapping
}

/// Resource Type definition for AWS::Events::Rule
open class Rule extends cloudformation.Resource {

    Type = "AWS::Events::Rule"


    /// The name of the rule.
    hidden Name: (String|Mapping)?

    /// The name or ARN of the event bus associated with the rule. If you omit this, the default event bus is used.
    hidden EventBusName: (String|Mapping)?

    /// The scheduling expression. For example, "cron(0 20 * * ? *)", "rate(5 minutes)". For more information, see Creating an Amazon EventBridge rule that runs on a schedule.
    hidden ScheduleExpression: (String|Mapping)?

    /// The state of the rule.
    hidden State: (RuleState|Mapping)?

    /// Adds the specified targets to the specified rule, or updates the targets if they are already associated with the rule.
    ///    /// Targets are the resources that are invoked when a rule is triggered.
    hidden Targets: (Listing<Target>)?

    /// The Amazon Resource Name (ARN) of the role that is used for target invocation.
    hidden RoleArn: (String|Mapping)?

    /// The event pattern of the rule. For more information, see Events and Event Patterns in the Amazon EventBridge User Guide.
    hidden EventPattern: (Dynamic)?

    /// The description of the rule.
    hidden Description: (String|Mapping)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["EventBusName"] = if (EventBusName == null) null else EventBusName
        ["ScheduleExpression"] = if (ScheduleExpression == null) null else ScheduleExpression
        ["State"] = if (State == null) null else State
        ["Targets"] = if (Targets == null) null else Targets
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["EventPattern"] = if (EventPattern == null) null else EventPattern
        ["Description"] = if (Description == null) null else Description
    }

}


typealias RuleState = "DISABLED"|"ENABLED"|"ENABLED_WITH_ALL_CLOUDTRAIL_MANAGEMENT_EVENTS"
