/// AWS::FSx::Volume
///
/// Generated by rain build --pkl-class AWS::FSx::Volume
module aws.fsx.volume

import "../../cloudformation.pkl"

/// 
open class VolumeOpenZFSConfiguration {
    ReadOnly: (Boolean|Mapping)?
    NfsExports: (Listing<VolumeNfsExports>)?
    CopyTagsToSnapshots: (Boolean|Mapping)?
    UserAndGroupQuotas: (Listing<VolumeUserAndGroupQuotas>)?
    Options: (Listing<String|Mapping>)?
    DataCompressionType: (String|Mapping)?
    StorageCapacityQuotaGiB: (Int|Mapping)?
    ParentVolumeId: String|Mapping
    StorageCapacityReservationGiB: (Int|Mapping)?
    RecordSizeKiB: (Int|Mapping)?
    OriginSnapshot: (VolumeOriginSnapshot)?
}

/// 
open class VolumeAutocommitPeriod {
    Value: (Int|Mapping)?
    Type: String|Mapping
}

/// 
open class VolumeRetentionPeriod {
    Value: (Int|Mapping)?
    Type: String|Mapping
}

/// 
open class VolumeSnaplockConfiguration {
    AutocommitPeriod: (VolumeAutocommitPeriod)?
    RetentionPeriod: (VolumeSnaplockRetentionPeriod)?
    PrivilegedDelete: (String|Mapping)?
    SnaplockType: String|Mapping
    AuditLogVolume: (String|Mapping)?
    VolumeAppendModeEnabled: (String|Mapping)?
}

/// 
open class VolumeNfsExports {
    ClientConfigurations: Listing<VolumeClientConfigurations>
}

/// 
open class VolumeAggregateConfiguration {
    Aggregates: (Listing<String|Mapping>)?
    ConstituentsPerAggregate: (Int|Mapping)?
}

/// 
open class VolumeOriginSnapshot {
    SnapshotARN: String|Mapping
    CopyStrategy: String|Mapping
}

/// 
open class VolumeOntapConfiguration {
    StorageVirtualMachineId: String|Mapping
    SnaplockConfiguration: (VolumeSnaplockConfiguration)?
    JunctionPath: (String|Mapping)?
    VolumeStyle: (String|Mapping)?
    SizeInBytes: (String|Mapping)?
    SecurityStyle: (String|Mapping)?
    SizeInMegabytes: (String|Mapping)?
    OntapVolumeType: (String|Mapping)?
    CopyTagsToBackups: (String|Mapping)?
    AggregateConfiguration: (VolumeAggregateConfiguration)?
    SnapshotPolicy: (String|Mapping)?
    StorageEfficiencyEnabled: (String|Mapping)?
    TieringPolicy: (VolumeTieringPolicy)?
}

/// 
open class VolumeSnaplockRetentionPeriod {
    MaximumRetention: VolumeRetentionPeriod
    MinimumRetention: VolumeRetentionPeriod
    DefaultRetention: VolumeRetentionPeriod
}

/// 
open class VolumeUserAndGroupQuotas {
    Type: String|Mapping
    Id: Int|Mapping
    StorageCapacityQuotaGiB: Int|Mapping
}

/// 
open class VolumeTieringPolicy {
    Name: (String|Mapping)?
    CoolingPeriod: (Int|Mapping)?
}

/// 
open class VolumeClientConfigurations {
    Clients: String|Mapping
    Options: Listing<String|Mapping>
}

/// 
open class VolumeTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// Resource Type definition for AWS::FSx::Volume
open class Volume extends cloudformation.Resource {

    Type = "AWS::FSx::Volume"


    /// 
    hidden OntapConfiguration: (VolumeOntapConfiguration)?

    /// 
    hidden Tags: (Listing<VolumeTag>)?

    /// 
    hidden Name: String|Mapping

    /// 
    hidden OpenZFSConfiguration: (VolumeOpenZFSConfiguration)?

    /// 
    hidden VolumeType: (String|Mapping)?

    /// 
    hidden BackupId: (String|Mapping)?

    Properties {
        ["OntapConfiguration"] = if (OntapConfiguration == null) null else OntapConfiguration
        ["Tags"] = if (Tags == null) null else Tags
        ["Name"] = if (Name == null) null else Name
        ["OpenZFSConfiguration"] = if (OpenZFSConfiguration == null) null else OpenZFSConfiguration
        ["VolumeType"] = if (VolumeType == null) null else VolumeType
        ["BackupId"] = if (BackupId == null) null else BackupId
    }

}
