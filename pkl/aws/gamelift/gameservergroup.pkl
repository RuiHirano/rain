/// AWS::GameLift::GameServerGroup
///
/// Generated by rain build --pkl-class AWS::GameLift::GameServerGroup
module aws.gamelift.gameservergroup

import "../../cloudformation.pkl"

/// The EC2 launch template that contains configuration settings and game server code to be deployed to all instances in the game server group.
open class GameServerGroupLaunchTemplate {
    LaunchTemplateId: (GameServerGroupLaunchTemplateId)?
    LaunchTemplateName: (GameServerGroupLaunchTemplateName)?
    Version: (GameServerGroupVersion)?
}

/// 
open class GameServerGroupTag {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

typealias GameServerGroupVersion = String


typealias SuspendedActionsArray = "REPLACE_INSTANCE_TYPES"

typealias GameServerGroupSuspendedActions = Listing<(SuspendedActionsArray|Mapping)?>


typealias GameServerGroupStatusReason = String


typealias GameServerGroupCreationTime = String


/// An allowed instance type for your game server group.
open class GameServerGroupInstanceDefinition {
    InstanceType: GameServerGroupInstanceType
    WeightedCapacity: (GameServerGroupWeightedCapacity)?
}

typealias GameServerGroupBalancingStrategy = "SPOT_ONLY"|"SPOT_PREFERRED"|"ON_DEMAND_ONLY"


typealias GameServerGroupGameServerProtectionPolicy = "NO_PROTECTION"|"FULL_PROTECTION"


typealias GameServerGroupLaunchTemplateId = String


/// Settings for a target-based scaling policy applied to Auto Scaling group.
open class GameServerGroupTargetTrackingConfiguration {
    TargetValue: GameServerGroupTargetValue
}

typealias GameServerGroupInstanceDefinitions = Listing<(GameServerGroupInstanceDefinition)?>


/// Configuration settings to define a scaling policy for the Auto Scaling group that is optimized for game hosting
open class GameServerGroupAutoScalingPolicy {
    TargetTrackingConfiguration: GameServerGroupTargetTrackingConfiguration
    EstimatedInstanceWarmup: (GameServerGroupEstimatedInstanceWarmup)?
}

typealias GameServerGroupDeleteOption = "SAFE_DELETE"|"FORCE_DELETE"|"RETAIN"

