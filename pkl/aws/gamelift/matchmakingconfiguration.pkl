/// AWS::GameLift::MatchmakingConfiguration
///
/// Generated by rain build --pkl-class AWS::GameLift::MatchmakingConfiguration
module aws.gamelift.matchmakingconfiguration

import "../../cloudformation.pkl"

/// A key-value pair that contains information about a game session.
open class GameProperty {
    Key: String|Mapping
    Value: String|Mapping
}

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The AWS::GameLift::MatchmakingConfiguration resource creates an Amazon GameLift (GameLift) matchmaking configuration.
open class MatchmakingConfiguration extends cloudformation.Resource {

    Type = "AWS::GameLift::MatchmakingConfiguration"


    /// A descriptive label that is associated with matchmaking configuration.
    hidden Description: (String|Mapping)?

    /// A flag that indicates whether a match that was created with this configuration must be accepted by the matched players
    hidden AcceptanceRequired: Boolean|Mapping

    /// The maximum duration, in seconds, that a matchmaking ticket can remain in process before timing out.
    hidden RequestTimeoutSeconds: Int|Mapping

    /// A unique identifier for the matchmaking rule set to use with this configuration.
    hidden RuleSetName: String(matches(Regex(#"[a-zA-Z0-9-\.]*"#)))|Mapping

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    /// The number of player slots in a match to keep open for future players.
    hidden AdditionalPlayerCount: (Int|Mapping)?

    /// A set of custom properties for a game session, formatted as key:value pairs.
    hidden GameProperties: (Listing<GameProperty>)?

    /// The Amazon Resource Name (ARN) that is assigned to a Amazon GameLift game session queue resource and uniquely identifies it.
    hidden GameSessionQueueArns: (Listing<String|Mapping>)?

    /// An SNS topic ARN that is set up to receive matchmaking notifications.
    hidden NotificationTarget: (String(matches(Regex(#"[a-zA-Z0-9:_/-]*(.fifo)?"#)))|Mapping)?

    /// The length of time (in seconds) to wait for players to accept a proposed match, if acceptance is required.
    hidden AcceptanceTimeoutSeconds: (Int|Mapping)?

    /// A time stamp indicating when this data object was created.
    hidden CreationTime: (String|Mapping)?

    /// Indicates whether this matchmaking configuration is being used with Amazon GameLift hosting or as a standalone matchmaking solution.
    hidden FlexMatchMode: (MatchmakingConfigurationFlexMatchMode|Mapping)?

    /// A set of custom game session properties, formatted as a single string value.
    hidden GameSessionData: (String|Mapping)?

    /// A unique identifier for the matchmaking configuration.
    hidden Name: String(matches(Regex(#"[a-zA-Z0-9-\.]*"#)))|Mapping

    /// The Amazon Resource Name (ARN) associated with the GameLift matchmaking rule set resource that this configuration uses.
    hidden RuleSetArn: (String(matches(Regex(#"^arn:.*:matchmakingruleset\/[a-zA-Z0-9-\.]*"#)))|Mapping)?

    /// The method used to backfill game sessions created with this matchmaking configuration.
    hidden BackfillMode: (MatchmakingConfigurationBackfillMode|Mapping)?

    /// Information to attach to all events related to the matchmaking configuration.
    hidden CustomEventData: (String|Mapping)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["AcceptanceRequired"] = if (AcceptanceRequired == null) null else AcceptanceRequired
        ["RequestTimeoutSeconds"] = if (RequestTimeoutSeconds == null) null else RequestTimeoutSeconds
        ["RuleSetName"] = if (RuleSetName == null) null else RuleSetName
        ["Tags"] = if (Tags == null) null else Tags
        ["AdditionalPlayerCount"] = if (AdditionalPlayerCount == null) null else AdditionalPlayerCount
        ["GameProperties"] = if (GameProperties == null) null else GameProperties
        ["GameSessionQueueArns"] = if (GameSessionQueueArns == null) null else GameSessionQueueArns
        ["NotificationTarget"] = if (NotificationTarget == null) null else NotificationTarget
        ["AcceptanceTimeoutSeconds"] = if (AcceptanceTimeoutSeconds == null) null else AcceptanceTimeoutSeconds
        ["CreationTime"] = if (CreationTime == null) null else CreationTime
        ["FlexMatchMode"] = if (FlexMatchMode == null) null else FlexMatchMode
        ["GameSessionData"] = if (GameSessionData == null) null else GameSessionData
        ["Name"] = if (Name == null) null else Name
        ["RuleSetArn"] = if (RuleSetArn == null) null else RuleSetArn
        ["BackfillMode"] = if (BackfillMode == null) null else BackfillMode
        ["CustomEventData"] = if (CustomEventData == null) null else CustomEventData
    }

}


typealias MatchmakingConfigurationFlexMatchMode = "STANDALONE"|"WITH_QUEUE"

typealias MatchmakingConfigurationBackfillMode = "AUTOMATIC"|"MANUAL"
