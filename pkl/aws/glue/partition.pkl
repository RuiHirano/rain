/// AWS::Glue::Partition
///
/// Generated by rain build --pkl-class AWS::Glue::Partition
module aws.glue.partition

import "../../cloudformation.pkl"

/// 
open class StorageDescriptor {
    StoredAsSubDirectories: (Boolean|Mapping)?
    NumberOfBuckets: (Int|Mapping)?
    Columns: (Listing<Column>)?
    SkewedInfo: (SkewedInfo)?
    Compressed: (Boolean|Mapping)?
    SchemaReference: (SchemaReference)?
    InputFormat: (String|Mapping)?
    Parameters: (Dynamic)?
    BucketColumns: (Listing<String|Mapping>)?
    OutputFormat: (String|Mapping)?
    SerdeInfo: (SerdeInfo)?
    SortColumns: (Listing<Order>)?
    Location: (String|Mapping)?
}

/// 
open class SchemaId {
    SchemaArn: (String|Mapping)?
    RegistryName: (String|Mapping)?
    SchemaName: (String|Mapping)?
}

/// 
open class SerdeInfo {
    SerializationLibrary: (String|Mapping)?
    Name: (String|Mapping)?
    Parameters: (Dynamic)?
}

/// 
open class PartitionInput {
    StorageDescriptor: (StorageDescriptor)?
    Values: Listing<String|Mapping>
    Parameters: (Dynamic)?
}

/// 
open class SchemaReference {
    SchemaId: (SchemaId)?
    SchemaVersionId: (String|Mapping)?
    SchemaVersionNumber: (Int|Mapping)?
}

/// 
open class Order {
    Column: String|Mapping
    SortOrder: (Int|Mapping)?
}

/// 
open class SkewedInfo {
    SkewedColumnValues: (Listing<String|Mapping>)?
    SkewedColumnValueLocationMaps: (Dynamic)?
    SkewedColumnNames: (Listing<String|Mapping>)?
}

/// 
open class Column {
    Comment: (String|Mapping)?
    Type: (String|Mapping)?
    Name: String|Mapping
}

/// Resource Type definition for AWS::Glue::Partition
open class Partition extends cloudformation.Resource {

    Type = "AWS::Glue::Partition"


    /// 
    hidden DatabaseName: String|Mapping

    /// 
    hidden TableName: String|Mapping

    /// 
    hidden CatalogId: String|Mapping

    /// 
    hidden PartitionInput: PartitionInput

    Properties {
        ["DatabaseName"] = if (DatabaseName == null) null else DatabaseName
        ["TableName"] = if (TableName == null) null else TableName
        ["CatalogId"] = if (CatalogId == null) null else CatalogId
        ["PartitionInput"] = if (PartitionInput == null) null else PartitionInput
    }

}
