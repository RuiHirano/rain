/// AWS::Glue::Schema
///
/// Generated by rain build --pkl-class AWS::Glue::Schema
module aws.glue.schema

import "../../cloudformation.pkl"

/// Identifier for the registry which the schema is part of.
open class SchemaRegistry {
    Name: (String|Mapping)?
    Arn: (String(matches(Regex(#"arn:aws(-(cn|us-gov|iso(-[bef])?))?:glue:.*"#)))|Mapping)?
}

/// Specify checkpoint version for update. This is only required to update the Compatibility.
open class SchemaSchemaVersion {
    IsLatest: (Boolean|Mapping)?
    VersionNumber: (Int|Mapping)?
}

/// 
open class SchemaTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// This resource represents a schema of Glue Schema Registry.
open class Schema extends cloudformation.Resource {

    Type = "AWS::Glue::Schema"


    /// Data format name to use for the schema. Accepted values: 'AVRO', 'JSON', 'PROTOBUF'
    hidden DataFormat: SchemaDataFormat|Mapping

    /// Compatibility setting for the schema.
    hidden Compatibility: SchemaCompatibility|Mapping

    /// Definition for the initial schema version in plain-text.
    hidden SchemaDefinition: String|Mapping

    /// List of tags to tag the schema
    hidden Tags: (Listing<SchemaTag>)?

    /// 
    hidden Registry: (SchemaRegistry)?

    /// 
    hidden CheckpointVersion: (SchemaSchemaVersion)?

    /// Name of the schema.
    hidden Name: String|Mapping

    /// A description of the schema. If description is not provided, there will not be any default value for this.
    hidden Description: (String|Mapping)?

    Properties {
        ["DataFormat"] = if (DataFormat == null) null else DataFormat
        ["Compatibility"] = if (Compatibility == null) null else Compatibility
        ["SchemaDefinition"] = if (SchemaDefinition == null) null else SchemaDefinition
        ["Tags"] = if (Tags == null) null else Tags
        ["Registry"] = if (Registry == null) null else Registry
        ["CheckpointVersion"] = if (CheckpointVersion == null) null else CheckpointVersion
        ["Name"] = if (Name == null) null else Name
        ["Description"] = if (Description == null) null else Description
    }

}


typealias SchemaDataFormat = "AVRO"|"JSON"|"PROTOBUF"

typealias SchemaCompatibility = "NONE"|"DISABLED"|"BACKWARD"|"BACKWARD_ALL"|"FORWARD"|"FORWARD_ALL"|"FULL"|"FULL_ALL"
