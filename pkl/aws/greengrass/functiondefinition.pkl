/// AWS::Greengrass::FunctionDefinition
///
/// Generated by rain build --pkl-class AWS::Greengrass::FunctionDefinition
module aws.greengrass.function_definition

import "../../cloudformation.pkl"

/// 
open class FunctionDefinitionResourceAccessPolicy {
    ResourceId: String|Mapping
    Permission: (String|Mapping)?
}

/// 
open class FunctionDefinitionFunctionDefinitionVersion {
    DefaultConfig: (FunctionDefinitionDefaultConfig)?
    Functions: Listing<FunctionDefinitionFunction>
}

/// 
open class FunctionDefinitionDefaultConfig {
    Execution: FunctionDefinitionExecution
}

/// 
open class FunctionDefinitionFunction {
    FunctionConfiguration: FunctionDefinitionFunctionConfiguration
    Id: String|Mapping
    FunctionArn: String|Mapping
}

/// 
open class FunctionDefinitionExecution {
    IsolationMode: (String|Mapping)?
    RunAs: (FunctionDefinitionRunAs)?
}

/// 
open class FunctionDefinitionFunctionConfiguration {
    MemorySize: (Int|Mapping)?
    Pinned: (Boolean|Mapping)?
    ExecArgs: (String|Mapping)?
    Timeout: (Int|Mapping)?
    EncodingType: (String|Mapping)?
    Environment: (FunctionDefinitionEnvironment)?
    Executable: (String|Mapping)?
}

/// 
open class FunctionDefinitionRunAs {
    Uid: (Int|Mapping)?
    Gid: (Int|Mapping)?
}

/// 
open class FunctionDefinitionEnvironment {
    Execution: (FunctionDefinitionExecution)?
    ResourceAccessPolicies: (Listing<FunctionDefinitionResourceAccessPolicy>)?
    AccessSysfs: (Boolean|Mapping)?
    Variables: (Dynamic)?
}

/// Resource Type definition for AWS::Greengrass::FunctionDefinition
open class FunctionDefinition extends cloudformation.Resource {

    Type = "AWS::Greengrass::FunctionDefinition"


    /// 
    hidden Name: String|Mapping

    /// 
    hidden InitialVersion: (FunctionDefinitionFunctionDefinitionVersion)?

    /// 
    hidden Tags: (Dynamic)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["InitialVersion"] = if (InitialVersion == null) null else InitialVersion
        ["Tags"] = if (Tags == null) null else Tags
    }

}
