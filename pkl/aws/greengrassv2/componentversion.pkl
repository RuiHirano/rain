/// AWS::GreengrassV2::ComponentVersion
///
/// Generated by rain build --pkl-class AWS::GreengrassV2::ComponentVersion
module aws.greengrassv2.componentversion

import "../../cloudformation.pkl"

typealias ComponentVersionLambdaAddGroupOwnerBoolean = Boolean|Mapping


typealias ComponentVersionLambdaFunctionRecipeSourceComponentDependencies = Mapping<String, Any>

/// 
open class ComponentVersionLambdaFunctionRecipeSource {
    LambdaArn: (String(matches(Regex(#"^arn:[^:]*:lambda:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$"#)))|Mapping)?
    ComponentName: (String|Mapping)?
    ComponentVersion: (String|Mapping)?
    ComponentPlatforms: (Listing<ComponentVersionComponentPlatform>)?
    ComponentDependencies: (ComponentVersionLambdaFunctionRecipeSourceComponentDependencies)?
    ComponentLambdaParameters: (ComponentVersionLambdaExecutionParameters)?
}

typealias LambdaEventSourceType = "PUB_SUB"|"IOT_CORE"

/// 
open class ComponentVersionLambdaEventSource {
    Topic: (String|Mapping)?
    Type: (LambdaEventSourceType|Mapping)?
}

/// 
open class ComponentVersionLambdaVolumeMount {
    SourcePath: (ComponentVersionFilesystemPath)?
    DestinationPath: (ComponentVersionFilesystemPath)?
    Permission: (ComponentVersionLambdaFilesystemPermission)?
    AddGroupOwner: (ComponentVersionLambdaAddGroupOwnerBoolean)?
}

/// 
open class ComponentVersionLambdaDeviceMount {
    Path: (ComponentVersionFilesystemPath)?
    Permission: (ComponentVersionLambdaFilesystemPermission)?
    AddGroupOwner: (ComponentVersionLambdaAddGroupOwnerBoolean)?
}

typealias ComponentVersionFilesystemPath = String|Mapping


typealias ComponentVersionComponentPlatformAttributes = Mapping<String, Any>

/// 
open class ComponentVersionComponentPlatform {
    Name: (String|Mapping)?
    Attributes: (ComponentVersionComponentPlatformAttributes)?
}

typealias LambdaLinuxProcessParamsIsolationMode = "GreengrassContainer"|"NoContainer"

/// 
open class ComponentVersionLambdaLinuxProcessParams {
    IsolationMode: (LambdaLinuxProcessParamsIsolationMode|Mapping)?
    ContainerParams: (ComponentVersionLambdaContainerParams)?
}

typealias ComponentDependencyRequirementDependencyType = "SOFT"|"HARD"

/// 
open class ComponentVersionComponentDependencyRequirement {
    VersionRequirement: (String|Mapping)?
    DependencyType: (ComponentDependencyRequirementDependencyType|Mapping)?
}

typealias LambdaExecutionParametersInputPayloadEncodingType = "json"|"binary"

typealias ComponentVersionLambdaExecutionParametersEnvironmentVariables = Mapping<String, Any>

/// 
open class ComponentVersionLambdaExecutionParameters {
    Pinned: (Boolean|Mapping)?
    InputPayloadEncodingType: (LambdaExecutionParametersInputPayloadEncodingType|Mapping)?
    LinuxProcessParams: (ComponentVersionLambdaLinuxProcessParams)?
    MaxIdleTimeInSeconds: (Int|Mapping)?
    TimeoutInSeconds: (Int|Mapping)?
    MaxInstancesCount: (Int|Mapping)?
    StatusTimeoutInSeconds: (Int|Mapping)?
    ExecArgs: (Listing<String|Mapping>)?
    EnvironmentVariables: (ComponentVersionLambdaExecutionParametersEnvironmentVariables)?
    EventSources: (Listing<ComponentVersionLambdaEventSource>)?
    MaxQueueSize: (Int|Mapping)?
}

/// 
open class ComponentVersionLambdaContainerParams {
    Devices: (Listing<ComponentVersionLambdaDeviceMount>)?
    MemorySizeInKB: (Int|Mapping)?
    MountROSysfs: (Boolean|Mapping)?
    Volumes: (Listing<ComponentVersionLambdaVolumeMount>)?
}

typealias ComponentVersionLambdaFilesystemPermission = String|Mapping


/// Resource for Greengrass component version.
open class ComponentVersion extends cloudformation.Resource {

    Type = "AWS::GreengrassV2::ComponentVersion"


    /// 
    hidden InlineRecipe: (String|Mapping)?

    /// 
    hidden LambdaFunction: (ComponentVersionLambdaFunctionRecipeSource)?

    /// 
    hidden Tags: (ComponentVersionComponentVersionTags)?

    Properties {
        ["InlineRecipe"] = if (InlineRecipe == null) null else InlineRecipe
        ["LambdaFunction"] = if (LambdaFunction == null) null else LambdaFunction
        ["Tags"] = if (Tags == null) null else Tags
    }

}


typealias ComponentVersionComponentVersionTags = Mapping<String, Any>
