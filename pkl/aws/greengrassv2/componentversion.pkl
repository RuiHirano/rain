/// AWS::GreengrassV2::ComponentVersion
///
/// Generated by rain build --pkl-class AWS::GreengrassV2::ComponentVersion
module aws.greengrassv2.componentversion

import "../../cloudformation.pkl"

/// 
open class LambdaFunctionRecipeSource {
    ComponentName: (String|Mapping)?
    ComponentVersion: (String|Mapping)?
    ComponentPlatforms: (Listing<ComponentPlatform>)?
    ComponentDependencies: (Dynamic)?
    ComponentLambdaParameters: (LambdaExecutionParameters)?
    LambdaArn: (String(matches(Regex(#"^arn:[^:]*:lambda:(([a-z]+-)+[0-9])?:([0-9]{12})?:[^.]+$"#)))|Mapping)?
}

typealias LambdaLinuxProcessParamsIsolationMode = "GreengrassContainer"|"NoContainer"

/// 
open class LambdaLinuxProcessParams {
    IsolationMode: (LambdaLinuxProcessParamsIsolationMode|Mapping)?
    ContainerParams: (LambdaContainerParams)?
}

/// 
open class LambdaContainerParams {
    MemorySizeInKB: (Int|Mapping)?
    MountROSysfs: (Boolean|Mapping)?
    Volumes: (Listing<LambdaVolumeMount>)?
    Devices: (Listing<LambdaDeviceMount>)?
}

/// 
open class LambdaDeviceMount {
    Permission: (LambdaFilesystemPermission)?
    AddGroupOwner: (LambdaAddGroupOwnerBoolean)?
    Path: (FilesystemPath)?
}

/// 
open class LambdaVolumeMount {
    SourcePath: (FilesystemPath)?
    DestinationPath: (FilesystemPath)?
    Permission: (LambdaFilesystemPermission)?
    AddGroupOwner: (LambdaAddGroupOwnerBoolean)?
}

/// 
open class FilesystemPath {
}

/// 
open class LambdaFilesystemPermission {
}

/// 
open class LambdaAddGroupOwnerBoolean {
}

/// 
open class ComponentPlatform {
    Name: (String|Mapping)?
    Attributes: (Dynamic)?
}

typealias ComponentDependencyRequirementDependencyType = "SOFT"|"HARD"

/// 
open class ComponentDependencyRequirement {
    VersionRequirement: (String|Mapping)?
    DependencyType: (ComponentDependencyRequirementDependencyType|Mapping)?
}

typealias LambdaExecutionParametersInputPayloadEncodingType = "json"|"binary"

/// 
open class LambdaExecutionParameters {
    StatusTimeoutInSeconds: (Int|Mapping)?
    Pinned: (Boolean|Mapping)?
    InputPayloadEncodingType: (LambdaExecutionParametersInputPayloadEncodingType|Mapping)?
    ExecArgs: (Listing<String|Mapping>)?
    EnvironmentVariables: (Dynamic)?
    EventSources: (Listing<LambdaEventSource>)?
    MaxQueueSize: (Int|Mapping)?
    MaxInstancesCount: (Int|Mapping)?
    MaxIdleTimeInSeconds: (Int|Mapping)?
    TimeoutInSeconds: (Int|Mapping)?
    LinuxProcessParams: (LambdaLinuxProcessParams)?
}

typealias LambdaEventSourceType = "PUB_SUB"|"IOT_CORE"

/// 
open class LambdaEventSource {
    Type: (LambdaEventSourceType|Mapping)?
    Topic: (String|Mapping)?
}

/// Resource for Greengrass component version.
open class ComponentVersion extends cloudformation.Resource {

    Type = "AWS::GreengrassV2::ComponentVersion"


    /// 
    hidden InlineRecipe: (String|Mapping)?

    /// 
    hidden LambdaFunction: (LambdaFunctionRecipeSource)?

    /// 
    hidden Tags: (Dynamic)?

    Properties {
        ["InlineRecipe"] = if (InlineRecipe == null) null else InlineRecipe
        ["LambdaFunction"] = if (LambdaFunction == null) null else LambdaFunction
        ["Tags"] = if (Tags == null) null else Tags
    }

}
