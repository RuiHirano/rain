/// AWS::InspectorV2::Filter
///
/// Generated by rain build --pkl-class AWS::InspectorV2::Filter
module aws.inspectorv2.filter

import "../../cloudformation.pkl"

typealias FilterStringInput = String|Mapping


typealias FilterPort = Int|Mapping


/// 
open class FilterMapFilter {
    Comparison: FilterMapComparison
    Key: (FilterMapKey)?
    Value: (FilterMapValue)?
}

/// 
open class FilterFilterCriteria {
    PortRange: (FilterPortRangeFilterList)?
    Severity: (FilterStringFilterList)?
    VendorSeverity: (FilterStringFilterList)?
    ComponentType: (FilterStringFilterList)?
    Ec2InstanceVpcId: (FilterStringFilterList)?
    AwsAccountId: (FilterStringFilterList)?
    ComponentId: (FilterStringFilterList)?
    EcrImageRepositoryName: (FilterStringFilterList)?
    NetworkProtocol: (FilterStringFilterList)?
    VulnerabilitySource: (FilterStringFilterList)?
    ResourceTags: (FilterMapFilterList)?
    Title: (FilterStringFilterList)?
    VulnerabilityId: (FilterStringFilterList)?
    EcrImageTags: (FilterStringFilterList)?
    EcrImagePushedAt: (FilterDateFilterList)?
    FindingArn: (FilterStringFilterList)?
    FindingType: (FilterStringFilterList)?
    InspectorScore: (FilterNumberFilterList)?
    EcrImageArchitecture: (FilterStringFilterList)?
    FirstObservedAt: (FilterDateFilterList)?
    Ec2InstanceImageId: (FilterStringFilterList)?
    EcrImageRegistry: (FilterStringFilterList)?
    ResourceType: (FilterStringFilterList)?
    UpdatedAt: (FilterDateFilterList)?
    Ec2InstanceSubnetId: (FilterStringFilterList)?
    EcrImageHash: (FilterStringFilterList)?
    FindingStatus: (FilterStringFilterList)?
    LastObservedAt: (FilterDateFilterList)?
    RelatedVulnerabilities: (FilterStringFilterList)?
    ResourceId: (FilterStringFilterList)?
    VulnerablePackages: (FilterPackageFilterList)?
}

typealias FilterMapValue = String|Mapping


typealias FilterPackageFilterList = Listing<(FilterPackageFilter)?>


typealias FilterMapKey = String|Mapping


/// 
open class FilterNumberFilter {
    LowerInclusive: (Number|Mapping)?
    UpperInclusive: (Number|Mapping)?
}

/// 
open class FilterStringFilter {
    Comparison: FilterStringComparison
    Value: FilterStringInput
}

typealias FilterDateFilterList = Listing<(FilterDateFilter)?>


typealias FilterFilterAction = String|Mapping


/// 
open class FilterDateFilter {
    StartInclusive: (FilterTimestamp)?
    EndInclusive: (FilterTimestamp)?
}

typealias FilterMapFilterList = Listing<(FilterMapFilter)?>


/// 
open class FilterPortRangeFilter {
    EndInclusive: (FilterPort)?
    BeginInclusive: (FilterPort)?
}

typealias FilterTimestamp = Int|Mapping


typealias FilterStringComparison = String|Mapping


typealias FilterNumberFilterList = Listing<(FilterNumberFilter)?>


typealias FilterPortRangeFilterList = Listing<(FilterPortRangeFilter)?>


typealias FilterMapComparison = String|Mapping


typealias FilterStringFilterList = Listing<(FilterStringFilter)?>


/// 
open class FilterPackageFilter {
    Version: (FilterStringFilter)?
    Architecture: (FilterStringFilter)?
    Epoch: (FilterNumberFilter)?
    Name: (FilterStringFilter)?
    Release: (FilterStringFilter)?
    SourceLayerHash: (FilterStringFilter)?
}

/// Inspector Filter resource schema
open class Filter extends cloudformation.Resource {

    Type = "AWS::InspectorV2::Filter"


    /// Findings filter action.
    hidden FilterAction: FilterFilterAction

    /// Findings filter name.
    hidden Name: String|Mapping

    /// Findings filter description.
    hidden Description: (String|Mapping)?

    /// Findings filter criteria.
    hidden FilterCriteria: FilterFilterCriteria

    Properties {
        ["FilterAction"] = if (FilterAction == null) null else FilterAction
        ["Name"] = if (Name == null) null else Name
        ["Description"] = if (Description == null) null else Description
        ["FilterCriteria"] = if (FilterCriteria == null) null else FilterCriteria
    }

}
