/// AWS::InternetMonitor::Monitor
///
/// Generated by rain build --pkl-class AWS::InternetMonitor::Monitor
module aws.internetmonitor.monitor

import "../../cloudformation.pkl"

/// 
open class InternetMeasurementsLogDelivery {
    S3Config: (S3Config)?
}

typealias S3ConfigLogDeliveryStatus = "ENABLED"|"DISABLED"

/// 
open class S3Config {
    LogDeliveryStatus: (S3ConfigLogDeliveryStatus|Mapping)?
    BucketName: (String|Mapping)?
    BucketPrefix: (String|Mapping)?
}

/// 
open class HealthEventsConfig {
    AvailabilityScoreThreshold: (Number|Mapping)?
    PerformanceScoreThreshold: (Number|Mapping)?
    AvailabilityLocalHealthEventsConfig: (LocalHealthEventsConfig)?
    PerformanceLocalHealthEventsConfig: (LocalHealthEventsConfig)?
}

typealias LocalHealthEventsConfigStatus = "ENABLED"|"DISABLED"

/// 
open class LocalHealthEventsConfig {
    Status: (LocalHealthEventsConfigStatus|Mapping)?
    HealthScoreThreshold: (Number|Mapping)?
    MinTrafficImpact: (Number|Mapping)?
}

/// 
open class MonitorConfigState {
}

/// 
open class MonitorProcessingStatusCode {
}

/// The metadata that you apply to the cluster to help you categorize and organize them. Each tag consists of a key and an optional value, both of which you define.
open class Tag {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

/// The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
open class iso8601UTC {
}

/// Represents a monitor, which defines the monitoring boundaries for measurements that Internet Monitor publishes information about for an application
open class Monitor extends cloudformation.Resource {

    Type = "AWS::InternetMonitor::Monitor"


    /// 
    hidden IncludeLinkedAccounts: (Boolean|Mapping)?

    /// 
    hidden ResourcesToAdd: (Listing<String|Mapping>)?

    /// 
    hidden InternetMeasurementsLogDelivery: (InternetMeasurementsLogDelivery)?

    /// 
    hidden MonitorName: String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping

    /// 
    hidden LinkedAccountId: (String(matches(Regex(#"^(\d{12})$"#)))|Mapping)?

    /// 
    hidden HealthEventsConfig: (HealthEventsConfig)?

    /// 
    hidden TrafficPercentageToMonitor: (Int|Mapping)?

    /// 
    hidden Resources: (Listing<String|Mapping>)?

    /// 
    hidden Status: (MonitorConfigState)?

    /// 
    hidden MaxCityNetworksToMonitor: (Int|Mapping)?

    /// 
    hidden ResourcesToRemove: (Listing<String|Mapping>)?

    /// 
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["IncludeLinkedAccounts"] = if (IncludeLinkedAccounts == null) null else IncludeLinkedAccounts
        ["ResourcesToAdd"] = if (ResourcesToAdd == null) null else ResourcesToAdd
        ["InternetMeasurementsLogDelivery"] = if (InternetMeasurementsLogDelivery == null) null else InternetMeasurementsLogDelivery
        ["MonitorName"] = if (MonitorName == null) null else MonitorName
        ["LinkedAccountId"] = if (LinkedAccountId == null) null else LinkedAccountId
        ["HealthEventsConfig"] = if (HealthEventsConfig == null) null else HealthEventsConfig
        ["TrafficPercentageToMonitor"] = if (TrafficPercentageToMonitor == null) null else TrafficPercentageToMonitor
        ["Resources"] = if (Resources == null) null else Resources
        ["Status"] = if (Status == null) null else Status
        ["MaxCityNetworksToMonitor"] = if (MaxCityNetworksToMonitor == null) null else MaxCityNetworksToMonitor
        ["ResourcesToRemove"] = if (ResourcesToRemove == null) null else ResourcesToRemove
        ["Tags"] = if (Tags == null) null else Tags
    }

}
