/// AWS::IoT::DomainConfiguration
///
/// Generated by rain build --pkl-class AWS::IoT::DomainConfiguration
module aws.iot.domainconfiguration

import "../../cloudformation.pkl"

/// 
open class DomainConfigurationAuthorizerConfig {
    DefaultAuthorizerName: (String(matches(Regex(#"^[\w=,@-]+$"#)))|Mapping)?
    AllowAuthorizerOverride: (Boolean|Mapping)?
}

/// 
open class DomainConfigurationServerCertificateConfig {
    EnableOCSPCheck: (Boolean|Mapping)?
}

typealias ServerCertificateSummaryServerCertificateStatus = "INVALID"|"VALID"

/// 
open class DomainConfigurationServerCertificateSummary {
    ServerCertificateArn: (String(matches(Regex(#"^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+$"#)))|Mapping)?
    ServerCertificateStatus: (ServerCertificateSummaryServerCertificateStatus|Mapping)?
    ServerCertificateStatusDetail: (String|Mapping)?
}

/// 
open class DomainConfigurationTlsConfig {
    SecurityPolicy: (String|Mapping)?
}

/// 
open class DomainConfigurationTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Create and manage a Domain Configuration
open class DomainConfiguration extends cloudformation.Resource {

    Type = "AWS::IoT::DomainConfiguration"


    /// 
    hidden AuthorizerConfig: (DomainConfigurationAuthorizerConfig)?

    /// 
    hidden ServiceType: (DomainConfigurationServiceType|Mapping)?

    /// 
    hidden DomainConfigurationStatus: (DomainConfigurationDomainConfigurationStatus|Mapping)?

    /// 
    hidden ServerCertificateConfig: (DomainConfigurationServerCertificateConfig)?

    /// 
    hidden TlsConfig: (DomainConfigurationTlsConfig)?

    /// 
    hidden DomainConfigurationName: (String(matches(Regex(#"^[\w.-]+$"#)))|Mapping)?

    /// 
    hidden ValidationCertificateArn: (String(matches(Regex(#"^arn:aws(-cn|-us-gov|-iso-b|-iso)?:acm:[a-z]{2}-(gov-|iso-|isob-)?[a-z]{4,9}-\d{1}:\d{12}:certificate/[a-zA-Z0-9/-]+$"#)))|Mapping)?

    /// 
    hidden Tags: (Listing<DomainConfigurationTag>)?

    /// 
    hidden DomainName: (String|Mapping)?

    /// 
    hidden ServerCertificateArns: (Listing<String|Mapping>)?

    Properties {
        ["AuthorizerConfig"] = if (AuthorizerConfig == null) null else AuthorizerConfig
        ["ServiceType"] = if (ServiceType == null) null else ServiceType
        ["DomainConfigurationStatus"] = if (DomainConfigurationStatus == null) null else DomainConfigurationStatus
        ["ServerCertificateConfig"] = if (ServerCertificateConfig == null) null else ServerCertificateConfig
        ["TlsConfig"] = if (TlsConfig == null) null else TlsConfig
        ["DomainConfigurationName"] = if (DomainConfigurationName == null) null else DomainConfigurationName
        ["ValidationCertificateArn"] = if (ValidationCertificateArn == null) null else ValidationCertificateArn
        ["Tags"] = if (Tags == null) null else Tags
        ["DomainName"] = if (DomainName == null) null else DomainName
        ["ServerCertificateArns"] = if (ServerCertificateArns == null) null else ServerCertificateArns
    }

}


typealias DomainConfigurationServiceType = "DATA"|"CREDENTIAL_PROVIDER"|"JOBS"

typealias DomainConfigurationDomainConfigurationStatus = "ENABLED"|"DISABLED"
