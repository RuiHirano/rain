/// AWS::IoT::JobTemplate
///
/// Generated by rain build --pkl-class AWS::IoT::JobTemplate
module aws.iot.jobtemplate

import "../../cloudformation.pkl"

/// Allows you to create an exponential rate of rollout for a job.
open class ExponentialRolloutRate {
    BaseRatePerMinute: BaseRatePerMinute
    IncrementFactor: IncrementFactor
    RateIncreaseCriteria: Dynamic
}

/// 
open class MaximumPerMinute {
}

/// How number (in seconds) pre-signed URLs are valid.
open class ExpiresInSec {
}

/// 
open class ThresholdPercentage {
}

/// 
open class IncrementFactor {
}

/// 
open class NumberOfNotifiedThings {
}

/// 
open class NumberOfSucceededThings {
}

/// 
open class FailureType {
}

/// 
open class MinNumberOfExecutedThings {
}

/// 
open class JobRetryFailureType {
}

/// Specifies a start time and duration for a scheduled Job.
open class MaintenanceWindow {
    StartTime: (String|Mapping)?
    DurationInMinutes: (Int|Mapping)?
}

/// The criteria that determine when and how a job abort takes place.
open class AbortCriteria {
    Action: Action
    FailureType: FailureType
    MinNumberOfExecutedThings: MinNumberOfExecutedThings
    ThresholdPercentage: ThresholdPercentage
}

/// 
open class Action {
}

/// Specifies the amount of time, in minutes, this device has to finish execution of this job.
open class InProgressTimeoutInMinutes {
}

/// The ARN of an IAM role that grants grants permission to download files from the S3 bucket where the job data/updates are stored. The role must also grant permission for IoT to download the files.
open class RoleArn {
}

/// Specifies how many times a failure type should be retried.
open class RetryCriteria {
    NumberOfRetries: (Int|Mapping)?
    FailureType: (JobRetryFailureType)?
}

/// 
open class BaseRatePerMinute {
}

/// 
open class RateIncreaseCriteria {
    NumberOfSucceededThings: (NumberOfSucceededThings)?
    NumberOfNotifiedThings: (NumberOfNotifiedThings)?
}

/// Specifies target package version ARNs for a software update job.
open class DestinationPackageVersion {
}

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Job templates enable you to preconfigure jobs so that you can deploy them to multiple sets of target devices.
open class JobTemplate extends cloudformation.Resource {

    Type = "AWS::IoT::JobTemplate"


    /// A description of the Job Template.
    hidden Description: String(matches(Regex(#"[^\p{C}]+"#)))|Mapping

    /// An S3 link to the job document to use in the template. Required if you don't specify a value for document.
    hidden DocumentSource: (String|Mapping)?

    /// Metadata that can be used to manage the JobTemplate.
    hidden Tags: (Listing<Tag>)?

    /// Optional for copying a JobTemplate from a pre-existing Job configuration.
    hidden JobArn: (String|Mapping)?

    /// Specifies the amount of time each device has to finish its execution of the job.
    hidden TimeoutConfig: (Dynamic)?

    /// The criteria that determine when and how a job abort takes place.
    hidden AbortConfig: (Dynamic)?

    /// Configuration for pre-signed S3 URLs.
    hidden PresignedUrlConfig: (Dynamic)?

    /// 
    hidden JobExecutionsRetryConfig: (Dynamic)?

    /// 
    hidden JobTemplateId: String(matches(Regex(#"[a-zA-Z0-9_-]+"#)))|Mapping

    /// The job document. Required if you don't specify a value for documentSource.
    hidden Document: (String|Mapping)?

    /// Allows you to create a staged rollout of a job.
    hidden JobExecutionsRolloutConfig: (Dynamic)?

    /// 
    hidden MaintenanceWindows: (Listing<MaintenanceWindow>)?

    /// 
    hidden DestinationPackageVersions: (Listing<DestinationPackageVersion>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["DocumentSource"] = if (DocumentSource == null) null else DocumentSource
        ["Tags"] = if (Tags == null) null else Tags
        ["JobArn"] = if (JobArn == null) null else JobArn
        ["TimeoutConfig"] = if (TimeoutConfig == null) null else TimeoutConfig
        ["AbortConfig"] = if (AbortConfig == null) null else AbortConfig
        ["PresignedUrlConfig"] = if (PresignedUrlConfig == null) null else PresignedUrlConfig
        ["JobExecutionsRetryConfig"] = if (JobExecutionsRetryConfig == null) null else JobExecutionsRetryConfig
        ["JobTemplateId"] = if (JobTemplateId == null) null else JobTemplateId
        ["Document"] = if (Document == null) null else Document
        ["JobExecutionsRolloutConfig"] = if (JobExecutionsRolloutConfig == null) null else JobExecutionsRolloutConfig
        ["MaintenanceWindows"] = if (MaintenanceWindows == null) null else MaintenanceWindows
        ["DestinationPackageVersions"] = if (DestinationPackageVersions == null) null else DestinationPackageVersions
    }

}
