/// AWS::IoT::SecurityProfile
///
/// Generated by rain build --pkl-class AWS::IoT::SecurityProfile
module aws.iot.securityprofile

import "../../cloudformation.pkl"

/// A security profile behavior.
open class Behavior {
    MetricDimension: (MetricDimension)?
    Criteria: (BehaviorCriteria)?
    SuppressAlerts: (Boolean|Mapping)?
    ExportMetric: (ExportMetric)?
    Name: String(matches(Regex(#"[a-zA-Z0-9:_-]+"#)))|Mapping
    Metric: (String(matches(Regex(#"[a-zA-Z0-9:_-]+"#)))|Mapping)?
}

typealias MetricDimensionOperator = "IN"|"NOT_IN"

/// The dimension of a metric.
open class MetricDimension {
    DimensionName: String(matches(Regex(#"[a-zA-Z0-9:_-]+"#)))|Mapping
    Operator: (MetricDimensionOperator|Mapping)?
}

typealias BehaviorCriteriaComparisonOperator = "less-than"|"less-than-equals"|"greater-than"|"greater-than-equals"|"in-cidr-set"|"not-in-cidr-set"|"in-port-set"|"not-in-port-set"|"in-set"|"not-in-set"

/// The criteria by which the behavior is determined to be normal.
open class BehaviorCriteria {
    Value: (MetricValue)?
    DurationSeconds: (Int|Mapping)?
    ConsecutiveDatapointsToAlarm: (Int|Mapping)?
    ConsecutiveDatapointsToClear: (Int|Mapping)?
    StatisticalThreshold: (StatisticalThreshold)?
    MlDetectionConfig: (MachineLearningDetectionConfig)?
    ComparisonOperator: (BehaviorCriteriaComparisonOperator|Mapping)?
}

typealias MachineLearningDetectionConfigConfidenceLevel = "LOW"|"MEDIUM"|"HIGH"

/// The configuration of an ML Detect Security Profile.
open class MachineLearningDetectionConfig {
    ConfidenceLevel: (MachineLearningDetectionConfigConfidenceLevel|Mapping)?
}

/// A structure containing the alert target ARN and the role ARN.
open class AlertTarget {
    AlertTargetArn: String|Mapping
    RoleArn: String|Mapping
}

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Flag to enable/disable metrics export for metric to be retained.
open class ExportMetric {
}

/// The value to be compared with the metric.
open class MetricValue {
    Count: (String|Mapping)?
    Cidrs: (Listing<String|Mapping>)?
    Ports: (Listing<Int|Mapping>)?
    Number: (Number|Mapping)?
    Numbers: (Listing<Number|Mapping>)?
    Strings: (Listing<String|Mapping>)?
}

typealias StatisticalThresholdStatistic = "Average"|"p0"|"p0.1"|"p0.01"|"p1"|"p10"|"p50"|"p90"|"p99"|"p99.9"|"p99.99"|"p100"

/// A statistical ranking (percentile) which indicates a threshold value by which a behavior is determined to be in compliance or in violation of the behavior.
open class StatisticalThreshold {
    Statistic: (StatisticalThresholdStatistic|Mapping)?
}

/// The metric you want to retain. Dimensions are optional.
open class MetricToRetain {
    Metric: String(matches(Regex(#"[a-zA-Z0-9:_-]+"#)))|Mapping
    MetricDimension: (MetricDimension)?
    ExportMetric: (ExportMetric)?
}

/// A security profile defines a set of expected behaviors for devices in your account.
open class SecurityProfile extends cloudformation.Resource {

    Type = "AWS::IoT::SecurityProfile"


    /// A description of the security profile.
    hidden SecurityProfileDescription: (String|Mapping)?

    /// Specifies the behaviors that, when violated by a device (thing), cause an alert.
    hidden Behaviors: (Listing<Behavior>)?

    /// Specifies the destinations to which alerts are sent.
    hidden AlertTargets: (Dynamic)?

    /// A set of target ARNs that the security profile is attached to.
    hidden TargetArns: (Listing<String|Mapping>)?

    /// A unique identifier for the security profile.
    hidden SecurityProfileName: (String(matches(Regex(#"[a-zA-Z0-9:_-]+"#)))|Mapping)?

    /// A list of metrics whose data is retained (stored). By default, data is retained for any metric used in the profile's behaviors, but it is also retained for any metric specified here.
    hidden AdditionalMetricsToRetainV2: (Listing<MetricToRetain>)?

    /// A structure containing the mqtt topic for metrics export.
    hidden MetricsExportConfig: (Dynamic)?

    /// Metadata that can be used to manage the security profile.
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["SecurityProfileDescription"] = if (SecurityProfileDescription == null) null else SecurityProfileDescription
        ["Behaviors"] = if (Behaviors == null) null else Behaviors
        ["AlertTargets"] = if (AlertTargets == null) null else AlertTargets
        ["TargetArns"] = if (TargetArns == null) null else TargetArns
        ["SecurityProfileName"] = if (SecurityProfileName == null) null else SecurityProfileName
        ["AdditionalMetricsToRetainV2"] = if (AdditionalMetricsToRetainV2 == null) null else AdditionalMetricsToRetainV2
        ["MetricsExportConfig"] = if (MetricsExportConfig == null) null else MetricsExportConfig
        ["Tags"] = if (Tags == null) null else Tags
    }

}
