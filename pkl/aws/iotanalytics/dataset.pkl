/// AWS::IoTAnalytics::Dataset
///
/// Generated by rain build --pkl-class AWS::IoTAnalytics::Dataset
module aws.iotanalytics.dataset

import "../../cloudformation.pkl"

/// 
open class LateDataRule {
    RuleConfiguration: LateDataRuleConfiguration
    RuleName: (String(matches(Regex(#"^[a-zA-Z0-9_]+$"#)))|Mapping)?
}

/// 
open class DeltaTimeSessionWindowConfiguration {
    TimeoutInMinutes: Int|Mapping
}

/// 
open class QueryAction {
    Filters: (Listing<Filter>)?
    SqlQuery: String|Mapping
}

/// 
open class S3DestinationConfiguration {
    GlueConfiguration: (GlueConfiguration)?
    Bucket: String(matches(Regex(#"^[a-zA-Z0-9.\-_]*$"#)))|Mapping
    Key: String(matches(Regex(#"^[a-zA-Z0-9!_.*'()/{}:-]*$"#)))|Mapping
    RoleArn: String|Mapping
}

/// 
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class DatasetContentVersionValue {
    DatasetName: String(matches(Regex(#"(^(?!_{2}))(^[a-zA-Z0-9_]+$)"#)))|Mapping
}

typealias ResourceConfigurationComputeType = "ACU_1"|"ACU_2"

/// 
open class ResourceConfiguration {
    VolumeSizeInGB: Int|Mapping
    ComputeType: ResourceConfigurationComputeType|Mapping
}

/// 
open class DeltaTime {
    OffsetSeconds: Int|Mapping
    TimeExpression: String|Mapping
}

/// 
open class ContainerAction {
    Image: String|Mapping
    ResourceConfiguration: ResourceConfiguration
    Variables: (Listing<Variable>)?
    ExecutionRoleArn: String|Mapping
}

/// 
open class Action {
    QueryAction: (QueryAction)?
    ActionName: String(matches(Regex(#"^[a-zA-Z0-9_]+$"#)))|Mapping
    ContainerAction: (ContainerAction)?
}

/// 
open class OutputFileUriValue {
    FileName: String(matches(Regex(#"^[\w\.-]{1,255}$"#)))|Mapping
}

/// 
open class Schedule {
    ScheduleExpression: String|Mapping
}

/// 
open class Filter {
    DeltaTime: (DeltaTime)?
}

/// 
open class Variable {
    DoubleValue: (Number|Mapping)?
    OutputFileUriValue: (OutputFileUriValue)?
    VariableName: String|Mapping
    DatasetContentVersionValue: (DatasetContentVersionValue)?
    StringValue: (String|Mapping)?
}

/// 
open class IotEventsDestinationConfiguration {
    InputName: String(matches(Regex(#"^[a-zA-Z][a-zA-Z0-9_]*$"#)))|Mapping
    RoleArn: String|Mapping
}

/// 
open class VersioningConfiguration {
    Unlimited: (Boolean|Mapping)?
    MaxVersions: (Int|Mapping)?
}

/// 
open class RetentionPeriod {
    NumberOfDays: (Int|Mapping)?
    Unlimited: (Boolean|Mapping)?
}

/// 
open class DatasetContentDeliveryRule {
    Destination: DatasetContentDeliveryRuleDestination
    EntryName: (String|Mapping)?
}

/// 
open class Trigger {
    Schedule: (Schedule)?
    TriggeringDataset: (TriggeringDataset)?
}

/// 
open class LateDataRuleConfiguration {
    DeltaTimeSessionWindowConfiguration: (DeltaTimeSessionWindowConfiguration)?
}

/// 
open class GlueConfiguration {
    DatabaseName: String|Mapping
    TableName: String|Mapping
}

/// 
open class TriggeringDataset {
    DatasetName: String(matches(Regex(#"(^(?!_{2}))(^[a-zA-Z0-9_]+$)"#)))|Mapping
}

/// 
open class DatasetContentDeliveryRuleDestination {
    IotEventsDestinationConfiguration: (IotEventsDestinationConfiguration)?
    S3DestinationConfiguration: (S3DestinationConfiguration)?
}

/// Resource Type definition for AWS::IoTAnalytics::Dataset
open class Dataset extends cloudformation.Resource {

    Type = "AWS::IoTAnalytics::Dataset"


    /// 
    hidden Actions: Listing<Action>

    /// 
    hidden LateDataRules: (Listing<LateDataRule>)?

    /// 
    hidden Triggers: (Listing<Trigger>)?

    /// 
    hidden VersioningConfiguration: (VersioningConfiguration)?

    /// 
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden DatasetName: (String(matches(Regex(#"(^(?!_{2}))(^[a-zA-Z0-9_]+$)"#)))|Mapping)?

    /// 
    hidden ContentDeliveryRules: (Listing<DatasetContentDeliveryRule>)?

    /// 
    hidden RetentionPeriod: (RetentionPeriod)?

    Properties {
        ["Actions"] = if (Actions == null) null else Actions
        ["LateDataRules"] = if (LateDataRules == null) null else LateDataRules
        ["Triggers"] = if (Triggers == null) null else Triggers
        ["VersioningConfiguration"] = if (VersioningConfiguration == null) null else VersioningConfiguration
        ["Tags"] = if (Tags == null) null else Tags
        ["DatasetName"] = if (DatasetName == null) null else DatasetName
        ["ContentDeliveryRules"] = if (ContentDeliveryRules == null) null else ContentDeliveryRules
        ["RetentionPeriod"] = if (RetentionPeriod == null) null else RetentionPeriod
    }

}
