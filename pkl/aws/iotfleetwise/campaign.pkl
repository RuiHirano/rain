/// AWS::IoTFleetWise::Campaign
///
/// Generated by rain build --pkl-class AWS::IoTFleetWise::Campaign
module aws.iotfleetwise.campaign

import "../../cloudformation.pkl"

/// 
open class DiagnosticsMode {
}

/// 
open class CollectionScheme {
}

/// 
open class Tag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class DataDestinationConfig {
}

/// 
open class S3Config {
    DataFormat: (DataFormat)?
    StorageCompressionFormat: (StorageCompressionFormat)?
    Prefix: (String(matches(Regex(#"^[a-zA-Z0-9-_:./!*'()]+$"#)))|Mapping)?
    BucketArn: String(matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):s3:::.+$"#)))|Mapping
}

/// 
open class UpdateCampaignAction {
}

/// 
open class SignalInformation {
    MinimumSamplingIntervalMs: (Number|Mapping)?
    MaxSampleCount: (Number|Mapping)?
    Name: String(matches(Regex(#"^[\w|*|-]+(\.[\w|*|-]+)*$"#)))|Mapping
}

/// 
open class StorageCompressionFormat {
}

/// 
open class CampaignStatus {
}

/// 
open class SpoolingMode {
}

/// 
open class TimeBasedCollectionScheme {
    PeriodMs: Number|Mapping
}

/// 
open class TriggerMode {
}

/// 
open class DataFormat {
}

/// 
open class ConditionBasedCollectionScheme {
    MinimumTriggerIntervalMs: (Number|Mapping)?
    Expression: String|Mapping
    TriggerMode: (TriggerMode)?
    ConditionLanguageVersion: (Int|Mapping)?
}

/// 
open class Compression {
}

/// 
open class TimestreamConfig {
    TimestreamTableArn: String(matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):timestream:[a-zA-Z0-9-]+:[0-9]{12}:database\/[a-zA-Z0-9_.-]+\/table\/[a-zA-Z0-9_.-]+$"#)))|Mapping
    ExecutionRoleArn: String(matches(Regex(#"^arn:(aws[a-zA-Z0-9-]*):iam::(\d{12})?:(role((\u002F)|(\u002F[\u0021-\u007F]+\u002F))[\w+=,.@-]+)$"#)))|Mapping
}

/// Definition of AWS::IoTFleetWise::Campaign Resource Type
open class Campaign extends cloudformation.Resource {

    Type = "AWS::IoTFleetWise::Campaign"


    /// 
    hidden Compression: (Compression)?

    /// 
    hidden Description: (String(matches(Regex(#"^[^\u0000-\u001F\u007F]+$"#)))|Mapping)?

    /// 
    hidden SignalsToCollect: (Listing<SignalInformation>)?

    /// 
    hidden Name: String(matches(Regex(#"^[a-zA-Z\d\-_:]+$"#)))|Mapping

    /// 
    hidden ExpiryTime: (String|Mapping)?

    /// 
    hidden SignalCatalogArn: String|Mapping

    /// 
    hidden SpoolingMode: (SpoolingMode)?

    /// 
    hidden DiagnosticsMode: (DiagnosticsMode)?

    /// 
    hidden DataDestinationConfigs: (Listing<DataDestinationConfig>)?

    /// 
    hidden StartTime: (String|Mapping)?

    /// 
    hidden PostTriggerCollectionDuration: (Number|Mapping)?

    /// 
    hidden DataExtraDimensions: (Listing<String|Mapping>)?

    /// 
    hidden TargetArn: String|Mapping

    /// 
    hidden CollectionScheme: CollectionScheme

    /// 
    hidden Action: UpdateCampaignAction

    /// 
    hidden Priority: (Int|Mapping)?

    /// 
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["Compression"] = if (Compression == null) null else Compression
        ["Description"] = if (Description == null) null else Description
        ["SignalsToCollect"] = if (SignalsToCollect == null) null else SignalsToCollect
        ["Name"] = if (Name == null) null else Name
        ["ExpiryTime"] = if (ExpiryTime == null) null else ExpiryTime
        ["SignalCatalogArn"] = if (SignalCatalogArn == null) null else SignalCatalogArn
        ["SpoolingMode"] = if (SpoolingMode == null) null else SpoolingMode
        ["DiagnosticsMode"] = if (DiagnosticsMode == null) null else DiagnosticsMode
        ["DataDestinationConfigs"] = if (DataDestinationConfigs == null) null else DataDestinationConfigs
        ["StartTime"] = if (StartTime == null) null else StartTime
        ["PostTriggerCollectionDuration"] = if (PostTriggerCollectionDuration == null) null else PostTriggerCollectionDuration
        ["DataExtraDimensions"] = if (DataExtraDimensions == null) null else DataExtraDimensions
        ["TargetArn"] = if (TargetArn == null) null else TargetArn
        ["CollectionScheme"] = if (CollectionScheme == null) null else CollectionScheme
        ["Action"] = if (Action == null) null else Action
        ["Priority"] = if (Priority == null) null else Priority
        ["Tags"] = if (Tags == null) null else Tags
    }

}
