/// AWS::IoTFleetWise::SignalCatalog
///
/// Generated by rain build --pkl-class AWS::IoTFleetWise::SignalCatalog
module aws.iotfleetwise.signalcatalog

import "../../cloudformation.pkl"

/// 
open class SignalCatalogBranch {
    FullyQualifiedName: String|Mapping
    Description: (String(matches(Regex(#"^[^\u0000-\u001F\u007F]+$"#)))|Mapping)?
}

/// 
open class SignalCatalogAttribute {
    AllowedValues: (SignalCatalogAllowedValues)?
    Max: (Number|Mapping)?
    FullyQualifiedName: String|Mapping
    Description: (String(matches(Regex(#"^[^\u0000-\u001F\u007F]+$"#)))|Mapping)?
    Min: (Number|Mapping)?
    AssignedValue: (String|Mapping)?
    DefaultValue: (String|Mapping)?
    DataType: SignalCatalogNodeDataType
    Unit: (String|Mapping)?
}

/// 
open class SignalCatalogActuator {
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
    AssignedValue: (String|Mapping)?
    FullyQualifiedName: String|Mapping
    DataType: SignalCatalogNodeDataType
    Description: (String(matches(Regex(#"^[^\u0000-\u001F\u007F]+$"#)))|Mapping)?
    Unit: (String|Mapping)?
    AllowedValues: (SignalCatalogAllowedValues)?
}

typealias SignalCatalogNode = SignalCatalogNodeBranch|SignalCatalogNodeSensor|SignalCatalogNodeActuator|SignalCatalogNodeAttribute


/// 
open class SignalCatalogNodeBranch {
    Branch: (SignalCatalogBranch)?
}

/// 
open class SignalCatalogNodeAttribute {
    Attribute: (SignalCatalogAttribute)?
}

/// 
open class SignalCatalogNodeSensor {
    Sensor: (SignalCatalogSensor)?
}

/// 
open class SignalCatalogNodeActuator {
    Actuator: (SignalCatalogActuator)?
}

typealias SignalCatalogNodeDataType = String|Mapping


/// 
open class SignalCatalogSensor {
    FullyQualifiedName: String|Mapping
    DataType: SignalCatalogNodeDataType
    Description: (String(matches(Regex(#"^[^\u0000-\u001F\u007F]+$"#)))|Mapping)?
    Unit: (String|Mapping)?
    AllowedValues: (SignalCatalogAllowedValues)?
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
}

typealias SignalCatalogAllowedValues = Listing<(String|Mapping)?>


/// 
open class SignalCatalogNodeCounts {
    TotalNodes: (Number|Mapping)?
    TotalBranches: (Number|Mapping)?
    TotalSensors: (Number|Mapping)?
    TotalAttributes: (Number|Mapping)?
    TotalActuators: (Number|Mapping)?
}

/// 
open class SignalCatalogTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Definition of AWS::IoTFleetWise::SignalCatalog Resource Type
open class SignalCatalog extends cloudformation.Resource {

    Type = "AWS::IoTFleetWise::SignalCatalog"


    /// 
    hidden Description: (String(matches(Regex(#"^[^\u0000-\u001F\u007F]+$"#)))|Mapping)?

    /// 
    hidden Name: (String(matches(Regex(#"^[a-zA-Z\d\-_:]+$"#)))|Mapping)?

    /// 
    hidden NodeCounts: (SignalCatalogNodeCounts)?

    /// 
    hidden Nodes: (Listing<SignalCatalogNode>)?

    /// 
    hidden Tags: (Listing<SignalCatalogTag>)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["Name"] = if (Name == null) null else Name
        ["NodeCounts"] = if (NodeCounts == null) null else NodeCounts
        ["Nodes"] = if (Nodes == null) null else Nodes
        ["Tags"] = if (Tags == null) null else Tags
    }

}
