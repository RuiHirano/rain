/// AWS::IoTWireless::WirelessDevice
///
/// Generated by rain build --pkl-class AWS::IoTWireless::WirelessDevice
module aws.iotwireless.wirelessdevice

import "../../cloudformation.pkl"

/// 
open class LoRaWANDevice {
    OtaaV11: (OtaaV11)?
    OtaaV10x: (OtaaV10x)?
    AbpV11: (AbpV11)?
    AbpV10x: (AbpV10x)?
    FPorts: (FPorts)?
    DevEui: (String(matches(Regex(#"[a-f0-9]{16}"#)))|Mapping)?
    DeviceProfileId: (String|Mapping)?
    ServiceProfileId: (String|Mapping)?
}

/// 
open class Tag {
    Value: (String|Mapping)?
    Key: (String|Mapping)?
}

typealias ApplicationType = "SemtechGeolocation"

/// LoRaWAN application configuration, which can be used to perform geolocation.
open class Application {
    DestinationName: (String(matches(Regex(#"[a-zA-Z0-9-_]+"#)))|Mapping)?
    FPort: (Int|Mapping)?
    Type: (ApplicationType|Mapping)?
}

/// 
open class OtaaV11 {
    AppKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    NwkKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    JoinEui: String(matches(Regex(#"[a-fA-F0-9]{16}"#)))|Mapping
}

/// 
open class SessionKeysAbpV11 {
    FNwkSIntKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    SNwkSIntKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    NwkSEncKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    AppSKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
}

/// 
open class AbpV11 {
    DevAddr: String(matches(Regex(#"[a-fA-F0-9]{8}"#)))|Mapping
    SessionKeys: SessionKeysAbpV11
}

/// 
open class FPorts {
    Applications: (Listing<Application>)?
}

/// 
open class OtaaV10x {
    AppKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    AppEui: String(matches(Regex(#"[a-fA-F0-9]{16}"#)))|Mapping
}

/// 
open class SessionKeysAbpV10x {
    NwkSKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
    AppSKey: String(matches(Regex(#"[a-fA-F0-9]{32}"#)))|Mapping
}

/// 
open class AbpV10x {
    SessionKeys: SessionKeysAbpV10x
    DevAddr: String(matches(Regex(#"[a-fA-F0-9]{8}"#)))|Mapping
}

/// Create and manage wireless gateways, including LoRa gateways.
open class WirelessDevice extends cloudformation.Resource {

    Type = "AWS::IoTWireless::WirelessDevice"


    /// Wireless device destination name
    hidden DestinationName: String|Mapping

    /// A list of key-value pairs that contain metadata for the device. Currently not supported, will not create if tags are passed.
    hidden Tags: (Listing<Tag>)?

    /// Thing arn. Passed into update to associate Thing with Wireless device.
    hidden ThingArn: (String|Mapping)?

    /// FPort values for the GNSS, stream, and ClockSync functions of the positioning information.
    hidden Positioning: (WirelessDevicePositioning|Mapping)?

    /// Wireless device type, currently only Sidewalk and LoRa
    hidden TypeProperty: WirelessDeviceType|Mapping

    /// Wireless device name
    hidden Name: (String|Mapping)?

    /// Wireless device description
    hidden Description: (String|Mapping)?

    /// The date and time when the most recent uplink was received.
    hidden LastUplinkReceivedAt: (String|Mapping)?

    /// The combination of Package, Station and Model which represents the version of the LoRaWAN Wireless Device.
    hidden LoRaWAN: (LoRaWANDevice)?

    Properties {
        ["DestinationName"] = if (DestinationName == null) null else DestinationName
        ["Tags"] = if (Tags == null) null else Tags
        ["ThingArn"] = if (ThingArn == null) null else ThingArn
        ["Positioning"] = if (Positioning == null) null else Positioning
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["Name"] = if (Name == null) null else Name
        ["Description"] = if (Description == null) null else Description
        ["LastUplinkReceivedAt"] = if (LastUplinkReceivedAt == null) null else LastUplinkReceivedAt
        ["LoRaWAN"] = if (LoRaWAN == null) null else LoRaWAN
    }

}


typealias WirelessDevicePositioning = "Enabled"|"Disabled"

typealias WirelessDeviceType = "Sidewalk"|"LoRaWAN"
