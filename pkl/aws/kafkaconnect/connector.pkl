/// AWS::KafkaConnect::Connector
///
/// Generated by rain build --pkl-class AWS::KafkaConnect::Connector
module aws.kafkaconnect.connector

import "../../cloudformation.pkl"

/// Specifies the worker configuration to use with the connector.
open class WorkerConfiguration {
    Revision: Int|Mapping
    WorkerConfigurationArn: String(matches(Regex(#"arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*"#)))|Mapping
}

/// Information about the capacity allocated to the connector.
open class Capacity {
    ProvisionedCapacity: (ProvisionedCapacity)?
    AutoScaling: (AutoScaling)?
}

/// Details about a custom plugin.
open class CustomPlugin {
    CustomPluginArn: String(matches(Regex(#"arn:(aws|aws-us-gov|aws-cn):kafkaconnect:.*"#)))|Mapping
    Revision: Int|Mapping
}

/// Details of the client authentication used by the Kafka cluster.
open class KafkaClusterClientAuthentication {
    AuthenticationType: KafkaClusterClientAuthenticationType
}

/// Details about a Kafka Connect plugin which will be used with the connector.
open class Plugin {
    CustomPlugin: CustomPlugin
}

/// Information about the scale in policy of the connector.
open class ScaleInPolicy {
    CpuUtilizationPercentage: Int|Mapping
}

/// Details about a fixed capacity allocated to a connector.
open class ProvisionedCapacity {
    WorkerCount: Int|Mapping
    McuCount: (Int|Mapping)?
}

/// Details about delivering logs to Amazon S3.
open class S3LogDelivery {
    Prefix: (String|Mapping)?
    Bucket: (String|Mapping)?
    Enabled: Boolean|Mapping
}

/// Details of how to connect to an Apache Kafka cluster.
open class ApacheKafkaCluster {
    BootstrapServers: String|Mapping
    Vpc: Vpc
}

/// Details about auto scaling of a connector.
open class AutoScaling {
    MaxWorkerCount: Int|Mapping
    MinWorkerCount: Int|Mapping
    ScaleInPolicy: ScaleInPolicy
    ScaleOutPolicy: ScaleOutPolicy
    McuCount: Int|Mapping
}

/// Details about delivering logs to Amazon CloudWatch Logs.
open class CloudWatchLogsLogDelivery {
    Enabled: Boolean|Mapping
    LogGroup: (String|Mapping)?
}

/// The type of client authentication used to connect to the Kafka cluster. Value NONE means that no client authentication is used.
open class KafkaClusterClientAuthenticationType {
}

/// Details of encryption in transit to the Kafka cluster.
open class KafkaClusterEncryptionInTransit {
    EncryptionType: KafkaClusterEncryptionInTransitType
}

/// The type of encryption in transit to the Kafka cluster.
open class KafkaClusterEncryptionInTransitType {
}

/// Information about a VPC used with the connector.
open class Vpc {
    SecurityGroups: Listing<String|Mapping>
    Subnets: Listing<String|Mapping>
}

/// Specifies where worker logs are delivered.
open class WorkerLogDelivery {
    S3: (S3LogDelivery)?
    CloudWatchLogs: (CloudWatchLogsLogDelivery)?
    Firehose: (FirehoseLogDelivery)?
}

/// Details about delivering logs to Amazon Kinesis Data Firehose.
open class FirehoseLogDelivery {
    Enabled: Boolean|Mapping
    DeliveryStream: (String|Mapping)?
}

/// Details of how to connect to the Kafka cluster.
open class KafkaCluster {
    ApacheKafkaCluster: ApacheKafkaCluster
}

/// Details of what logs are delivered and where they are delivered.
open class LogDelivery {
    WorkerLogDelivery: WorkerLogDelivery
}

/// Information about the scale out policy of the connector.
open class ScaleOutPolicy {
    CpuUtilizationPercentage: Int|Mapping
}

/// Resource Type definition for AWS::KafkaConnect::Connector
open class Connector extends cloudformation.Resource {

    Type = "AWS::KafkaConnect::Connector"


    /// 
    hidden Capacity: Capacity

    /// 
    hidden KafkaClusterClientAuthentication: KafkaClusterClientAuthentication

    /// The name of the connector.
    hidden ConnectorName: String|Mapping

    /// 
    hidden LogDelivery: (LogDelivery)?

    /// The Amazon Resource Name (ARN) of the IAM role used by the connector to access Amazon S3 objects and other external resources.
    hidden ServiceExecutionRoleArn: String(matches(Regex(#"arn:(aws|aws-us-gov|aws-cn):iam:.*"#)))|Mapping

    /// The configuration for the connector.
    hidden ConnectorConfiguration: Dynamic

    /// A summary description of the connector.
    hidden ConnectorDescription: (String|Mapping)?

    /// 
    hidden KafkaCluster: KafkaCluster

    /// The version of Kafka Connect. It has to be compatible with both the Kafka cluster's version and the plugins.
    hidden KafkaConnectVersion: String|Mapping

    /// 
    hidden KafkaClusterEncryptionInTransit: KafkaClusterEncryptionInTransit

    /// List of plugins to use with the connector.
    hidden Plugins: Listing<Plugin>

    /// 
    hidden WorkerConfiguration: (WorkerConfiguration)?

    Properties {
        ["Capacity"] = if (Capacity == null) null else Capacity
        ["KafkaClusterClientAuthentication"] = if (KafkaClusterClientAuthentication == null) null else KafkaClusterClientAuthentication
        ["ConnectorName"] = if (ConnectorName == null) null else ConnectorName
        ["LogDelivery"] = if (LogDelivery == null) null else LogDelivery
        ["ServiceExecutionRoleArn"] = if (ServiceExecutionRoleArn == null) null else ServiceExecutionRoleArn
        ["ConnectorConfiguration"] = if (ConnectorConfiguration == null) null else ConnectorConfiguration
        ["ConnectorDescription"] = if (ConnectorDescription == null) null else ConnectorDescription
        ["KafkaCluster"] = if (KafkaCluster == null) null else KafkaCluster
        ["KafkaConnectVersion"] = if (KafkaConnectVersion == null) null else KafkaConnectVersion
        ["KafkaClusterEncryptionInTransit"] = if (KafkaClusterEncryptionInTransit == null) null else KafkaClusterEncryptionInTransit
        ["Plugins"] = if (Plugins == null) null else Plugins
        ["WorkerConfiguration"] = if (WorkerConfiguration == null) null else WorkerConfiguration
    }

}
