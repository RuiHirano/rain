/// AWS::Kendra::DataSource
///
/// Generated by rain build --pkl-class AWS::Kendra::DataSource
module aws.kendra.datasource

import "../../cloudformation.pkl"

/// 
open class OneDriveUserList {
}

/// 
open class ConfluenceSpaceList {
}

/// 
open class ConfluenceSpaceIdentifier {
}

/// 
open class DataSourceFieldName {
}

/// 
open class SalesforceStandardObjectConfiguration {
    Name: SalesforceStandardObjectName
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
}

/// 
open class ConfluencePageConfiguration {
    PageFieldMappings: (ConfluencePageFieldMappingsList)?
}

/// 
open class ConfluenceBlogConfiguration {
    BlogFieldMappings: (ConfluenceBlogFieldMappingsList)?
}

/// 
open class LambdaArn {
}

/// 
open class SalesforceConfiguration {
    SecretArn: SecretArn
    StandardObjectConfigurations: (SalesforceStandardObjectConfigurationList)?
    CrawlAttachments: (Boolean|Mapping)?
    StandardObjectAttachmentConfiguration: (SalesforceStandardObjectAttachmentConfiguration)?
    IncludeAttachmentFilePatterns: (DataSourceInclusionsExclusionsStrings)?
    ExcludeAttachmentFilePatterns: (DataSourceInclusionsExclusionsStrings)?
    ServerUrl: Url
    ChatterFeedConfiguration: (SalesforceChatterFeedConfiguration)?
    KnowledgeArticleConfiguration: (SalesforceKnowledgeArticleConfiguration)?
}

/// 
open class ServiceNowHostUrl {
}

/// 
open class ConfluenceSpaceToIndexFieldMapping {
    DataSourceFieldName: ConfluenceSpaceFieldName
    DateFieldFormat: (DateFieldFormat)?
    IndexFieldName: IndexFieldName
}

/// 
open class WebCrawlerAuthenticationConfiguration {
    BasicAuthentication: (WebCrawlerBasicAuthenticationList)?
}

/// Schedule
open class Schedule {
}

/// List of InlineCustomDocumentEnrichmentConfigurations
open class InlineConfigurations {
}

/// 
open class InlineCustomDocumentEnrichmentConfiguration {
    Condition: (DocumentAttributeCondition)?
    Target: (DocumentAttributeTarget)?
    DocumentContentDeletion: (Boolean|Mapping)?
}

/// A label for tagging Kendra resources
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class SalesforceCustomKnowledgeArticleTypeName {
}

/// 
open class ExcludeSharedDrivesList {
}

/// Data source type
open class Type {
}

/// 
open class CustomDocumentEnrichmentConfiguration {
    InlineConfigurations: (InlineConfigurations)?
    PreExtractionHookConfiguration: (HookConfiguration)?
    PostExtractionHookConfiguration: (HookConfiguration)?
    RoleArn: (RoleArn)?
}

/// 
open class DisableLocalGroups {
}

/// 
open class TenantDomain {
}

/// 
open class ConfluenceBlogFieldName {
}

/// 
open class WebCrawlerSeedUrlList {
}

/// 
open class DataSourceToIndexFieldMapping {
    DataSourceFieldName: DataSourceFieldName
    DateFieldFormat: (DateFieldFormat)?
    IndexFieldName: IndexFieldName
}

/// 
open class DatabaseEngineType {
}

/// S3 data source configuration
open class S3DataSourceConfiguration {
    InclusionPrefixes: (DataSourceInclusionsExclusionsStrings)?
    InclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    ExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    DocumentsMetadataConfiguration: (DocumentsMetadataConfiguration)?
    AccessControlListConfiguration: (AccessControlListConfiguration)?
    BucketName: S3BucketName
}

/// 
open class SalesforceCustomKnowledgeArticleTypeConfiguration {
    Name: SalesforceCustomKnowledgeArticleTypeName
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
}

/// 
open class ConfluenceSpaceFieldName {
}

/// 
open class SalesforceStandardObjectConfigurationList {
}

/// 
open class SalesforceKnowledgeArticleState {
}

/// 
open class SalesforceKnowledgeArticleStateList {
}

/// 
open class SalesforceCustomKnowledgeArticleTypeConfigurationList {
}

/// 
open class ConfluenceBlogToIndexFieldMapping {
    DataSourceFieldName: ConfluenceBlogFieldName
    DateFieldFormat: (DateFieldFormat)?
    IndexFieldName: IndexFieldName
}

/// 
open class UserAccount {
}

/// 
open class WebCrawlerSiteMapsConfiguration {
    SiteMaps: WebCrawlerSiteMaps
}

/// 
open class ColumnConfiguration {
    DocumentTitleColumnName: (ColumnName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    ChangeDetectingColumns: ChangeDetectingColumns
    DocumentIdColumnName: ColumnName
    DocumentDataColumnName: ColumnName
}

/// 
open class ColumnName {
}

/// 
open class DocumentAttributeCondition {
    ConditionDocumentAttributeKey: DocumentAttributeKey
    Operator: ConditionOperator
    ConditionOnValue: (DocumentAttributeValue)?
}

/// 
open class DocumentAttributeTarget {
    TargetDocumentAttributeKey: DocumentAttributeKey
    TargetDocumentAttributeValueDeletion: (Boolean|Mapping)?
    TargetDocumentAttributeValue: (DocumentAttributeValue)?
}

/// 
open class DocumentsMetadataConfiguration {
    S3Prefix: (S3ObjectKey)?
}

/// 
open class ServiceNowConfiguration {
    SecretArn: SecretArn
    ServiceNowBuildVersion: ServiceNowBuildVersionType
    AuthenticationType: (ServiceNowAuthenticationType)?
    KnowledgeArticleConfiguration: (ServiceNowKnowledgeArticleConfiguration)?
    ServiceCatalogConfiguration: (ServiceNowServiceCatalogConfiguration)?
    HostUrl: ServiceNowHostUrl
}

/// 
open class ServiceNowKnowledgeArticleFilterQuery {
}

/// 
open class WebCrawlerSiteMap {
}

/// 
open class Timestamp {
}

/// 
open class DataSourceInclusionsExclusionsStrings {
}

/// 
open class S3ObjectKey {
}

/// 
open class ServiceNowKnowledgeArticleConfiguration {
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    FilterQuery: (ServiceNowKnowledgeArticleFilterQuery)?
    CrawlAttachments: (Boolean|Mapping)?
    IncludeAttachmentFilePatterns: (DataSourceInclusionsExclusionsStrings)?
    ExcludeAttachmentFilePatterns: (DataSourceInclusionsExclusionsStrings)?
}

/// 
open class ConfluenceConfiguration {
    ServerUrl: Url
    BlogConfiguration: (ConfluenceBlogConfiguration)?
    AttachmentConfiguration: (ConfluenceAttachmentConfiguration)?
    PageConfiguration: (ConfluencePageConfiguration)?
    VpcConfiguration: (DataSourceVpcConfiguration)?
    InclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    ExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    SecretArn: SecretArn
    Version: ConfluenceVersion
    SpaceConfiguration: (ConfluenceSpaceConfiguration)?
}

/// 
open class WebCrawlerConfiguration {
    UrlInclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    AuthenticationConfiguration: (WebCrawlerAuthenticationConfiguration)?
    MaxLinksPerPage: (Int|Mapping)?
    MaxContentSizePerPageInMegaBytes: (Number|Mapping)?
    MaxUrlsPerMinuteCrawlRate: (Int|Mapping)?
    ProxyConfiguration: (ProxyConfiguration)?
    Urls: WebCrawlerUrls
    CrawlDepth: (Int|Mapping)?
    UrlExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
}

/// 
open class ServiceNowBuildVersionType {
}

/// ID of data source
open class Id {
}

/// 
open class Url {
}

/// 
open class DatabaseHost {
}

/// 
open class ServiceNowServiceCatalogConfiguration {
    ExcludeAttachmentFilePatterns: (DataSourceInclusionsExclusionsStrings)?
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    CrawlAttachments: (Boolean|Mapping)?
    IncludeAttachmentFilePatterns: (DataSourceInclusionsExclusionsStrings)?
}

/// 
open class ConfluenceAttachmentFieldMappingsList {
}

/// 
open class ExcludeUserAccountsList {
}

/// 
open class HookConfiguration {
    LambdaArn: LambdaArn
    S3Bucket: S3BucketName
    InvocationCondition: (DocumentAttributeCondition)?
}

/// 
open class SecretArn {
}

/// 
open class ChangeDetectingColumns {
}

/// 
open class WebCrawlerUrls {
    SeedUrlConfiguration: (WebCrawlerSeedUrlConfiguration)?
    SiteMapsConfiguration: (WebCrawlerSiteMapsConfiguration)?
}

/// 
open class DataSourceVpcConfiguration {
    SubnetIds: Listing<String|Mapping>
    SecurityGroupIds: Listing<String|Mapping>
}

/// 
open class DataSourceToIndexFieldMappingList {
}

/// 
open class ConfluencePageFieldMappingsList {
}

typealias WebCrawlerSeedUrlConfigurationWebCrawlerMode = "HOST_ONLY"|"SUBDOMAINS"|"EVERYTHING"

/// 
open class WebCrawlerSeedUrlConfiguration {
    SeedUrls: WebCrawlerSeedUrlList
    WebCrawlerMode: (WebCrawlerSeedUrlConfigurationWebCrawlerMode|Mapping)?
}

/// 
open class IndexFieldName {
}

/// 
open class QueryIdentifiersEnclosingOption {
}

/// 
open class ConfluencePageFieldName {
}

/// Name of data source
open class Name {
}

/// 
open class WebCrawlerSeedUrl {
}

/// 
open class ConnectionConfiguration {
    DatabasePort: DatabasePort
    DatabaseName: DatabaseName
    TableName: TableName
    SecretArn: SecretArn
    DatabaseHost: DatabaseHost
}

/// Description of data source
open class Description {
}

/// 
open class ConfluenceAttachmentConfiguration {
    CrawlAttachments: (Boolean|Mapping)?
    AttachmentFieldMappings: (ConfluenceAttachmentFieldMappingsList)?
}

/// 
open class WebCrawlerBasicAuthenticationList {
}

/// ID of Index
open class IndexId {
}

/// 
open class S3Path {
    Bucket: S3BucketName
    Key: S3ObjectKey
}

/// 
open class DatabaseConfiguration {
    VpcConfiguration: (DataSourceVpcConfiguration)?
    ColumnConfiguration: ColumnConfiguration
    AclConfiguration: (AclConfiguration)?
    SqlConfiguration: (SqlConfiguration)?
    DatabaseEngineType: DatabaseEngineType
    ConnectionConfiguration: ConnectionConfiguration
}

/// List of tags
open class TagList {
}

/// 
open class DateFieldFormat {
}

/// 
open class DocumentAttributeValue {
    StringValue: (String|Mapping)?
    StringListValue: (Listing<String|Mapping>)?
    LongValue: (Long)?
    DateValue: (Timestamp)?
}

/// 
open class SalesforceStandardObjectName {
}

/// 
open class TableName {
}

/// 
open class Long {
}

/// 
open class DatabaseName {
}

/// 
open class SharedDriveId {
}

/// Role ARN
open class RoleArn {
}

/// 
open class MimeType {
}

/// 
open class ProxyConfiguration {
    Credentials: (SecretArn)?
    Host: String(matches(Regex(#"([^\s]*)"#)))|Mapping
    Port: Int|Mapping
}

/// 
open class OneDriveUser {
}

/// 
open class ConfluenceSpaceConfiguration {
    CrawlPersonalSpaces: (Boolean|Mapping)?
    CrawlArchivedSpaces: (Boolean|Mapping)?
    IncludeSpaces: (ConfluenceSpaceList)?
    ExcludeSpaces: (ConfluenceSpaceList)?
    SpaceFieldMappings: (ConfluenceSpaceFieldMappingsList)?
}

/// 
open class WorkDocsConfiguration {
    UseChangeLog: (Boolean|Mapping)?
    InclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    ExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    OrganizationId: String(matches(Regex(#"d-[0-9a-fA-F]{10}"#)))|Mapping
    CrawlComments: (Boolean|Mapping)?
}

/// 
open class S3BucketName {
}

/// 
open class SalesforceChatterFeedIncludeFilterType {
}

/// The code for a language.
open class LanguageCode {
}

/// 
open class ConfluencePageToIndexFieldMapping {
    DataSourceFieldName: ConfluencePageFieldName
    DateFieldFormat: (DateFieldFormat)?
    IndexFieldName: IndexFieldName
}

/// 
open class GoogleDriveConfiguration {
    ExcludeSharedDrives: (ExcludeSharedDrivesList)?
    SecretArn: SecretArn
    InclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    ExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    ExcludeMimeTypes: (ExcludeMimeTypesList)?
    ExcludeUserAccounts: (ExcludeUserAccountsList)?
}

/// 
open class ConditionOperator {
}

/// 
open class AclConfiguration {
    AllowedGroupsColumnName: ColumnName
}

/// 
open class OneDriveConfiguration {
    SecretArn: SecretArn
    OneDriveUsers: OneDriveUsers
    InclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    ExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    DisableLocalGroups: (DisableLocalGroups)?
    TenantDomain: TenantDomain
}

/// 
open class ExcludeMimeTypesList {
}

/// 
open class WebCrawlerBasicAuthentication {
    Host: String(matches(Regex(#"([^\s]*)"#)))|Mapping
    Port: Int|Mapping
    Credentials: SecretArn
}

/// 
open class DocumentAttributeKey {
}

typealias SharePointConfigurationSharePointVersion = "SHAREPOINT_ONLINE"|"SHAREPOINT_2013"|"SHAREPOINT_2016"

/// SharePoint configuration
open class SharePointConfiguration {
    SecretArn: SecretArn
    UseChangeLog: (Boolean|Mapping)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    DocumentTitleFieldName: (DataSourceFieldName)?
    DisableLocalGroups: (DisableLocalGroups)?
    SharePointVersion: SharePointConfigurationSharePointVersion|Mapping
    Urls: Listing<Url>
    ExclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
    VpcConfiguration: (DataSourceVpcConfiguration)?
    SslCertificateS3Path: (S3Path)?
    CrawlAttachments: (Boolean|Mapping)?
    InclusionPatterns: (DataSourceInclusionsExclusionsStrings)?
}

/// 
open class ServiceNowAuthenticationType {
}

/// 
open class ConfluenceBlogFieldMappingsList {
}

/// 
open class ConfluenceAttachmentFieldName {
}

/// 
open class WebCrawlerSiteMaps {
}

/// 
open class DataSourceConfiguration {
    DatabaseConfiguration: (DatabaseConfiguration)?
    ConfluenceConfiguration: (ConfluenceConfiguration)?
    GoogleDriveConfiguration: (GoogleDriveConfiguration)?
    WorkDocsConfiguration: (WorkDocsConfiguration)?
    S3Configuration: (S3DataSourceConfiguration)?
    OneDriveConfiguration: (OneDriveConfiguration)?
    ServiceNowConfiguration: (ServiceNowConfiguration)?
    SharePointConfiguration: (SharePointConfiguration)?
    SalesforceConfiguration: (SalesforceConfiguration)?
    WebCrawlerConfiguration: (WebCrawlerConfiguration)?
}

/// 
open class SalesforceKnowledgeArticleConfiguration {
    IncludedStates: SalesforceKnowledgeArticleStateList
    StandardKnowledgeArticleTypeConfiguration: (SalesforceStandardKnowledgeArticleTypeConfiguration)?
    CustomKnowledgeArticleTypeConfigurations: (SalesforceCustomKnowledgeArticleTypeConfigurationList)?
}

/// 
open class ConfluenceSpaceFieldMappingsList {
}

/// 
open class DatabasePort {
}

/// 
open class SqlConfiguration {
    QueryIdentifiersEnclosingOption: (QueryIdentifiersEnclosingOption)?
}

/// 
open class SalesforceChatterFeedConfiguration {
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
    IncludeFilterTypes: (SalesforceChatterFeedIncludeFilterTypes)?
}

/// 
open class SalesforceChatterFeedIncludeFilterTypes {
}

/// 
open class SalesforceStandardObjectAttachmentConfiguration {
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
}

/// 
open class OneDriveUsers {
    OneDriveUserList: (OneDriveUserList)?
    OneDriveUserS3Path: (S3Path)?
}

/// 
open class ConfluenceVersion {
}

/// 
open class ConfluenceAttachmentToIndexFieldMapping {
    DataSourceFieldName: ConfluenceAttachmentFieldName
    DateFieldFormat: (DateFieldFormat)?
    IndexFieldName: IndexFieldName
}

/// 
open class AccessControlListConfiguration {
    KeyPath: (S3ObjectKey)?
}

/// 
open class SalesforceStandardKnowledgeArticleTypeConfiguration {
    DocumentDataFieldName: DataSourceFieldName
    DocumentTitleFieldName: (DataSourceFieldName)?
    FieldMappings: (DataSourceToIndexFieldMappingList)?
}

/// 
open class Arn {
}

/// Kendra DataSource
open class DataSource extends cloudformation.Resource {

    Type = "AWS::Kendra::DataSource"


    /// 
    hidden IndexId: IndexId

    /// 
    hidden RoleArn: (RoleArn)?

    /// 
    hidden LanguageCode: (LanguageCode)?

    /// 
    hidden Name: Name

    /// 
    hidden Schedule: (Schedule)?

    /// Tags for labeling the data source
    hidden Tags: (TagList)?

    /// 
    hidden CustomDocumentEnrichmentConfiguration: (CustomDocumentEnrichmentConfiguration)?

    /// 
    hidden TypeProperty: Type

    /// 
    hidden DataSourceConfiguration: (DataSourceConfiguration)?

    /// 
    hidden Description: (Description)?

    Properties {
        ["IndexId"] = if (IndexId == null) null else IndexId
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["LanguageCode"] = if (LanguageCode == null) null else LanguageCode
        ["Name"] = if (Name == null) null else Name
        ["Schedule"] = if (Schedule == null) null else Schedule
        ["Tags"] = if (Tags == null) null else Tags
        ["CustomDocumentEnrichmentConfiguration"] = if (CustomDocumentEnrichmentConfiguration == null) null else CustomDocumentEnrichmentConfiguration
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["DataSourceConfiguration"] = if (DataSourceConfiguration == null) null else DataSourceConfiguration
        ["Description"] = if (Description == null) null else Description
    }

}
