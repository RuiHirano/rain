/// AWS::KinesisAnalyticsV2::Application
///
/// Generated by rain build --pkl-class AWS::KinesisAnalyticsV2::Application
module aws.kinesisanalyticsv2.application

import "../../cloudformation.pkl"

typealias ParallelismConfigurationConfigurationType = "CUSTOM"|"DEFAULT"

/// Describes parameters for how a Flink-based Kinesis Data Analytics application executes multiple tasks simultaneously. For more information about parallelism, see Parallel Execution in the Apache Flink Documentation
open class ParallelismConfiguration {
    ParallelismPerKPU: (Int|Mapping)?
    Parallelism: (Int|Mapping)?
    AutoScalingEnabled: (Boolean|Mapping)?
    ConfigurationType: ParallelismConfigurationConfigurationType|Mapping
}

typealias InputSchemaRecordEncoding = "UTF-8"

/// For a SQL-based Kinesis Data Analytics application, describes the format of the data in the streaming source, and how each data element maps to corresponding columns created in the in-application stream.
open class InputSchema {
    RecordEncoding: (InputSchemaRecordEncoding|Mapping)?
    RecordColumns: Listing<RecordColumn>
    RecordFormat: RecordFormat
}

/// For a SQL-based Kinesis Data Analytics application, describes the number of in-application streams to create for a given streaming source.
open class InputParallelism {
    Count: (Int|Mapping)?
}

/// The information required to deploy a Kinesis Data Analytics Studio notebook as an application with durable state.
open class DeployAsApplicationConfiguration {
    S3ContentLocation: S3ContentBaseLocation
}

typealias ApplicationCodeConfigurationCodeContentType = "PLAINTEXT"|"ZIPFILE"

/// Describes code configuration for an application.
open class ApplicationCodeConfiguration {
    CodeContentType: ApplicationCodeConfigurationCodeContentType|Mapping
    CodeContent: CodeContent
}

/// The location of an application or a custom artifact.
open class S3ContentLocation {
    FileKey: String|Mapping
    ObjectVersion: (String|Mapping)?
    BucketARN: Arn
}

/// Describes execution properties for a Flink-based Kinesis Data Analytics application.
open class EnvironmentProperties {
    PropertyGroups: (Listing<PropertyGroup>)?
}

/// For an SQL-based Amazon Kinesis Data Analytics application, describes a processor that is used to preprocess the records in the stream before being processed by your application code. Currently, the only input processor available is Amazon Lambda.
open class InputProcessingConfiguration {
    InputLambdaProcessor: (InputLambdaProcessor)?
}

/// The array of descriptions of VPC configurations available to the application.
open class VpcConfigurations {
}

/// Describes the maintenance configuration for the application.
open class ApplicationMaintenanceConfiguration {
    ApplicationMaintenanceWindowStartTime: String(matches(Regex(#"^([01][0-9]|2[0-3]):[0-5][0-9]$"#)))|Mapping
}

/// Property key-value pairs passed into an application.
open class PropertyGroup {
    PropertyGroupId: (String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping)?
    PropertyMap: (Dynamic)?
}

/// When you configure a SQL-based Kinesis Data Analytics application's input at the time of creating or updating an application, provides additional mapping information specific to the record format (such as JSON, CSV, or record fields delimited by some delimiter) on the streaming source.
open class MappingParameters {
    CSVMappingParameters: (CSVMappingParameters)?
    JSONMappingParameters: (JSONMappingParameters)?
}

/// For a SQL-based Kinesis Data Analytics application, identifies a Kinesis Data Firehose delivery stream as the streaming source. You provide the delivery stream's Amazon Resource Name (ARN).
open class KinesisFirehoseInput {
    ResourceARN: Arn
}

typealias CustomArtifactConfigurationArtifactType = "DEPENDENCY_JAR"|"UDF"

/// The configuration of connectors and user-defined functions.
open class CustomArtifactConfiguration {
    ArtifactType: CustomArtifactConfigurationArtifactType|Mapping
    MavenReference: (MavenReference)?
    S3ContentLocation: (S3ContentLocation)?
}

/// Describes configuration parameters for a Flink-based Kinesis Data Analytics application or a Studio notebook.
open class FlinkApplicationConfiguration {
    CheckpointConfiguration: (CheckpointConfiguration)?
    MonitoringConfiguration: (MonitoringConfiguration)?
    ParallelismConfiguration: (ParallelismConfiguration)?
}

/// For a SQL-based Kinesis Data Analytics application, provides additional mapping information when the record format uses delimiters, such as CSV. For example, the following sample records use CSV format, where the records use the '\n' as the row delimiter and a comma (",") as the column delimiter:
////// `"name1", "address1"`
/// `"name2", "address2"`
open class CSVMappingParameters {
    RecordColumnDelimiter: String|Mapping
    RecordRowDelimiter: String|Mapping
}

/// The base location of the Amazon Data Analytics application.
open class S3ContentBaseLocation {
    BucketARN: Arn
    BasePath: (String(matches(Regex(#"^[a-zA-Z0-9/!-_.*'()]+$"#)))|Mapping)?
}

/// The configuration parameters for the default Amazon Glue database. You use this database for SQL queries that you write in a Kinesis Data Analytics Studio notebook.
open class CatalogConfiguration {
    GlueDataCatalogConfiguration: (GlueDataCatalogConfiguration)?
}

typealias ZeppelinMonitoringConfigurationLogLevel = "DEBUG"|"INFO"|"WARN"|"ERROR"

/// Describes configuration parameters for Amazon CloudWatch logging for a Kinesis Data Analytics Studio notebook. For more information about CloudWatch logging, see Monitoring.
open class ZeppelinMonitoringConfiguration {
    LogLevel: (ZeppelinMonitoringConfigurationLogLevel|Mapping)?
}

/// Specifies either the application code, or the location of the application code, for a Flink-based Kinesis Data Analytics application.
open class CodeContent {
    ZipFileContent: (String|Mapping)?
    S3ContentLocation: (S3ContentLocation)?
    TextContent: (String|Mapping)?
}

typealias MonitoringConfigurationConfigurationType = "DEFAULT"|"CUSTOM"

typealias MonitoringConfigurationMetricsLevel = "APPLICATION"|"OPERATOR"|"PARALLELISM"|"TASK"

typealias MonitoringConfigurationLogLevel = "DEBUG"|"INFO"|"WARN"|"ERROR"

/// Describes configuration parameters for Amazon CloudWatch logging for a Java-based Kinesis Data Analytics application. For more information about CloudWatch logging, see Monitoring.
open class MonitoringConfiguration {
    ConfigurationType: MonitoringConfigurationConfigurationType|Mapping
    MetricsLevel: (MonitoringConfigurationMetricsLevel|Mapping)?
    LogLevel: (MonitoringConfigurationLogLevel|Mapping)?
}

typealias RecordFormatRecordFormatType = "CSV"|"JSON"

/// For a SQL-based Kinesis Data Analytics application, describes the record format and relevant mapping information that should be applied to schematize the records on the stream.
open class RecordFormat {
    RecordFormatType: RecordFormatRecordFormatType|Mapping
    MappingParameters: (MappingParameters)?
}

/// An object that contains the Amazon Resource Name (ARN) of the Amazon Lambda function that is used to preprocess records in the stream in a SQL-based Kinesis Data Analytics application.
open class InputLambdaProcessor {
    ResourceARN: Arn
}

/// The configuration of a Kinesis Data Analytics Studio notebook.
open class ZeppelinApplicationConfiguration {
    CatalogConfiguration: (CatalogConfiguration)?
    MonitoringConfiguration: (ZeppelinMonitoringConfiguration)?
    DeployAsApplicationConfiguration: (DeployAsApplicationConfiguration)?
    CustomArtifactsConfiguration: (CustomArtifactsConfiguration)?
}

/// A list of CustomArtifactConfiguration objects.
open class CustomArtifactsConfiguration {
}

/// Specifies the creation parameters for a Kinesis Data Analytics application.
open class ApplicationConfiguration {
    ApplicationCodeConfiguration: (ApplicationCodeConfiguration)?
    ApplicationSnapshotConfiguration: (ApplicationSnapshotConfiguration)?
    EnvironmentProperties: (EnvironmentProperties)?
    FlinkApplicationConfiguration: (FlinkApplicationConfiguration)?
    SqlApplicationConfiguration: (SqlApplicationConfiguration)?
    ZeppelinApplicationConfiguration: (ZeppelinApplicationConfiguration)?
    VpcConfigurations: (VpcConfigurations)?
}

/// When you configure the application input for a SQL-based Kinesis Data Analytics application, you specify the streaming source, the in-application stream name that is created, and the mapping between the two.
open class Input {
    InputProcessingConfiguration: (InputProcessingConfiguration)?
    InputParallelism: (InputParallelism)?
    NamePrefix: String(matches(Regex(#"^[^-\s<>&]*$"#)))|Mapping
    InputSchema: InputSchema
    KinesisStreamsInput: (KinesisStreamsInput)?
    KinesisFirehoseInput: (KinesisFirehoseInput)?
}

/// For a SQL-based Kinesis Data Analytics application, provides additional mapping information when JSON is the record format on the streaming source.
open class JSONMappingParameters {
    RecordRowPath: String(matches(Regex(#"^(?=^\$)(?=^\S+$).*$"#)))|Mapping
}

/// Describes the inputs, outputs, and reference data sources for a SQL-based Kinesis Data Analytics application.
open class SqlApplicationConfiguration {
    Inputs: (Listing<Input>)?
}

/// For a SQL-based Kinesis Data Analytics application, describes the mapping of each data element in the streaming source to the corresponding column in the in-application stream.
////// Also used to describe the format of the reference data source.
open class RecordColumn {
    Mapping: (String|Mapping)?
    Name: String(matches(Regex(#"^[^-\s<>&]*$"#)))|Mapping
    SqlType: String|Mapping
}

/// Identifies a Kinesis data stream as the streaming source. You provide the stream's Amazon Resource Name (ARN).
open class KinesisStreamsInput {
    ResourceARN: Arn
}

/// The configuration of the Glue Data Catalog that you use for Apache Flink SQL queries and table API transforms that you write in an application.
open class GlueDataCatalogConfiguration {
    DatabaseARN: (Arn)?
}

/// Describes the parameters of a VPC used by the application.
open class VpcConfiguration {
    SecurityGroupIds: Listing<String|Mapping>
    SubnetIds: Listing<String|Mapping>
}

/// Identifies the run configuration (start parameters) of a Kinesis Data Analytics application. This section is evaluated only on stack updates for applications in running RUNNING state and has no effect during manual application start.
open class RunConfiguration {
    ApplicationRestoreConfiguration: (ApplicationRestoreConfiguration)?
    FlinkRunConfiguration: (FlinkRunConfiguration)?
}

/// Describes whether snapshots are enabled for a Flink-based Kinesis Data Analytics application.
open class ApplicationSnapshotConfiguration {
    SnapshotsEnabled: Boolean|Mapping
}

typealias CheckpointConfigurationConfigurationType = "DEFAULT"|"CUSTOM"

/// Describes an application's checkpointing configuration. Checkpointing is the process of persisting application state for fault tolerance. For more information, see Checkpoints for Fault Tolerance in the Apache Flink Documentation.
open class CheckpointConfiguration {
    ConfigurationType: CheckpointConfigurationConfigurationType|Mapping
    CheckpointingEnabled: (Boolean|Mapping)?
    CheckpointInterval: (Int|Mapping)?
    MinPauseBetweenCheckpoints: (Int|Mapping)?
}

/// A key-value pair that identifies an application.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// The Amazon Resource Name
open class Arn {
}

typealias ApplicationRestoreConfigurationApplicationRestoreType = "SKIP_RESTORE_FROM_SNAPSHOT"|"RESTORE_FROM_LATEST_SNAPSHOT"|"RESTORE_FROM_CUSTOM_SNAPSHOT"

/// Describes the restore behavior of a restarting application.
open class ApplicationRestoreConfiguration {
    ApplicationRestoreType: ApplicationRestoreConfigurationApplicationRestoreType|Mapping
    SnapshotName: (String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping)?
}

/// Describes the starting parameters for a Flink-based Kinesis Data Analytics application.
open class FlinkRunConfiguration {
    AllowNonRestoredState: (Boolean|Mapping)?
}

/// The information required to specify a Maven reference. You can use Maven references to specify dependency JAR files.
open class MavenReference {
    ArtifactId: String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping
    GroupId: String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping
    Version: String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping
}

/// Creates an Amazon Kinesis Data Analytics application. For information about creating a Kinesis Data Analytics application, see [Creating an Application](https://docs.aws.amazon.com/kinesisanalytics/latest/java/getting-started.html).
open class Application extends cloudformation.Resource {

    Type = "AWS::KinesisAnalyticsV2::Application"


    /// The description of the application.
    hidden ApplicationDescription: (String|Mapping)?

    /// To create a Kinesis Data Analytics Studio notebook, you must set the mode to `INTERACTIVE`. However, for a Kinesis Data Analytics for Apache Flink application, the mode is optional.
    hidden ApplicationMode: (ApplicationApplicationMode|Mapping)?

    /// The runtime environment for the application.
    hidden RuntimeEnvironment: String|Mapping

    /// Specifies the IAM role that the application uses to access external resources.
    hidden ServiceExecutionRole: Arn

    /// A list of one or more tags to assign to the application. A tag is a key-value pair that identifies an application. Note that the maximum number of application tags includes system tags. The maximum number of user-defined application tags is 50.
    hidden Tags: (Listing<Tag>)?

    /// Use this parameter to configure the application.
    hidden ApplicationConfiguration: (ApplicationConfiguration)?

    /// Specifies run configuration (start parameters) of a Kinesis Data Analytics application. Evaluated on update for RUNNING applications an only.
    hidden RunConfiguration: (RunConfiguration)?

    /// Used to configure start of maintenance window.
    hidden ApplicationMaintenanceConfiguration: (ApplicationMaintenanceConfiguration)?

    /// The name of the application.
    hidden ApplicationName: (String(matches(Regex(#"^[a-zA-Z0-9_.-]+$"#)))|Mapping)?

    Properties {
        ["ApplicationDescription"] = if (ApplicationDescription == null) null else ApplicationDescription
        ["ApplicationMode"] = if (ApplicationMode == null) null else ApplicationMode
        ["RuntimeEnvironment"] = if (RuntimeEnvironment == null) null else RuntimeEnvironment
        ["ServiceExecutionRole"] = if (ServiceExecutionRole == null) null else ServiceExecutionRole
        ["Tags"] = if (Tags == null) null else Tags
        ["ApplicationConfiguration"] = if (ApplicationConfiguration == null) null else ApplicationConfiguration
        ["RunConfiguration"] = if (RunConfiguration == null) null else RunConfiguration
        ["ApplicationMaintenanceConfiguration"] = if (ApplicationMaintenanceConfiguration == null) null else ApplicationMaintenanceConfiguration
        ["ApplicationName"] = if (ApplicationName == null) null else ApplicationName
    }

}


typealias ApplicationApplicationMode = "INTERACTIVE"|"STREAMING"
