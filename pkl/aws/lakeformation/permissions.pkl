/// AWS::LakeFormation::Permissions
///
/// Generated by rain build --pkl-class AWS::LakeFormation::Permissions
module aws.lakeformation.permissions

import "../../cloudformation.pkl"

/// 
open class DatabaseResource {
    CatalogId: (String|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class DataLocationResource {
    S3Resource: (String|Mapping)?
    CatalogId: (String|Mapping)?
}

/// 
open class TableWildcard {
}

/// 
open class TableWithColumnsResource {
    CatalogId: (String|Mapping)?
    Name: (String|Mapping)?
    ColumnWildcard: (ColumnWildcard)?
    DatabaseName: (String|Mapping)?
    ColumnNames: (Listing<String|Mapping>)?
}

/// 
open class ColumnWildcard {
    ExcludedColumnNames: (Listing<String|Mapping>)?
}

/// 
open class DataLakePrincipal {
    DataLakePrincipalIdentifier: (String|Mapping)?
}

/// 
open class TableResource {
    DatabaseName: (String|Mapping)?
    CatalogId: (String|Mapping)?
    TableWildcard: (TableWildcard)?
    Name: (String|Mapping)?
}

/// 
open class Resource {
    DatabaseResource: (DatabaseResource)?
    DataLocationResource: (DataLocationResource)?
    TableWithColumnsResource: (TableWithColumnsResource)?
    TableResource: (TableResource)?
}

/// Resource Type definition for AWS::LakeFormation::Permissions
open class Permissions extends cloudformation.Resource {

    Type = "AWS::LakeFormation::Permissions"


    /// 
    hidden Resource: Resource

    /// 
    hidden Permissions: (Listing<String|Mapping>)?

    /// 
    hidden DataLakePrincipal: DataLakePrincipal

    /// 
    hidden PermissionsWithGrantOption: (Listing<String|Mapping>)?

    Properties {
        ["Resource"] = if (Resource == null) null else Resource
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["DataLakePrincipal"] = if (DataLakePrincipal == null) null else DataLakePrincipal
        ["PermissionsWithGrantOption"] = if (PermissionsWithGrantOption == null) null else PermissionsWithGrantOption
    }

}
