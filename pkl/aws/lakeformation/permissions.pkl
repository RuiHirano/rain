/// AWS::LakeFormation::Permissions
///
/// Generated by rain build --pkl-class AWS::LakeFormation::Permissions
module aws.lakeformation.permissions

import "../../cloudformation.pkl"

/// 
open class PermissionsDataLocationResource {
    CatalogId: (String|Mapping)?
    S3Resource: (String|Mapping)?
}

/// 
open class PermissionsDatabaseResource {
    CatalogId: (String|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class PermissionsResource {
    DatabaseResource: (PermissionsDatabaseResource)?
    DataLocationResource: (PermissionsDataLocationResource)?
    TableWithColumnsResource: (PermissionsTableWithColumnsResource)?
    TableResource: (PermissionsTableResource)?
}

/// 
open class PermissionsTableResource {
    TableWildcard: (PermissionsTableWildcard)?
    Name: (String|Mapping)?
    DatabaseName: (String|Mapping)?
    CatalogId: (String|Mapping)?
}

typealias PermissionsTableWildcard = Dynamic


/// 
open class PermissionsTableWithColumnsResource {
    Name: (String|Mapping)?
    ColumnWildcard: (PermissionsColumnWildcard)?
    DatabaseName: (String|Mapping)?
    ColumnNames: (Listing<String|Mapping>)?
    CatalogId: (String|Mapping)?
}

/// 
open class PermissionsColumnWildcard {
    ExcludedColumnNames: (Listing<String|Mapping>)?
}

/// 
open class PermissionsDataLakePrincipal {
    DataLakePrincipalIdentifier: (String|Mapping)?
}

/// Resource Type definition for AWS::LakeFormation::Permissions
open class Permissions extends cloudformation.Resource {

    Type = "AWS::LakeFormation::Permissions"


    /// 
    hidden DataLakePrincipal: PermissionsDataLakePrincipal

    /// 
    hidden Permissions: (Listing<String|Mapping>)?

    /// 
    hidden PermissionsWithGrantOption: (Listing<String|Mapping>)?

    /// 
    hidden Resource: PermissionsResource

    Properties {
        ["DataLakePrincipal"] = if (DataLakePrincipal == null) null else DataLakePrincipal
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["PermissionsWithGrantOption"] = if (PermissionsWithGrantOption == null) null else PermissionsWithGrantOption
        ["Resource"] = if (Resource == null) null else Resource
    }

}
