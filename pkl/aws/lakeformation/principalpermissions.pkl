/// AWS::LakeFormation::PrincipalPermissions
///
/// Generated by rain build --pkl-class AWS::LakeFormation::PrincipalPermissions
module aws.lakeformation.principalpermissions

import "../../cloudformation.pkl"

/// 
open class LFTagPair {
    CatalogId: (CatalogIdString)?
    TagKey: LFTagKey
    TagValues: TagValueList
}

/// 
open class CatalogResource {
}

/// 
open class TableWildcard {
}

/// 
open class PrincipalPermissionsList {
}

/// 
open class CatalogIdString {
}

/// 
open class PathString {
}

/// A structure containing an LF-tag key and values for a resource.
open class LFTagKeyResource {
    CatalogId: CatalogIdString
    TagKey: NameString
    TagValues: TagValueList
}

/// 
open class DataLakePrincipalList {
}

/// A structure that describes certain columns on certain rows.
open class DataCellsFilterResource {
    DatabaseName: NameString
    TableName: NameString
    Name: NameString
    TableCatalogId: CatalogIdString
}

/// A structure for the resource.
open class Resource {
    DataCellsFilter: (DataCellsFilterResource)?
    LFTag: (LFTagKeyResource)?
    LFTagPolicy: (LFTagPolicyResource)?
    Catalog: (CatalogResource)?
    Database: (DatabaseResource)?
    Table: (TableResource)?
    TableWithColumns: (TableWithColumnsResource)?
    DataLocation: (DataLocationResource)?
}

/// 
open class LFTagValue {
}

/// 
open class NameString {
}

/// 
open class DataLakePrincipalString {
}

/// A wildcard object, consisting of an optional list of excluded column names or indexes.
open class ColumnWildcard {
    ExcludedColumnNames: (ColumnNames)?
}

/// A structure for a table with columns object. This object is only used when granting a SELECT permission.
//////  This object must take a value for at least one of ``ColumnsNames``, ``ColumnsIndexes``, or ``ColumnsWildcard``.
open class TableWithColumnsResource {
    CatalogId: CatalogIdString
    DatabaseName: NameString
    Name: NameString
    ColumnNames: (ColumnNames)?
    ColumnWildcard: (ColumnWildcard)?
}

/// A structure for a data location object where permissions are granted or revoked.
open class DataLocationResource {
    ResourceArn: ResourceArnString
    CatalogId: CatalogIdString
}

/// 
open class ResourceArnString {
}

/// 
open class TagValueList {
}

/// 
open class PrincipalResourcePair {
    Principal: DataLakePrincipal
    Resource: Resource
}

/// 
open class IAMRoleArn {
}

/// A structure for the database object.
open class DatabaseResource {
    CatalogId: CatalogIdString
    Name: NameString
}

/// A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.
open class TableResource {
    CatalogId: CatalogIdString
    DatabaseName: NameString
    Name: (NameString)?
    TableWildcard: (TableWildcard)?
}

/// 
open class Permission {
}

/// 
open class LFTagsList {
}

/// 
open class ColumnNames {
}

/// A list of LF-tag conditions that define a resource's LF-tag policy.
//////  A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns that do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'.
open class LFTagPolicyResource {
    Expression: Expression
    CatalogId: CatalogIdString
    ResourceType: ResourceType
}

/// 
open class NullableBoolean {
}

/// 
open class LFTagKey {
}

/// 
open class ResourceType {
}

/// 
open class PrincipalPermissions {
    DataLakePrincipal: (DataLakePrincipal)?
    PermissionList: (PermissionList)?
}

/// The LF-tag key and values attached to a resource.
open class LFTag {
    TagKey: (LFTagKey)?
    TagValues: (TagValueList)?
}

/// 
open class Expression {
}

/// The LFlong principal.
open class DataLakePrincipal {
    DataLakePrincipalIdentifier: (DataLakePrincipalString)?
}

/// 
open class PermissionList {
}

/// The ``AWS::LakeFormation::PrincipalPermissions`` resource represents the permissions that a principal has on a GLUDC resource (such as GLUlong databases or GLUlong tables). When you create a ``PrincipalPermissions`` resource, the permissions are granted via the LFlong ``GrantPermissions`` API operation. When you delete a ``PrincipalPermissions`` resource, the permissions on principal-resource pair are revoked via the LFlong ``RevokePermissions`` API operation.
open class PrincipalPermissions extends cloudformation.Resource {

    Type = "AWS::LakeFormation::PrincipalPermissions"


    /// Indicates the ability to grant permissions (as a subset of permissions granted).
    hidden PermissionsWithGrantOption: PermissionList

    /// The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
    hidden Catalog: (CatalogIdString)?

    /// The principal to be granted a permission.
    hidden Principal: DataLakePrincipal

    /// The resource to be granted or revoked permissions.
    hidden Resource: Resource

    /// The permissions granted or revoked.
    hidden Permissions: PermissionList

    Properties {
        ["PermissionsWithGrantOption"] = if (PermissionsWithGrantOption == null) null else PermissionsWithGrantOption
        ["Catalog"] = if (Catalog == null) null else Catalog
        ["Principal"] = if (Principal == null) null else Principal
        ["Resource"] = if (Resource == null) null else Resource
        ["Permissions"] = if (Permissions == null) null else Permissions
    }

}
