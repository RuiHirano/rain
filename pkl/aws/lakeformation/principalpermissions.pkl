/// AWS::LakeFormation::PrincipalPermissions
///
/// Generated by rain build --pkl-class AWS::LakeFormation::PrincipalPermissions
module aws.lakeformation.principalpermissions

import "../../cloudformation.pkl"

typealias PrincipalPermissionsDataLakePrincipalString = String|Mapping


typealias PrincipalPermissionsPermissionList = Listing<(PrincipalPermissionsPermission)?>


typealias PrincipalPermissionsTableWildcard = Dynamic


/// 
open class PrincipalPermissionsLFTagPair {
    TagValues: PrincipalPermissionsTagValueList
    CatalogId: (PrincipalPermissionsCatalogIdString)?
    TagKey: PrincipalPermissionsLFTagKey
}

typealias PrincipalPermissionsCatalogIdString = String|Mapping


/// A structure for the database object.
open class PrincipalPermissionsDatabaseResource {
    CatalogId: PrincipalPermissionsCatalogIdString
    Name: PrincipalPermissionsNameString
}

typealias PrincipalPermissionsIAMRoleArn = String|Mapping


typealias PrincipalPermissionsExpression = Listing<(PrincipalPermissionsLFTag)?>


typealias PrincipalPermissionsNullableBoolean = Dynamic


typealias PrincipalPermissionsPermission = String|Mapping


/// 
open class PrincipalPermissionsPrincipalResourcePair {
    Principal: PrincipalPermissionsDataLakePrincipal
    Resource: PrincipalPermissionsResource
}

typealias PrincipalPermissionsResourceArnString = String|Mapping


typealias PrincipalPermissionsColumnNames = Listing<(PrincipalPermissionsNameString)?>


/// A structure that describes certain columns on certain rows.
open class PrincipalPermissionsDataCellsFilterResource {
    TableCatalogId: PrincipalPermissionsCatalogIdString
    DatabaseName: PrincipalPermissionsNameString
    TableName: PrincipalPermissionsNameString
    Name: PrincipalPermissionsNameString
}

/// The LFlong principal.
open class PrincipalPermissionsDataLakePrincipal {
    DataLakePrincipalIdentifier: (PrincipalPermissionsDataLakePrincipalString)?
}

typealias PrincipalPermissionsResourceType = String|Mapping


/// A structure for the table object. A table is a metadata definition that represents your data. You can Grant and Revoke table privileges to a principal.
open class PrincipalPermissionsTableResource {
    DatabaseName: PrincipalPermissionsNameString
    Name: (PrincipalPermissionsNameString)?
    TableWildcard: (PrincipalPermissionsTableWildcard)?
    CatalogId: PrincipalPermissionsCatalogIdString
}

typealias PrincipalPermissionsTagValueList = Listing<(PrincipalPermissionsLFTagValue)?>


/// A structure containing an LF-tag key and values for a resource.
open class PrincipalPermissionsLFTagKeyResource {
    CatalogId: PrincipalPermissionsCatalogIdString
    TagKey: PrincipalPermissionsNameString
    TagValues: PrincipalPermissionsTagValueList
}

typealias PrincipalPermissionsPrincipalPermissionsList = Listing<(PrincipalPermissionsPrincipalPermissions)?>


/// A structure for a table with columns object. This object is only used when granting a SELECT permission.
///
///  This object must take a value for at least one of ``ColumnsNames``, ``ColumnsIndexes``, or ``ColumnsWildcard``.
open class PrincipalPermissionsTableWithColumnsResource {
    DatabaseName: PrincipalPermissionsNameString
    Name: PrincipalPermissionsNameString
    ColumnNames: (PrincipalPermissionsColumnNames)?
    ColumnWildcard: (PrincipalPermissionsColumnWildcard)?
    CatalogId: PrincipalPermissionsCatalogIdString
}

/// 
open class PrincipalPermissionsPrincipalPermissions {
    DataLakePrincipal: (PrincipalPermissionsDataLakePrincipal)?
    PermissionList: (PrincipalPermissionsPermissionList)?
}

/// A structure for the resource.
open class PrincipalPermissionsResource {
    Database: (PrincipalPermissionsDatabaseResource)?
    Table: (PrincipalPermissionsTableResource)?
    TableWithColumns: (PrincipalPermissionsTableWithColumnsResource)?
    DataLocation: (PrincipalPermissionsDataLocationResource)?
    DataCellsFilter: (PrincipalPermissionsDataCellsFilterResource)?
    LFTag: (PrincipalPermissionsLFTagKeyResource)?
    LFTagPolicy: (PrincipalPermissionsLFTagPolicyResource)?
    Catalog: (PrincipalPermissionsCatalogResource)?
}

/// A structure for a data location object where permissions are granted or revoked.
open class PrincipalPermissionsDataLocationResource {
    ResourceArn: PrincipalPermissionsResourceArnString
    CatalogId: PrincipalPermissionsCatalogIdString
}

/// The LF-tag key and values attached to a resource.
open class PrincipalPermissionsLFTag {
    TagKey: (PrincipalPermissionsLFTagKey)?
    TagValues: (PrincipalPermissionsTagValueList)?
}

typealias PrincipalPermissionsLFTagValue = String|Mapping


typealias PrincipalPermissionsPathString = String|Mapping


typealias PrincipalPermissionsCatalogResource = Dynamic


typealias PrincipalPermissionsLFTagKey = String|Mapping


typealias PrincipalPermissionsLFTagsList = Listing<(PrincipalPermissionsLFTagPair)?>


typealias PrincipalPermissionsDataLakePrincipalList = Listing<(PrincipalPermissionsDataLakePrincipal)?>


/// A list of LF-tag conditions that define a resource's LF-tag policy.
///
///  A structure that allows an admin to grant user permissions on certain conditions. For example, granting a role access to all columns that do not have the LF-tag 'PII' in tables that have the LF-tag 'Prod'.
open class PrincipalPermissionsLFTagPolicyResource {
    CatalogId: PrincipalPermissionsCatalogIdString
    ResourceType: PrincipalPermissionsResourceType
    Expression: PrincipalPermissionsExpression
}

typealias PrincipalPermissionsNameString = String|Mapping


/// A wildcard object, consisting of an optional list of excluded column names or indexes.
open class PrincipalPermissionsColumnWildcard {
    ExcludedColumnNames: (PrincipalPermissionsColumnNames)?
}

/// The ``AWS::LakeFormation::PrincipalPermissions`` resource represents the permissions that a principal has on a GLUDC resource (such as GLUlong databases or GLUlong tables). When you create a ``PrincipalPermissions`` resource, the permissions are granted via the LFlong ``GrantPermissions`` API operation. When you delete a ``PrincipalPermissions`` resource, the permissions on principal-resource pair are revoked via the LFlong ``RevokePermissions`` API operation.
open class PrincipalPermissions extends cloudformation.Resource {

    Type = "AWS::LakeFormation::PrincipalPermissions"


    /// The identifier for the GLUDC. By default, the account ID. The GLUDC is the persistent metadata store. It contains database definitions, table definitions, and other control information to manage your Lake Formation environment.
    hidden Catalog: (PrincipalPermissionsCatalogIdString)?

    /// The permissions granted or revoked.
    hidden Permissions: PrincipalPermissionsPermissionList

    /// Indicates the ability to grant permissions (as a subset of permissions granted).
    hidden PermissionsWithGrantOption: PrincipalPermissionsPermissionList

    /// The principal to be granted a permission.
    hidden Principal: PrincipalPermissionsDataLakePrincipal

    /// The resource to be granted or revoked permissions.
    hidden Resource: PrincipalPermissionsResource

    Properties {
        ["Catalog"] = if (Catalog == null) null else Catalog
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["PermissionsWithGrantOption"] = if (PermissionsWithGrantOption == null) null else PermissionsWithGrantOption
        ["Principal"] = if (Principal == null) null else Principal
        ["Resource"] = if (Resource == null) null else Resource
    }

}
