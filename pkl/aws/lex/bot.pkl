/// AWS::Lex::Bot
///
/// Generated by rain build --pkl-class AWS::Lex::Bot
module aws.lex.bot

import "../../cloudformation.pkl"

/// 
open class BotArn {
}

/// A sample utterance that invokes an intent or respond to a slot elicitation prompt.
open class SampleUtterance {
    Utterance: Utterance
}

/// Contains conditional branches to fork the conversation flow.
open class Conditional {
    IsActive: Boolean|Mapping
    ConditionalBranches: ConditionalBranches
}

/// The identifier of the language and locale that the bot will be used in.
open class LocaleId {
}

/// The specified confidence threshold for inserting the AMAZON.FallbackIntent and AMAZON.KendraSearchIntent intents.
open class ConfidenceThreshold {
}

/// The maximum number of times the bot tries to elicit a response from the user using this prompt.
open class PromptMaxRetries {
}

/// Specifies the settings on a prompt attempt.
open class PromptAttemptSpecification {
    AllowInterrupt: (Boolean|Mapping)?
    AudioAndDTMFInputSpecification: (AudioAndDTMFInputSpecification)?
    TextInputSpecification: (TextInputSpecification)?
    AllowedInputTypes: AllowedInputTypes
}

/// A set of actions that Amazon Lex should run if the condition is matched.
open class ConditionalBranch {
    Name: Name
    Condition: Condition
    NextStep: DialogState
    Response: (ResponseSpecification)?
}

/// An array of values that slots should be set to
open class SlotValues {
}

/// A list of bot alias locale settings to add to the bot alias.
open class BotAliasLocaleSettingsList {
}

/// Unique ID of resource
open class Id {
}

/// A description of the resource
open class Description {
}

/// The sample utterance that Amazon Lex uses to build its machine-learning model to recognize intents/slots.
open class Utterance {
}

/// Additional values related to the slot type entry.
open class SynonymList {
}

/// Provides settings that enable advanced recognition settings for slot values.
open class AdvancedRecognitionSetting {
    AudioRecognitionStrategy: (AudioRecognitionStrategy)?
}

/// The default value to use when a user doesn't provide a value for a slot.
open class SlotDefaultValue {
    DefaultValue: String|Mapping
}

/// The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot.
open class RoleArn {
}

/// A regular expression used to validate the value of a slot.
open class SlotValueRegexFilter {
    Pattern: String|Mapping
}

/// Expression that is evaluated to true or false at runtime.
open class ConditionExpression {
}

/// 
open class AttachmentTitle {
}

/// A list of message groups that Amazon Lex uses to respond the user input.
open class ResponseSpecification {
    MessageGroupsList: MessageGroupsList
    AllowInterrupt: (Boolean|Mapping)?
}

/// The slot type name that is used in the slot. Allows for custom and built-in slot type names
open class SlotTypeName {
}

/// Defines one of the values for a slot type.
open class SampleValue {
    Value: String|Mapping
}

/// 
open class CustomVocabularyItems {
}

/// A custom vocabulary is a list of specific phrases that you want Amazon Lex V2 to recognize in the audio input.
open class CustomVocabulary {
    CustomVocabularyItems: CustomVocabularyItems
}

/// If Amazon Lex waits longer than this length of time in seconds for a response, it will stop sending messages.
open class StillWaitingResponseTimeout {
}

/// A query filter that Amazon Lex sends to Amazon Kendra to filter the response from a query.
open class QueryFilterString {
}

/// Settings required for a slot type based on a grammar that you provide.
open class GrammarSlotTypeSetting {
    Source: (GrammarSlotTypeSource)?
}

/// Defines the Amazon CloudWatch Logs destination log group for conversation text logs.
open class TextLogDestination {
    CloudWatch: CloudWatchLogGroupLogDestination
}

/// 
open class AttachmentUrl {
}

/// A custom, extended built-in or a grammar slot type.
open class SlotType {
    Name: Name
    Description: (Description)?
    ParentSlotTypeSignature: (ParentSlotTypeSignature)?
    SlotTypeValues: (SlotTypeValues)?
    ValueSelectionSetting: (SlotValueSelectionSetting)?
    ExternalSourceSetting: (ExternalSourceSetting)?
}

/// Provides a setting that determines whether the post-fulfillment response is sent to the user.
open class PostFulfillmentStatusSpecification {
    SuccessResponse: (ResponseSpecification)?
    SuccessConditional: (ConditionalSpecification)?
    FailureConditional: (ConditionalSpecification)?
    TimeoutNextStep: (DialogState)?
    TimeoutConditional: (ConditionalSpecification)?
    SuccessNextStep: (DialogState)?
    FailureResponse: (ResponseSpecification)?
    FailureNextStep: (DialogState)?
    TimeoutResponse: (ResponseSpecification)?
}

/// The primary message that Amazon Lex should send to the user.
open class Message {
    ImageResponseCard: (ImageResponseCard)?
    PlainTextMessage: (PlainTextMessage)?
    CustomPayload: (CustomPayload)?
    SSMLMessage: (SSMLMessage)?
}

/// Specifies the audio and DTMF input specification.
open class AudioAndDTMFInputSpecification {
    StartTimeoutMs: Int|Mapping
    DTMFSpecification: (DTMFSpecification)?
    AudioSpecification: (AudioSpecification)?
}

/// 
open class SlotConstraint {
}

/// Settings that specify the dialog code hook that is called by Amazon Lex at a step of the conversation.
open class DialogCodeHookInvocationSetting {
    PostCodeHookSpecification: PostDialogCodeHookInvocationSpecification
    EnableCodeHookInvocation: Boolean|Mapping
    IsActive: Boolean|Mapping
    InvocationLabel: (Name)?
}

/// Specifies the text input specifications.
open class TextInputSpecification {
    StartTimeoutMs: Int|Mapping
}

/// Settings that specify the dialog code hook that is called by Amazon Lex between eliciting slot values.
open class ElicitationCodeHookInvocationSetting {
    EnableCodeHookInvocation: Boolean|Mapping
    InvocationLabel: (Name)?
}

/// A map of slot names and their overridden values.
open class SlotValueOverrideMap {
    SlotName: (Name)?
    SlotValueOverride: (SlotValueOverride)?
}

/// A button to use on a response card used to gather slot values from a user.
open class Button {
    Text: String|Mapping
    Value: String|Mapping
}

/// Specifies the allowed input types.
open class AllowedInputTypes {
    AllowAudioInput: Boolean|Mapping
    AllowDTMFInput: Boolean|Mapping
}

/// Value that the slot type can take.
open class SlotTypeValue {
    SampleValue: SampleValue
    Synonyms: (SynonymList)?
}

/// 
open class SlotValueResolutionStrategy {
}

/// A set of actions that Amazon Lex should run if none of the other conditions are met.
open class DefaultConditionalBranch {
    NextStep: (DialogState)?
    Response: (ResponseSpecification)?
}

/// The current state of the conversation with the user.
open class DialogState {
    DialogAction: (DialogAction)?
    Intent: (IntentOverride)?
    SessionAttributes: (Listing<SessionAttribute>)?
}

/// The location of audio log files collected when conversation logging is enabled for a bot.
open class AudioLogDestination {
    S3Bucket: S3BucketLogDestination
}

/// Configuring the test bot alias settings for a given bot
open class TestBotAliasSettings {
    BotAliasLocaleSettings: (BotAliasLocaleSettingsList)?
    ConversationLogSettings: (ConversationLogSettings)?
    Description: (Description)?
    SentimentAnalysisSettings: (Dynamic)?
}

/// A unique identifier for the built-in intent to base this intent on.
open class ParentIntentSignature {
}

/// Prompts the user to confirm the intent.
open class PromptSpecification {
    MessageGroupsList: MessageGroupsList
    MaxRetries: PromptMaxRetries
    AllowInterrupt: (Boolean|Mapping)?
    MessageSelectionStrategy: (MessageSelectionStrategy)?
    PromptAttemptsSpecification: (Dynamic)?
}

/// The priority that a slot should be elicited.
open class PriorityValue {
}

/// A slot is a variable needed to fulfill an intent, where an intent can require zero or more slots.
open class Slot {
    Name: Name
    Description: (Description)?
    SlotTypeName: SlotTypeName
    ValueElicitationSetting: SlotValueElicitationSetting
    ObfuscationSetting: (ObfuscationSetting)?
    MultipleValuesSetting: (MultipleValuesSetting)?
}

/// One or more messages that Amazon Lex can send to the user.
open class MessageGroup {
    Message: Message
    Variations: (Listing<Message>)?
}

/// Provides a prompt for making sure that the user is ready for the intent to be fulfilled.
open class IntentConfirmationSetting {
    FailureResponse: (ResponseSpecification)?
    FailureConditional: (ConditionalSpecification)?
    PromptSpecification: PromptSpecification
    ConfirmationNextStep: (DialogState)?
    FailureNextStep: (DialogState)?
    ElicitationCodeHook: (ElicitationCodeHookInvocationSetting)?
    ConfirmationConditional: (ConditionalSpecification)?
    DeclinationConditional: (ConditionalSpecification)?
    CodeHook: (DialogCodeHookInvocationSetting)?
    IsActive: (Boolean|Mapping)?
    ConfirmationResponse: (ResponseSpecification)?
    DeclinationResponse: (ResponseSpecification)?
    DeclinationNextStep: (DialogState)?
}

/// A list of 1 to 4 conditional branches to fork the conversation flow.
open class ConditionalBranches {
}

/// InputContext specified for the intent.
open class InputContext {
    Name: Name
}

/// A locale in the bot, which contains the intents and slot types that the bot uses in conversations with users in the specified language and locale.
open class BotLocale {
    SlotTypes: (Listing<SlotType>)?
    CustomVocabulary: (CustomVocabulary)?
    LocaleId: LocaleId
    Description: (Description)?
    VoiceSettings: (VoiceSettings)?
    NluConfidenceThreshold: ConfidenceThreshold
    Intents: (Listing<Intent>)?
}

/// List of text log settings that pertain to the conversation log settings for the bot's TestBotAlias
open class TextLogSettings {
}

/// An array of sample utterances
open class SampleUtterancesList {
}

/// How often a message should be sent to the user in seconds.
open class StillWaitingResponseFrequency {
}

/// StillWaitingResponseSpecification.
open class StillWaitingResponseSpecification {
    TimeoutInSeconds: StillWaitingResponseTimeout
    AllowInterrupt: (Boolean|Mapping)?
    MessageGroupsList: MessageGroupsList
    FrequencyInSeconds: StillWaitingResponseFrequency
}

/// Settings that you can use for eliciting a slot value.
open class SlotValueElicitationSetting {
    DefaultValueSpecification: (SlotDefaultValueSpecification)?
    SlotConstraint: SlotConstraint
    PromptSpecification: (PromptSpecification)?
    SampleUtterances: (SampleUtterancesList)?
    WaitAndContinueSpecification: (WaitAndContinueSpecification)?
    SlotCaptureSetting: (SlotCaptureSetting)?
}

/// Provides an expression that evaluates to true or false.
open class Condition {
    ExpressionString: ConditionExpression
}

/// You can use this parameter to specify a specific Lambda function to run different functions in different locales.
open class BotAliasLocaleSettings {
    CodeHookSpecification: (CodeHookSpecification)?
    Enabled: Boolean|Mapping
}

/// Specifies an Amazon S3 bucket for logging audio conversations
open class S3BucketLogDestination {
    S3BucketArn: String(matches(Regex(#"^arn:[\w\-]+:s3:::[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$"#)))|Mapping
    LogPrefix: String|Mapping
    KmsKeyArn: (String(matches(Regex(#"^arn:[\w\-]+:kms:[\w\-]+:[\d]{12}:(?:key\/[\w\-]+|alias\/[a-zA-Z0-9:\/_\-]{1,256})$"#)))|Mapping)?
}

/// The time, in seconds, that Amazon Lex should keep information about a user's conversation with the bot.
open class IdleSessionTTLInSeconds {
}

/// A message that defines a response card that the client application can show to the user.
open class ImageResponseCard {
    Title: AttachmentTitle
    Subtitle: (AttachmentTitle)?
    ImageUrl: (AttachmentUrl)?
    Buttons: (Listing<Button>)?
}

/// The prompts that Amazon Lex uses while a bot is waiting for customer input.
open class WaitAndContinueSpecification {
    WaitingResponse: ResponseSpecification
    ContinueResponse: ResponseSpecification
    StillWaitingResponse: (StillWaitingResponseSpecification)?
    IsActive: (Boolean|Mapping)?
}

/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class CodeHookSpecification {
    LambdaCodeHook: LambdaCodeHook
}

/// Provides information for updating the user on the progress of fulfilling an intent.
open class FulfillmentUpdatesSpecification {
    UpdateResponse: (FulfillmentUpdateResponseSpecification)?
    TimeoutInSeconds: (Int|Mapping)?
    Active: Boolean|Mapping
    StartResponse: (FulfillmentStartResponseSpecification)?
}

/// The amount of time, in seconds, that the output context should remain active.
open class ContextTimeToLiveInSeconds {
}

/// A List of slot type values
open class SlotTypeValues {
}

typealias ObfuscationSettingObfuscationSettingType = "None"|"DefaultObfuscation"

/// Determines whether Amazon Lex obscures slot values in conversation logs.
open class ObfuscationSetting {
    ObfuscationSettingType: ObfuscationSettingObfuscationSettingType|Mapping
}

/// Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.
open class AudioLogSetting {
    Destination: AudioLogDestination
    Enabled: Boolean|Mapping
}

/// Provides a list of conditional branches. Branches are evaluated in the order that they are entered in the list. The first branch with a condition that evaluates to true is executed. The last branch in the list is the default branch. The default branch should not have any condition expression. The default branch is executed if no other branch has a matching condition.
open class ConditionalSpecification {
    IsActive: Boolean|Mapping
    ConditionalBranches: ConditionalBranches
    DefaultBranch: DefaultConditionalBranch
}

/// Settings that determine if a Lambda function should be invoked to fulfill a specific intent.
open class FulfillmentCodeHookSetting {
    IsActive: (Boolean|Mapping)?
    FulfillmentUpdatesSpecification: (FulfillmentUpdatesSpecification)?
    PostFulfillmentStatusSpecification: (PostFulfillmentStatusSpecification)?
    Enabled: Boolean|Mapping
}

/// Indicates how a message is selected from a message group among retries.
open class MessageSelectionStrategy {
}

/// Specifies the audio input specifications.
open class AudioSpecification {
    EndTimeoutMs: Int|Mapping
    MaxLengthMs: Int|Mapping
}

/// Configuration for searching a Amazon Kendra index specified for the intent.
open class KendraConfiguration {
    KendraIndex: KendraIndexArn
    QueryFilterStringEnabled: (Boolean|Mapping)?
    QueryFilterString: (QueryFilterString)?
}

/// List for slot priorities
open class SlotPrioritiesList {
}

/// Enables using slot values as a custom vocabulary when recognizing user utterances.
open class AudioRecognitionStrategy {
}

/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class ConversationLogSettings {
    AudioLogSettings: (AudioLogSettings)?
    TextLogSettings: (TextLogSettings)?
}

/// Specifies the settings on DTMF input.
open class DTMFSpecification {
    DeletionCharacter: String(matches(Regex(#"^[A-D0-9#*]{1}$"#)))|Mapping
    EndCharacter: String(matches(Regex(#"^[A-D0-9#*]{1}$"#)))|Mapping
    EndTimeoutMs: Int|Mapping
    MaxLength: Int|Mapping
}

/// Contains settings used by Amazon Lex to select a slot value.
open class SlotValueSelectionSetting {
    ResolutionStrategy: SlotValueResolutionStrategy
    RegexFilter: (SlotValueRegexFilter)?
    AdvancedRecognitionSetting: (AdvancedRecognitionSetting)?
}

/// List of audio log settings that pertain to the conversation log settings for the bot's TestBotAlias.
open class AudioLogSettings {
}

/// Settings that determine the Lambda function that Amazon Lex uses for processing user responses.
open class DialogCodeHookSetting {
    Enabled: Boolean|Mapping
}

/// 
open class S3BucketName {
}

/// Indicates whether a slot can return multiple values.
open class MultipleValuesSetting {
    AllowMultipleValues: (Boolean|Mapping)?
}

/// Settings used when Amazon Lex successfully captures a slot value from a user.
open class SlotCaptureSetting {
    FailureResponse: (ResponseSpecification)?
    FailureNextStep: (DialogState)?
    FailureConditional: (ConditionalSpecification)?
    CodeHook: (DialogCodeHookInvocationSetting)?
    ElicitationCodeHook: (ElicitationCodeHookInvocationSetting)?
    CaptureResponse: (ResponseSpecification)?
    CaptureNextStep: (DialogState)?
    CaptureConditional: (ConditionalSpecification)?
}

/// Provides settings for a message that is sent to the user when a fulfillment Lambda function starts running.
open class FulfillmentStartResponseSpecification {
    MessageGroups: MessageGroupsList
    DelayInSeconds: Int|Mapping
    AllowInterrupt: (Boolean|Mapping)?
}

/// Provides a statement the Amazon Lex conveys to the user when the intent is successfully fulfilled.
open class IntentClosingSetting {
    ClosingResponse: (ResponseSpecification)?
    IsActive: (Boolean|Mapping)?
    Conditional: (ConditionalSpecification)?
    NextStep: (DialogState)?
}

/// Describes the Amazon S3 bucket name and location for the grammar that is the source for the slot type.
open class GrammarSlotTypeSource {
    S3ObjectKey: S3ObjectKey
    KmsKeyArn: (String(matches(Regex(#"^arn:[\w\-]+:kms:[\w\-]+:[\d]{12}:(?:key\/[\w\-]+|alias\/[a-zA-Z0-9:\/_\-]{1,256})$"#)))|Mapping)?
    S3BucketName: S3BucketName
}

/// Provides information about the external source of the slot type's definition.
open class ExternalSourceSetting {
    GrammarSlotTypeSetting: (GrammarSlotTypeSetting)?
}

/// Override settings to configure the intent state.
open class IntentOverride {
    Name: (Name)?
    Slots: (Listing<SlotValueOverrideMap>)?
}

/// A locale setting in alias
open class BotAliasLocaleSettingsItem {
    LocaleId: String|Mapping
    BotAliasLocaleSetting: BotAliasLocaleSettings
}

/// Key/value pair representing session-specific context information. It contains application information passed between Amazon Lex and a client application.
open class SessionAttribute {
    Key: String|Mapping
    Value: (String|Mapping)?
}

/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class LambdaCodeHook {
    LambdaArn: String|Mapping
    CodeHookInterfaceVersion: String|Mapping
}

/// The number of conversation turns that the output context should remain active.
open class ContextTurnsToLive {
}

/// The priority that Amazon Lex should use when eliciting slot values from a user.
open class SlotPriority {
    Priority: PriorityValue
    SlotName: Name
}

/// S3 location of bot definitions zip file, if it's not defined inline in CloudFormation.
open class S3Location {
    S3Bucket: S3BucketName
    S3ObjectKey: S3ObjectKey
    S3ObjectVersion: (String|Mapping)?
}

/// The different shapes that a slot can be in during a conversation.
open class SlotShape {
}

typealias VoiceSettingsEngine = "standard"|"neural"

/// Settings for using an Amazon Polly voice to communicate with a user.
open class VoiceSettings {
    VoiceId: String|Mapping
    Engine: (VoiceSettingsEngine|Mapping)?
}

/// Specifies next steps to run after the dialog code hook finishes.
open class PostDialogCodeHookInvocationSpecification {
    FailureNextStep: (DialogState)?
    TimeoutConditional: (ConditionalSpecification)?
    SuccessResponse: (ResponseSpecification)?
    FailureResponse: (ResponseSpecification)?
    FailureConditional: (ConditionalSpecification)?
    TimeoutResponse: (ResponseSpecification)?
    TimeoutNextStep: (DialogState)?
    SuccessNextStep: (DialogState)?
    SuccessConditional: (ConditionalSpecification)?
}

/// Defines the action that the bot executes at runtime when the conversation reaches this step.
open class DialogAction {
    SlotToElicit: (Name)?
    SuppressNextMessage: (Boolean|Mapping)?
    Type: DialogActionType
}

/// The possible values of actions that the conversation can take.
open class DialogActionType {
}

/// The value to set in a slot.
open class SlotValue {
    InterpretedValue: (String|Mapping)?
}

/// 
open class CloudWatchLogGroupLogDestination {
    CloudWatchLogGroupArn: String|Mapping
    LogPrefix: String|Mapping
}

/// A message in a custom format defined by the client application.
open class CustomPayload {
    Value: String|Mapping
}

/// 
open class S3ObjectKey {
}

/// A list of values that Amazon Lex should use as the default value for a slot.
open class SlotDefaultValueSpecification {
    DefaultValueList: Listing<SlotDefaultValue>
}

/// A key-value pair for tagging Lex resources
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// A message in Speech Synthesis Markup Language (SSML).
open class SSMLMessage {
    Value: String|Mapping
}

/// The list of input contexts specified for the intent.
open class InputContextsList {
}

/// Unique name for a resource.
open class Name {
}

/// Provides settings for a message that is sent periodically to the user while a fulfillment Lambda function is running.
open class FulfillmentUpdateResponseSpecification {
    MessageGroups: MessageGroupsList
    FrequencyInSeconds: Int|Mapping
    AllowInterrupt: (Boolean|Mapping)?
}

/// One to 5 message groups that contain update messages. Amazon Lex chooses one of the messages to play to the user.
open class MessageGroupsList {
}

/// A list of contexts that the intent activates when it is fulfilled.
open class OutputContextsList {
}

/// Represents an action that the user wants to perform.
open class Intent {
    InputContexts: (InputContextsList)?
    Name: Name
    ParentIntentSignature: (ParentIntentSignature)?
    IntentConfirmationSetting: (IntentConfirmationSetting)?
    InitialResponseSetting: (InitialResponseSetting)?
    KendraConfiguration: (KendraConfiguration)?
    SampleUtterances: (SampleUtterancesList)?
    DialogCodeHook: (DialogCodeHookSetting)?
    FulfillmentCodeHook: (FulfillmentCodeHookSetting)?
    Description: (Description)?
    IntentClosingSetting: (IntentClosingSetting)?
    Slots: (Listing<Slot>)?
    OutputContexts: (OutputContextsList)?
    SlotPriorities: (SlotPrioritiesList)?
}

/// The slot values that Amazon Lex uses when it sets slot values in a dialog step.
open class SlotValueOverride {
    Shape: (SlotShape)?
    Value: (SlotValue)?
    Values: (SlotValues)?
}

/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class TextLogSetting {
    Destination: TextLogDestination
    Enabled: Boolean|Mapping
}

/// A session context that is activated when an intent is fulfilled.
open class OutputContext {
    Name: Name
    TimeToLiveInSeconds: ContextTimeToLiveInSeconds
    TurnsToLive: ContextTurnsToLive
}

/// The Amazon Resource Name (ARN) of the Amazon Kendra index that you want the AMAZON.KendraSearchIntent intent to search.
open class KendraIndexArn {
}

/// The built-in slot type used as a parent of this slot type.
open class ParentSlotTypeSignature {
}

/// A custom vocabulary item that contains the phrase to recognize and a weight to give the boost.
open class CustomVocabularyItem {
    Phrase: String|Mapping
    Weight: (Int|Mapping)?
    DisplayAs: (String|Mapping)?
}

/// Configuration setting for a response sent to the user before Amazon Lex starts eliciting slots.
open class InitialResponseSetting {
    InitialResponse: (ResponseSpecification)?
    NextStep: (DialogState)?
    Conditional: (ConditionalSpecification)?
    CodeHook: (DialogCodeHookInvocationSetting)?
}

/// Provides information on additional privacy protections Amazon Lex should use with the bot's data.
open class DataPrivacy {
    ChildDirected: Boolean|Mapping
}

/// A message in plain text format.
open class PlainTextMessage {
    Value: String|Mapping
}

/// Amazon Lex conversational bot performing automated tasks such as ordering a pizza, booking a hotel, and so on.
open class Bot extends cloudformation.Resource {

    Type = "AWS::Lex::Bot"


    /// Data privacy setting of the Bot.
    hidden DataPrivacy: Dynamic

    /// 
    hidden BotFileS3Location: (S3Location)?

    /// 
    hidden Name: Name

    /// 
    hidden Description: (Description)?

    /// List of bot locales
    hidden BotLocales: (Listing<BotLocale>)?

    /// A list of tags to add to the test alias for a bot, , which can only be added at bot/bot alias creation.
    hidden TestBotAliasTags: (Listing<Tag>)?

    /// 
    hidden TestBotAliasSettings: (TestBotAliasSettings)?

    /// IdleSessionTTLInSeconds of the resource
    hidden IdleSessionTTLInSeconds: Int|Mapping

    /// A list of tags to add to the bot, which can only be added at bot creation.
    hidden BotTags: (Listing<Tag>)?

    /// Specifies whether to build the bot locales after bot creation completes.
    hidden AutoBuildBotLocales: (Boolean|Mapping)?

    /// 
    hidden RoleArn: RoleArn

    Properties {
        ["DataPrivacy"] = if (DataPrivacy == null) null else DataPrivacy
        ["BotFileS3Location"] = if (BotFileS3Location == null) null else BotFileS3Location
        ["Name"] = if (Name == null) null else Name
        ["Description"] = if (Description == null) null else Description
        ["BotLocales"] = if (BotLocales == null) null else BotLocales
        ["TestBotAliasTags"] = if (TestBotAliasTags == null) null else TestBotAliasTags
        ["TestBotAliasSettings"] = if (TestBotAliasSettings == null) null else TestBotAliasSettings
        ["IdleSessionTTLInSeconds"] = if (IdleSessionTTLInSeconds == null) null else IdleSessionTTLInSeconds
        ["BotTags"] = if (BotTags == null) null else BotTags
        ["AutoBuildBotLocales"] = if (AutoBuildBotLocales == null) null else AutoBuildBotLocales
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
    }

}
