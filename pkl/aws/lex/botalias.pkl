/// AWS::Lex::BotAlias
///
/// Generated by rain build --pkl-class AWS::Lex::BotAlias
module aws.lex.botalias

import "../../cloudformation.pkl"

typealias BotAliasBotVersion = String|Mapping


/// You can use this parameter to specify a specific Lambda function to run different functions in different locales.
open class BotAliasBotAliasLocaleSettings {
    CodeHookSpecification: (BotAliasCodeHookSpecification)?
    Enabled: Boolean|Mapping
}

/// Specifies an Amazon S3 bucket for logging audio conversations
open class BotAliasS3BucketLogDestination {
    S3BucketArn: String(matches(Regex(#"^arn:[\w\-]+:s3:::[a-z0-9][\.\-a-z0-9]{1,61}[a-z0-9]$"#)))|Mapping
    LogPrefix: String|Mapping
    KmsKeyArn: (String(matches(Regex(#"^arn:[\w\-]+:kms:[\w\-]+:[\d]{12}:(?:key\/[\w\-]+|alias\/[a-zA-Z0-9:\/_\-]{1,256})$"#)))|Mapping)?
}

typealias BotAliasBotAliasStatus = String|Mapping


typealias BotAliasAudioLogSettings = Listing<(BotAliasAudioLogSetting)?>


/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class BotAliasLambdaCodeHook {
    CodeHookInterfaceVersion: String|Mapping
    LambdaArn: String|Mapping
}

/// A locale setting in alias
open class BotAliasBotAliasLocaleSettingsItem {
    BotAliasLocaleSetting: BotAliasBotAliasLocaleSettings
    LocaleId: String|Mapping
}

typealias BotAliasName = String|Mapping


/// 
open class BotAliasCloudWatchLogGroupLogDestination {
    LogPrefix: String|Mapping
    CloudWatchLogGroupArn: String|Mapping
}

typealias BotAliasArn = String|Mapping


/// A label for tagging Lex resources
open class BotAliasTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Settings for logging audio of conversations between Amazon Lex and a user. You specify whether to log audio and the Amazon S3 bucket where the audio file is stored.
open class BotAliasAudioLogSetting {
    Destination: BotAliasAudioLogDestination
    Enabled: Boolean|Mapping
}

/// The location of audio log files collected when conversation logging is enabled for a bot.
open class BotAliasAudioLogDestination {
    S3Bucket: BotAliasS3BucketLogDestination
}

/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class BotAliasCodeHookSpecification {
    LambdaCodeHook: BotAliasLambdaCodeHook
}

typealias BotAliasId = String|Mapping


typealias BotAliasBotAliasLocaleSettingsList = Listing<(BotAliasBotAliasLocaleSettingsItem)?>


typealias BotAliasDescription = String|Mapping


/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class BotAliasConversationLogSettings {
    AudioLogSettings: (BotAliasAudioLogSettings)?
    TextLogSettings: (BotAliasTextLogSettings)?
}

typealias BotAliasTextLogSettings = Listing<(BotAliasTextLogSetting)?>


typealias BotAliasLocaleId = String|Mapping


/// Contains information about code hooks that Amazon Lex calls during a conversation.
open class BotAliasTextLogSetting {
    Destination: BotAliasTextLogDestination
    Enabled: Boolean|Mapping
}

/// Defines the Amazon CloudWatch Logs destination log group for conversation text logs.
open class BotAliasTextLogDestination {
    CloudWatch: BotAliasCloudWatchLogGroupLogDestination
}

/// A Bot Alias enables you to change the version of a bot without updating applications that use the bot
open class BotAlias extends cloudformation.Resource {

    Type = "AWS::Lex::BotAlias"


    /// A list of tags to add to the bot alias.
    hidden BotAliasTags: (Listing<BotAliasTag>)?

    /// 
    hidden BotId: BotAliasId

    /// 
    hidden BotAliasLocaleSettings: (BotAliasBotAliasLocaleSettingsList)?

    /// 
    hidden BotAliasName: BotAliasName

    /// 
    hidden BotVersion: (BotAliasBotVersion)?

    /// 
    hidden Description: (BotAliasDescription)?

    /// Determines whether Amazon Lex will use Amazon Comprehend to detect the sentiment of user utterances.
    hidden SentimentAnalysisSettings: (Dynamic)?

    /// 
    hidden ConversationLogSettings: (BotAliasConversationLogSettings)?

    Properties {
        ["BotAliasTags"] = if (BotAliasTags == null) null else BotAliasTags
        ["BotId"] = if (BotId == null) null else BotId
        ["BotAliasLocaleSettings"] = if (BotAliasLocaleSettings == null) null else BotAliasLocaleSettings
        ["BotAliasName"] = if (BotAliasName == null) null else BotAliasName
        ["BotVersion"] = if (BotVersion == null) null else BotVersion
        ["Description"] = if (Description == null) null else Description
        ["SentimentAnalysisSettings"] = if (SentimentAnalysisSettings == null) null else SentimentAnalysisSettings
        ["ConversationLogSettings"] = if (ConversationLogSettings == null) null else ConversationLogSettings
    }

}
