/// AWS::Lightsail::LoadBalancer
///
/// Generated by rain build --pkl-class AWS::Lightsail::LoadBalancer
module aws.lightsail.loadbalancer

import "../../cloudformation.pkl"

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String|Mapping
    Value: (String|Mapping)?
}

/// Resource Type definition for AWS::Lightsail::LoadBalancer
open class LoadBalancer extends cloudformation.Resource {

    Type = "AWS::Lightsail::LoadBalancer"


    /// The name of the TLS policy to apply to the load balancer.
    hidden TlsPolicyName: (String|Mapping)?

    /// The IP address type for the load balancer. The possible values are ipv4 for IPv4 only, and dualstack for IPv4 and IPv6. The default value is dualstack.
    hidden IpAddressType: (String|Mapping)?

    /// The names of the instances attached to the load balancer.
    hidden AttachedInstances: (Listing<String|Mapping>)?

    /// The path you provided to perform the load balancer health check. If you didn't specify a health check path, Lightsail uses the root path of your website (e.g., "/").
    hidden HealthCheckPath: (String|Mapping)?

    /// Configuration option to enable session stickiness.
    hidden SessionStickinessEnabled: (Boolean|Mapping)?

    /// Configuration option to adjust session stickiness cookie duration parameter.
    hidden SessionStickinessLBCookieDurationSeconds: (String|Mapping)?

    /// The name of your load balancer.
    hidden LoadBalancerName: String(matches(Regex(#"\w[\w\-]*\w"#)))|Mapping

    /// The instance port where you're creating your load balancer.
    hidden InstancePort: Int|Mapping

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["TlsPolicyName"] = if (TlsPolicyName == null) null else TlsPolicyName
        ["IpAddressType"] = if (IpAddressType == null) null else IpAddressType
        ["AttachedInstances"] = if (AttachedInstances == null) null else AttachedInstances
        ["HealthCheckPath"] = if (HealthCheckPath == null) null else HealthCheckPath
        ["SessionStickinessEnabled"] = if (SessionStickinessEnabled == null) null else SessionStickinessEnabled
        ["SessionStickinessLBCookieDurationSeconds"] = if (SessionStickinessLBCookieDurationSeconds == null) null else SessionStickinessLBCookieDurationSeconds
        ["LoadBalancerName"] = if (LoadBalancerName == null) null else LoadBalancerName
        ["InstancePort"] = if (InstancePort == null) null else InstancePort
        ["Tags"] = if (Tags == null) null else Tags
    }

}
