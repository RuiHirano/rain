/// AWS::MediaConnect::Bridge
///
/// Generated by rain build --pkl-class AWS::MediaConnect::Bridge
module aws.mediaconnect.bridge

import "../../cloudformation.pkl"

typealias BridgeFailoverConfigStateEnum = String|Mapping


/// The source of the bridge. A network source originates at your premises.
open class BridgeBridgeNetworkSource {
    NetworkName: String|Mapping
    Name: String|Mapping
    Protocol: BridgeProtocolEnum
    MulticastIp: String|Mapping
    Port: Int|Mapping
}

/// The output of the bridge.
open class BridgeBridgeOutput {
    NetworkOutput: (BridgeBridgeNetworkOutput)?
}

/// 
open class BridgeEgressGatewayBridge {
    MaxBitrate: Int|Mapping
}

/// The bridge's source.
open class BridgeBridgeSource {
    FlowSource: (BridgeBridgeFlowSource)?
    NetworkSource: (BridgeBridgeNetworkSource)?
}

/// The settings for source failover.
open class BridgeFailoverConfig {
    State: (BridgeFailoverConfigStateEnum)?
    FailoverMode: BridgeFailoverModeEnum
    SourcePriority: (BridgeSourcePriority)?
}

/// The settings for attaching a VPC interface to an resource.
open class BridgeVpcInterfaceAttachment {
    VpcInterfaceName: (String|Mapping)?
}

/// The source of the bridge. A flow source originates in MediaConnect as an existing cloud flow.
open class BridgeBridgeFlowSource {
    FlowArn: String|Mapping
    FlowVpcInterfaceAttachment: (BridgeVpcInterfaceAttachment)?
    Name: String|Mapping
}

/// The output of the bridge. A network output is delivered to your premises.
open class BridgeBridgeNetworkOutput {
    Name: String|Mapping
    Protocol: BridgeProtocolEnum
    IpAddress: String|Mapping
    Port: Int|Mapping
    NetworkName: String|Mapping
    Ttl: Int|Mapping
}

/// 
open class BridgeIngressGatewayBridge {
    MaxBitrate: Int|Mapping
    MaxOutputs: Int|Mapping
}

typealias BridgeProtocolEnum = String|Mapping


/// The priority you want to assign to a source. You can have a primary stream and a backup stream or two equally prioritized streams.
open class BridgeSourcePriority {
    PrimarySource: (String|Mapping)?
}

typealias BridgeBridgeStateEnum = String|Mapping


typealias BridgeFailoverModeEnum = String|Mapping


/// Resource schema for AWS::MediaConnect::Bridge
open class Bridge extends cloudformation.Resource {

    Type = "AWS::MediaConnect::Bridge"


    /// 
    hidden EgressGatewayBridge: (Dynamic)?

    /// 
    hidden IngressGatewayBridge: (Dynamic)?

    /// The name of the bridge.
    hidden Name: String|Mapping

    /// The outputs on this bridge.
    hidden Outputs: (Listing<BridgeBridgeOutput>)?

    /// The placement Amazon Resource Number (ARN) of the bridge.
    hidden PlacementArn: String|Mapping

    /// 
    hidden SourceFailoverConfig: (BridgeFailoverConfig)?

    /// The sources on this bridge.
    hidden Sources: Listing<BridgeBridgeSource>

    Properties {
        ["EgressGatewayBridge"] = if (EgressGatewayBridge == null) null else EgressGatewayBridge
        ["IngressGatewayBridge"] = if (IngressGatewayBridge == null) null else IngressGatewayBridge
        ["Name"] = if (Name == null) null else Name
        ["Outputs"] = if (Outputs == null) null else Outputs
        ["PlacementArn"] = if (PlacementArn == null) null else PlacementArn
        ["SourceFailoverConfig"] = if (SourceFailoverConfig == null) null else SourceFailoverConfig
        ["Sources"] = if (Sources == null) null else Sources
    }

}
