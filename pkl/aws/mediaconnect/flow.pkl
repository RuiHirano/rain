/// AWS::MediaConnect::Flow
///
/// Generated by rain build --pkl-class AWS::MediaConnect::Flow
module aws.mediaconnect.flow

import "../../cloudformation.pkl"

/// The source configuration for cloud flows receiving a stream from a bridge.
open class FlowGatewayBridgeSource {
    BridgeArn: String|Mapping
    VpcInterfaceAttachment: (FlowVpcInterfaceAttachment)?
}

typealias SourceProtocol = "zixi-push"|"rtp-fec"|"rtp"|"rist"|"fujitsu-qos"|"srt-listener"|"srt-caller"

/// The settings for the source of the flow.
open class FlowSource {
    SourceArn: (String|Mapping)?
    Description: (String|Mapping)?
    EntitlementArn: (String|Mapping)?
    GatewayBridgeSource: (FlowGatewayBridgeSource)?
    IngestIp: (String|Mapping)?
    Name: (String|Mapping)?
    SourceListenerAddress: (String|Mapping)?
    VpcInterfaceName: (String|Mapping)?
    SenderControlPort: (Int|Mapping)?
    SourceListenerPort: (Int|Mapping)?
    MaxBitrate: (Int|Mapping)?
    MaxLatency: (Int|Mapping)?
    MinLatency: (Int|Mapping)?
    Protocol: (SourceProtocol|Mapping)?
    SenderIpAddress: (String|Mapping)?
    WhitelistCidr: (String|Mapping)?
    Decryption: (FlowEncryption)?
    IngestPort: (Int|Mapping)?
    StreamId: (String|Mapping)?
    SourceIngestPort: (String|Mapping)?
}

/// The settings for attaching a VPC interface to an resource.
open class FlowVpcInterfaceAttachment {
    VpcInterfaceName: (String|Mapping)?
}

typealias EncryptionAlgorithm = "aes128"|"aes192"|"aes256"

typealias EncryptionKeyType = "speke"|"static-key"|"srt-password"

/// Information about the encryption of the flow.
open class FlowEncryption {
    SecretArn: (String|Mapping)?
    Algorithm: (EncryptionAlgorithm|Mapping)?
    DeviceId: (String|Mapping)?
    KeyType: (EncryptionKeyType|Mapping)?
    ResourceId: (String|Mapping)?
    ConstantInitializationVector: (String|Mapping)?
    Region: (String|Mapping)?
    RoleArn: String|Mapping
    Url: (String|Mapping)?
}

typealias FailoverConfigState = "ENABLED"|"DISABLED"

typealias FailoverConfigFailoverMode = "MERGE"|"FAILOVER"

/// The settings for source failover
open class FlowFailoverConfig {
    State: (FailoverConfigState|Mapping)?
    RecoveryWindow: (Int|Mapping)?
    FailoverMode: (FailoverConfigFailoverMode|Mapping)?
    SourcePriority: (Dynamic)?
}

/// Resource schema for AWS::MediaConnect::Flow
open class Flow extends cloudformation.Resource {

    Type = "AWS::MediaConnect::Flow"


    /// The Availability Zone that you want to create the flow in. These options are limited to the Availability Zones within the current AWS.
    hidden AvailabilityZone: (String|Mapping)?

    /// The name of the flow.
    hidden Name: String|Mapping

    /// The source of the flow.
    hidden Source: FlowSource

    /// The source failover config of the flow.
    hidden SourceFailoverConfig: (FlowFailoverConfig)?

    Properties {
        ["AvailabilityZone"] = if (AvailabilityZone == null) null else AvailabilityZone
        ["Name"] = if (Name == null) null else Name
        ["Source"] = if (Source == null) null else Source
        ["SourceFailoverConfig"] = if (SourceFailoverConfig == null) null else SourceFailoverConfig
    }

}
