/// AWS::MediaConnect::FlowSource
///
/// Generated by rain build --pkl-class AWS::MediaConnect::FlowSource
module aws.mediaconnect.flowsource

import "../../cloudformation.pkl"

typealias EncryptionKeyType = "speke"|"static-key"|"srt-password"

typealias EncryptionAlgorithm = "aes128"|"aes192"|"aes256"

/// Information about the encryption of the flow.
open class Encryption {
    RoleArn: String|Mapping
    SecretArn: (String|Mapping)?
    DeviceId: (String|Mapping)?
    KeyType: (EncryptionKeyType|Mapping)?
    ResourceId: (String|Mapping)?
    Url: (String|Mapping)?
    Algorithm: (EncryptionAlgorithm|Mapping)?
    ConstantInitializationVector: (String|Mapping)?
    Region: (String|Mapping)?
}

/// The source configuration for cloud flows receiving a stream from a bridge.
open class GatewayBridgeSource {
    BridgeArn: String|Mapping
    VpcInterfaceAttachment: (VpcInterfaceAttachment)?
}

/// The settings for attaching a VPC interface to an resource.
open class VpcInterfaceAttachment {
    VpcInterfaceName: (String|Mapping)?
}

/// Resource schema for AWS::MediaConnect::FlowSource
open class FlowSource extends cloudformation.Resource {

    Type = "AWS::MediaConnect::FlowSource"


    /// The name of the VPC Interface this Source is configured with.
    hidden VpcInterfaceName: (String|Mapping)?

    /// The ARN of the flow.
    hidden FlowArn: (String|Mapping)?

    /// The ARN of the entitlement that allows you to subscribe to content that comes from another AWS account. The entitlement is set by the content originator and the ARN is generated as part of the originator's flow.
    hidden EntitlementArn: (String|Mapping)?

    /// The name of the source.
    hidden Name: String|Mapping

    /// Source IP or domain name for SRT-caller protocol.
    hidden SourceListenerAddress: (String|Mapping)?

    /// The type of encryption that is used on the content ingested from this source.
    hidden Decryption: (Encryption)?

    /// A description for the source. This value is not used or seen outside of the current AWS Elemental MediaConnect account.
    hidden Description: String|Mapping

    /// The maximum latency in milliseconds. This parameter applies only to RIST-based and Zixi-based streams.
    hidden MaxLatency: (Int|Mapping)?

    /// The minimum latency in milliseconds.
    hidden MinLatency: (Int|Mapping)?

    /// The protocol that is used by the source.
    hidden Protocol: (FlowSourceProtocol|Mapping)?

    /// The stream ID that you want to use for this transport. This parameter applies only to Zixi-based streams.
    hidden StreamId: (String|Mapping)?

    /// The source configuration for cloud flows receiving a stream from a bridge.
    hidden GatewayBridgeSource: (GatewayBridgeSource)?

    /// The IP address that the flow communicates with to initiate connection with the sender for fujitsu-qos protocol.
    hidden SenderIpAddress: (String|Mapping)?

    /// The port that the flow uses to send outbound requests to initiate connection with the sender for fujitsu-qos protocol.
    hidden SenderControlPort: (Int|Mapping)?

    /// Source port for SRT-caller protocol.
    hidden SourceListenerPort: (Int|Mapping)?

    /// The range of IP addresses that should be allowed to contribute content to your source. These IP addresses should be in the form of a Classless Inter-Domain Routing (CIDR) block; for example, 10.0.0.0/16.
    hidden WhitelistCidr: (String|Mapping)?

    /// The port that the flow will be listening on for incoming content.
    hidden IngestPort: (Int|Mapping)?

    /// The smoothing max bitrate for RIST, RTP, and RTP-FEC streams.
    hidden MaxBitrate: (Int|Mapping)?

    Properties {
        ["VpcInterfaceName"] = if (VpcInterfaceName == null) null else VpcInterfaceName
        ["FlowArn"] = if (FlowArn == null) null else FlowArn
        ["EntitlementArn"] = if (EntitlementArn == null) null else EntitlementArn
        ["Name"] = if (Name == null) null else Name
        ["SourceListenerAddress"] = if (SourceListenerAddress == null) null else SourceListenerAddress
        ["Decryption"] = if (Decryption == null) null else Decryption
        ["Description"] = if (Description == null) null else Description
        ["MaxLatency"] = if (MaxLatency == null) null else MaxLatency
        ["MinLatency"] = if (MinLatency == null) null else MinLatency
        ["Protocol"] = if (Protocol == null) null else Protocol
        ["StreamId"] = if (StreamId == null) null else StreamId
        ["GatewayBridgeSource"] = if (GatewayBridgeSource == null) null else GatewayBridgeSource
        ["SenderIpAddress"] = if (SenderIpAddress == null) null else SenderIpAddress
        ["SenderControlPort"] = if (SenderControlPort == null) null else SenderControlPort
        ["SourceListenerPort"] = if (SourceListenerPort == null) null else SourceListenerPort
        ["WhitelistCidr"] = if (WhitelistCidr == null) null else WhitelistCidr
        ["IngestPort"] = if (IngestPort == null) null else IngestPort
        ["MaxBitrate"] = if (MaxBitrate == null) null else MaxBitrate
    }

}


typealias FlowSourceProtocol = "zixi-push"|"rtp-fec"|"rtp"|"rist"|"srt-listener"|"srt-caller"
