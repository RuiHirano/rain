/// AWS::MediaPackage::Channel
///
/// Generated by rain build --pkl-class AWS::MediaPackage::Channel
module aws.mediapackage.channel

import "../../cloudformation.pkl"

/// 
open class LogConfiguration {
    LogGroupName: (String(matches(Regex(#"\A^(\/aws\/MediaPackage\/)[a-zA-Z0-9_-]+\Z"#)))|Mapping)?
}

/// An HTTP Live Streaming (HLS) ingest resource configuration.
open class HlsIngest {
    ingestEndpoints: (Listing<IngestEndpoint>)?
}

/// An endpoint for ingesting source content for a Channel.
open class IngestEndpoint {
    Username: String|Mapping
    Password: String|Mapping
    Url: String|Mapping
    Id: String|Mapping
}

/// 
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Resource schema for AWS::MediaPackage::Channel
open class Channel extends cloudformation.Resource {

    Type = "AWS::MediaPackage::Channel"


    /// The configuration parameters for egress access logging.
    hidden EgressAccessLogs: (LogConfiguration)?

    /// The configuration parameters for egress access logging.
    hidden IngressAccessLogs: (LogConfiguration)?

    /// The ID of the Channel.
    hidden Id: String(matches(Regex(#"\A[0-9a-zA-Z-_]+\Z"#)))|Mapping

    /// A short text description of the Channel.
    hidden Description: (String|Mapping)?

    /// An HTTP Live Streaming (HLS) ingest resource configuration.
    hidden HlsIngest: (HlsIngest)?

    /// A collection of tags associated with a resource
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["EgressAccessLogs"] = if (EgressAccessLogs == null) null else EgressAccessLogs
        ["IngressAccessLogs"] = if (IngressAccessLogs == null) null else IngressAccessLogs
        ["Id"] = if (Id == null) null else Id
        ["Description"] = if (Description == null) null else Description
        ["HlsIngest"] = if (HlsIngest == null) null else HlsIngest
        ["Tags"] = if (Tags == null) null else Tags
    }

}
