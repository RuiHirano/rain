/// AWS::MediaPackage::PackagingConfiguration
///
/// Generated by rain build --pkl-class AWS::MediaPackage::PackagingConfiguration
module aws.mediapackage.packagingconfiguration

import "../../cloudformation.pkl"

typealias DashManifestProfile = "NONE"|"HBBTV_1_5"

typealias DashManifestScteMarkersSource = "SEGMENTS"|"MANIFEST"

typealias DashManifestManifestLayout = "FULL"|"COMPACT"

/// A DASH manifest configuration.
open class PackagingConfigurationDashManifest {
    ManifestName: (PackagingConfigurationManifestName)?
    MinBufferTimeSeconds: (Int|Mapping)?
    Profile: (DashManifestProfile|Mapping)?
    ScteMarkersSource: (DashManifestScteMarkersSource|Mapping)?
    StreamSelection: (PackagingConfigurationStreamSelection)?
    ManifestLayout: (DashManifestManifestLayout|Mapping)?
}

/// An HTTP Live Streaming (HLS) packaging configuration.
open class PackagingConfigurationHlsPackage {
    IncludeDvbSubtitles: (Boolean|Mapping)?
    SegmentDurationSeconds: (PackagingConfigurationSegmentDurationSeconds)?
    UseAudioRenditionGroup: (Boolean|Mapping)?
    Encryption: (PackagingConfigurationHlsEncryption)?
    HlsManifests: Listing<PackagingConfigurationHlsManifest>
}

/// A CMAF encryption configuration.
open class PackagingConfigurationMssEncryption {
    SpekeKeyProvider: PackagingConfigurationSpekeKeyProvider
}

/// A Dynamic Adaptive Streaming over HTTP (DASH) encryption configuration.
open class PackagingConfigurationDashEncryption {
    SpekeKeyProvider: PackagingConfigurationSpekeKeyProvider
}

typealias DashPackagePeriodTriggers = "ADS"

typealias DashPackageSegmentTemplateFormat = "NUMBER_WITH_TIMELINE"|"TIME_WITH_TIMELINE"|"NUMBER_WITH_DURATION"

/// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
open class PackagingConfigurationDashPackage {
    DashManifests: Listing<PackagingConfigurationDashManifest>
    Encryption: (PackagingConfigurationDashEncryption)?
    PeriodTriggers: (Listing<DashPackagePeriodTriggers|Mapping>)?
    SegmentDurationSeconds: (PackagingConfigurationSegmentDurationSeconds)?
    SegmentTemplateFormat: (DashPackageSegmentTemplateFormat|Mapping)?
    IncludeEncoderConfigurationInSegments: (Boolean|Mapping)?
    IncludeIframeOnlyStream: (Boolean|Mapping)?
}

typealias PackagingConfigurationManifestName = String|Mapping


typealias StreamSelectionStreamOrder = "ORIGINAL"|"VIDEO_BITRATE_ASCENDING"|"VIDEO_BITRATE_DESCENDING"

/// A StreamSelection configuration.
open class PackagingConfigurationStreamSelection {
    MaxVideoBitsPerSecond: (Int|Mapping)?
    MinVideoBitsPerSecond: (Int|Mapping)?
    StreamOrder: (StreamSelectionStreamOrder|Mapping)?
}

typealias HlsManifestAdMarkers = "NONE"|"SCTE35_ENHANCED"|"PASSTHROUGH"

/// An HTTP Live Streaming (HLS) manifest configuration.
open class PackagingConfigurationHlsManifest {
    AdMarkers: (HlsManifestAdMarkers|Mapping)?
    IncludeIframeOnlyStream: (Boolean|Mapping)?
    ManifestName: (PackagingConfigurationManifestName)?
    ProgramDateTimeIntervalSeconds: (Int|Mapping)?
    RepeatExtXKey: (Boolean|Mapping)?
    StreamSelection: (PackagingConfigurationStreamSelection)?
}

typealias PackagingConfigurationSegmentDurationSeconds = Int|Mapping


/// A CMAF encryption configuration.
open class PackagingConfigurationCmafEncryption {
    SpekeKeyProvider: PackagingConfigurationSpekeKeyProvider
}

typealias HlsEncryptionEncryptionMethod = "AES_128"|"SAMPLE_AES"

/// An HTTP Live Streaming (HLS) encryption configuration.
open class PackagingConfigurationHlsEncryption {
    ConstantInitializationVector: (String|Mapping)?
    EncryptionMethod: (HlsEncryptionEncryptionMethod|Mapping)?
    SpekeKeyProvider: PackagingConfigurationSpekeKeyProvider
}

/// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
open class PackagingConfigurationMssPackage {
    Encryption: (PackagingConfigurationMssEncryption)?
    MssManifests: Listing<PackagingConfigurationMssManifest>
    SegmentDurationSeconds: (PackagingConfigurationSegmentDurationSeconds)?
}

typealias PackagingConfigurationRoleArn = String|Mapping


/// A CMAF packaging configuration.
open class PackagingConfigurationCmafPackage {
    IncludeEncoderConfigurationInSegments: (Boolean|Mapping)?
    Encryption: (PackagingConfigurationCmafEncryption)?
    HlsManifests: Listing<PackagingConfigurationHlsManifest>
    SegmentDurationSeconds: (PackagingConfigurationSegmentDurationSeconds)?
}

/// 
open class PackagingConfigurationTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// A configuration for accessing an external Secure Packager and Encoder Key Exchange (SPEKE) service that will provide encryption keys.
open class PackagingConfigurationSpekeKeyProvider {
    RoleArn: PackagingConfigurationRoleArn
    SystemIds: Listing<String|Mapping>
    Url: String|Mapping
    EncryptionContractConfiguration: (PackagingConfigurationEncryptionContractConfiguration)?
}

typealias EncryptionContractConfigurationPresetSpeke20Audio = "PRESET-AUDIO-1"|"PRESET-AUDIO-2"|"PRESET-AUDIO-3"|"SHARED"|"UNENCRYPTED"

typealias EncryptionContractConfigurationPresetSpeke20Video = "PRESET-VIDEO-1"|"PRESET-VIDEO-2"|"PRESET-VIDEO-3"|"PRESET-VIDEO-4"|"PRESET-VIDEO-5"|"PRESET-VIDEO-6"|"PRESET-VIDEO-7"|"PRESET-VIDEO-8"|"SHARED"|"UNENCRYPTED"

/// The configuration to use for encrypting one or more content tracks separately for endpoints that use SPEKE 2.0.
open class PackagingConfigurationEncryptionContractConfiguration {
    PresetSpeke20Audio: EncryptionContractConfigurationPresetSpeke20Audio|Mapping
    PresetSpeke20Video: EncryptionContractConfigurationPresetSpeke20Video|Mapping
}

/// A Microsoft Smooth Streaming (MSS) manifest configuration.
open class PackagingConfigurationMssManifest {
    ManifestName: (PackagingConfigurationManifestName)?
    StreamSelection: (PackagingConfigurationStreamSelection)?
}

/// Resource schema for AWS::MediaPackage::PackagingConfiguration
open class PackagingConfiguration extends cloudformation.Resource {

    Type = "AWS::MediaPackage::PackagingConfiguration"


    /// A Dynamic Adaptive Streaming over HTTP (DASH) packaging configuration.
    hidden DashPackage: (PackagingConfigurationDashPackage)?

    /// An HTTP Live Streaming (HLS) packaging configuration.
    hidden HlsPackage: (PackagingConfigurationHlsPackage)?

    /// A Microsoft Smooth Streaming (MSS) PackagingConfiguration.
    hidden MssPackage: (PackagingConfigurationMssPackage)?

    /// A collection of tags associated with a resource
    hidden Tags: (Listing<PackagingConfigurationTag>)?

    /// The ID of the PackagingConfiguration.
    hidden Id: String|Mapping

    /// The ID of a PackagingGroup.
    hidden PackagingGroupId: String|Mapping

    /// A CMAF packaging configuration.
    hidden CmafPackage: (PackagingConfigurationCmafPackage)?

    Properties {
        ["DashPackage"] = if (DashPackage == null) null else DashPackage
        ["HlsPackage"] = if (HlsPackage == null) null else HlsPackage
        ["MssPackage"] = if (MssPackage == null) null else MssPackage
        ["Tags"] = if (Tags == null) null else Tags
        ["Id"] = if (Id == null) null else Id
        ["PackagingGroupId"] = if (PackagingGroupId == null) null else PackagingGroupId
        ["CmafPackage"] = if (CmafPackage == null) null else CmafPackage
    }

}
