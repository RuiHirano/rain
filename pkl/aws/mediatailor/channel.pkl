/// AWS::MediaTailor::Channel
///
/// Generated by rain build --pkl-class AWS::MediaTailor::Channel
module aws.mediatailor.channel

import "../../cloudformation.pkl"

/// 
open class ChannelTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// <p>HLS playlist configuration parameters.</p>
open class ChannelHlsPlaylistSettings {
    ManifestWindowSeconds: (Number|Mapping)?
    AdMarkupType: (Listing<ChannelAdMarkupType>)?
}

typealias ChannelAdMarkupType = String|Mapping


typealias ChannelTier = String|Mapping


/// <p>The configuration for time-shifted viewing.</p>
open class ChannelTimeShiftConfiguration {
    MaxTimeDelaySeconds: Number|Mapping
}

typealias ChannelLogType = String|Mapping


typealias ChannelPlaybackMode = String|Mapping


/// <p>The output configuration for this channel.</p>
open class ChannelRequestOutputItem {
    HlsPlaylistSettings: (ChannelHlsPlaylistSettings)?
    ManifestName: String|Mapping
    SourceGroup: String|Mapping
    DashPlaylistSettings: (ChannelDashPlaylistSettings)?
}

/// <p>Slate VOD source configuration.</p>
open class ChannelSlateSource {
    SourceLocationName: (String|Mapping)?
    VodSourceName: (String|Mapping)?
}

/// <p>Dash manifest configuration parameters.</p>
open class ChannelDashPlaylistSettings {
    ManifestWindowSeconds: (Number|Mapping)?
    MinBufferTimeSeconds: (Number|Mapping)?
    MinUpdatePeriodSeconds: (Number|Mapping)?
    SuggestedPresentationDelaySeconds: (Number|Mapping)?
}

/// <p>The log configuration for the channel.</p>
open class ChannelLogConfigurationForChannel {
    LogTypes: (Listing<ChannelLogType>)?
}

/// Definition of AWS::MediaTailor::Channel Resource Type
open class Channel extends cloudformation.Resource {

    Type = "AWS::MediaTailor::Channel"


    /// <p>The channel's output properties.</p>
    hidden Outputs: Listing<ChannelRequestOutputItem>

    /// 
    hidden PlaybackMode: ChannelPlaybackMode

    /// 
    hidden Tier: (ChannelTier)?

    /// 
    hidden ChannelName: String|Mapping

    /// 
    hidden FillerSlate: (ChannelSlateSource)?

    /// 
    hidden LogConfiguration: (ChannelLogConfigurationForChannel)?

    /// The tags to assign to the channel.
    hidden Tags: (Listing<ChannelTag>)?

    /// 
    hidden TimeShiftConfiguration: (ChannelTimeShiftConfiguration)?

    Properties {
        ["Outputs"] = if (Outputs == null) null else Outputs
        ["PlaybackMode"] = if (PlaybackMode == null) null else PlaybackMode
        ["Tier"] = if (Tier == null) null else Tier
        ["ChannelName"] = if (ChannelName == null) null else ChannelName
        ["FillerSlate"] = if (FillerSlate == null) null else FillerSlate
        ["LogConfiguration"] = if (LogConfiguration == null) null else LogConfiguration
        ["Tags"] = if (Tags == null) null else Tags
        ["TimeShiftConfiguration"] = if (TimeShiftConfiguration == null) null else TimeShiftConfiguration
    }

}
