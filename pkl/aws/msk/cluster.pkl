/// AWS::MSK::Cluster
///
/// Generated by rain build --pkl-class AWS::MSK::Cluster
module aws.msk.cluster

import "../../cloudformation.pkl"

/// 
open class ClusterNodeExporter {
    EnabledInBroker: Boolean|Mapping
}

/// 
open class ClusterBrokerLogs {
    Firehose: (ClusterFirehose)?
    S3: (ClusterS3)?
    CloudWatchLogs: (ClusterCloudWatchLogs)?
}

/// 
open class ClusterVpcConnectivityClientAuthentication {
    Tls: (ClusterVpcConnectivityTls)?
    Sasl: (ClusterVpcConnectivitySasl)?
}

/// 
open class ClusterTls {
    CertificateAuthorityArnList: (Listing<String|Mapping>)?
    Enabled: (Boolean|Mapping)?
}

/// 
open class ClusterVpcConnectivityScram {
    Enabled: Boolean|Mapping
}

/// 
open class ClusterVpcConnectivityIam {
    Enabled: Boolean|Mapping
}

/// 
open class ClusterBrokerNodeGroupInfo {
    StorageInfo: (ClusterStorageInfo)?
    ConnectivityInfo: (ClusterConnectivityInfo)?
    SecurityGroups: (Listing<String|Mapping>)?
    BrokerAZDistribution: (String|Mapping)?
    ClientSubnets: Listing<String|Mapping>
    InstanceType: String|Mapping
}

/// 
open class ClusterEBSStorageInfo {
    VolumeSize: (Int|Mapping)?
    ProvisionedThroughput: (ClusterProvisionedThroughput)?
}

/// 
open class ClusterProvisionedThroughput {
    Enabled: (Boolean|Mapping)?
    VolumeThroughput: (Int|Mapping)?
}

/// 
open class ClusterVpcConnectivitySasl {
    Scram: (ClusterVpcConnectivityScram)?
    Iam: (ClusterVpcConnectivityIam)?
}

/// 
open class ClusterEncryptionInfo {
    EncryptionAtRest: (ClusterEncryptionAtRest)?
    EncryptionInTransit: (ClusterEncryptionInTransit)?
}

/// 
open class ClusterConfigurationInfo {
    Revision: Int|Mapping
    Arn: String|Mapping
}

/// 
open class ClusterLoggingInfo {
    BrokerLogs: ClusterBrokerLogs
}

/// 
open class ClusterUnauthenticated {
    Enabled: Boolean|Mapping
}

/// 
open class ClusterFirehose {
    Enabled: Boolean|Mapping
    DeliveryStream: (String|Mapping)?
}

/// 
open class ClusterCloudWatchLogs {
    LogGroup: (String|Mapping)?
    Enabled: Boolean|Mapping
}

/// 
open class ClusterPublicAccess {
    Type: (String|Mapping)?
}

typealias EncryptionInTransitClientBroker = "TLS"|"TLS_PLAINTEXT"|"PLAINTEXT"

/// 
open class ClusterEncryptionInTransit {
    InCluster: (Boolean|Mapping)?
    ClientBroker: (EncryptionInTransitClientBroker|Mapping)?
}

/// 
open class ClusterConnectivityInfo {
    PublicAccess: (ClusterPublicAccess)?
    VpcConnectivity: (ClusterVpcConnectivity)?
}

/// 
open class ClusterSasl {
    Scram: (ClusterScram)?
    Iam: (ClusterIam)?
}

/// 
open class ClusterClientAuthentication {
    Tls: (ClusterTls)?
    Sasl: (ClusterSasl)?
    Unauthenticated: (ClusterUnauthenticated)?
}

/// 
open class ClusterStorageInfo {
    EBSStorageInfo: (ClusterEBSStorageInfo)?
}

/// 
open class ClusterOpenMonitoring {
    Prometheus: ClusterPrometheus
}

/// 
open class ClusterEncryptionAtRest {
    DataVolumeKMSKeyId: String|Mapping
}

/// 
open class ClusterIam {
    Enabled: Boolean|Mapping
}

/// 
open class ClusterVpcConnectivityTls {
    Enabled: Boolean|Mapping
}

/// 
open class ClusterScram {
    Enabled: Boolean|Mapping
}

/// 
open class ClusterVpcConnectivity {
    ClientAuthentication: (ClusterVpcConnectivityClientAuthentication)?
}

/// 
open class ClusterS3 {
    Enabled: Boolean|Mapping
    Prefix: (String|Mapping)?
    Bucket: (String|Mapping)?
}

/// 
open class ClusterPrometheus {
    JmxExporter: (ClusterJmxExporter)?
    NodeExporter: (ClusterNodeExporter)?
}

/// 
open class ClusterJmxExporter {
    EnabledInBroker: Boolean|Mapping
}

/// Resource Type definition for AWS::MSK::Cluster
open class Cluster extends cloudformation.Resource {

    Type = "AWS::MSK::Cluster"


    /// 
    hidden StorageMode: (ClusterStorageMode|Mapping)?

    /// 
    hidden NumberOfBrokerNodes: Int|Mapping

    /// 
    hidden ClientAuthentication: (ClusterClientAuthentication)?

    /// A key-value pair to associate with a resource.
    hidden Tags: (ClusterClusterTags)?

    /// 
    hidden ConfigurationInfo: (ClusterConfigurationInfo)?

    /// 
    hidden BrokerNodeGroupInfo: ClusterBrokerNodeGroupInfo

    /// 
    hidden EnhancedMonitoring: (ClusterEnhancedMonitoring|Mapping)?

    /// 
    hidden KafkaVersion: String|Mapping

    /// 
    hidden EncryptionInfo: (ClusterEncryptionInfo)?

    /// 
    hidden OpenMonitoring: (ClusterOpenMonitoring)?

    /// 
    hidden LoggingInfo: (ClusterLoggingInfo)?

    /// 
    hidden ClusterName: String|Mapping

    /// The current version of the MSK cluster
    hidden CurrentVersion: (String|Mapping)?

    Properties {
        ["StorageMode"] = if (StorageMode == null) null else StorageMode
        ["NumberOfBrokerNodes"] = if (NumberOfBrokerNodes == null) null else NumberOfBrokerNodes
        ["ClientAuthentication"] = if (ClientAuthentication == null) null else ClientAuthentication
        ["Tags"] = if (Tags == null) null else Tags
        ["ConfigurationInfo"] = if (ConfigurationInfo == null) null else ConfigurationInfo
        ["BrokerNodeGroupInfo"] = if (BrokerNodeGroupInfo == null) null else BrokerNodeGroupInfo
        ["EnhancedMonitoring"] = if (EnhancedMonitoring == null) null else EnhancedMonitoring
        ["KafkaVersion"] = if (KafkaVersion == null) null else KafkaVersion
        ["EncryptionInfo"] = if (EncryptionInfo == null) null else EncryptionInfo
        ["OpenMonitoring"] = if (OpenMonitoring == null) null else OpenMonitoring
        ["LoggingInfo"] = if (LoggingInfo == null) null else LoggingInfo
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["CurrentVersion"] = if (CurrentVersion == null) null else CurrentVersion
    }

}


typealias ClusterStorageMode = "LOCAL"|"TIERED"

typealias ClusterClusterTags = Mapping<String, Any>

typealias ClusterEnhancedMonitoring = "DEFAULT"|"PER_BROKER"|"PER_TOPIC_PER_BROKER"|"PER_TOPIC_PER_PARTITION"
