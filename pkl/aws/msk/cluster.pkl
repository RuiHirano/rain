/// AWS::MSK::Cluster
///
/// Generated by rain build --pkl-class AWS::MSK::Cluster
module aws.msk.cluster

import "../../cloudformation.pkl"

/// 
open class Iam {
    Enabled: Boolean|Mapping
}

/// 
open class VpcConnectivityClientAuthentication {
    Tls: (VpcConnectivityTls)?
    Sasl: (VpcConnectivitySasl)?
}

/// 
open class BrokerNodeGroupInfo {
    InstanceType: String|Mapping
    StorageInfo: (StorageInfo)?
    ConnectivityInfo: (ConnectivityInfo)?
    SecurityGroups: (Listing<String|Mapping>)?
    BrokerAZDistribution: (String|Mapping)?
    ClientSubnets: Listing<String|Mapping>
}

/// 
open class Tls {
    CertificateAuthorityArnList: (Listing<String|Mapping>)?
    Enabled: (Boolean|Mapping)?
}

/// 
open class EBSStorageInfo {
    VolumeSize: (Int|Mapping)?
    ProvisionedThroughput: (ProvisionedThroughput)?
}

/// 
open class VpcConnectivity {
    ClientAuthentication: (VpcConnectivityClientAuthentication)?
}

/// 
open class Scram {
    Enabled: Boolean|Mapping
}

/// 
open class LoggingInfo {
    BrokerLogs: BrokerLogs
}

/// 
open class Prometheus {
    JmxExporter: (JmxExporter)?
    NodeExporter: (NodeExporter)?
}

/// 
open class CloudWatchLogs {
    LogGroup: (String|Mapping)?
    Enabled: Boolean|Mapping
}

/// 
open class StorageInfo {
    EBSStorageInfo: (EBSStorageInfo)?
}

/// 
open class ConnectivityInfo {
    PublicAccess: (PublicAccess)?
    VpcConnectivity: (VpcConnectivity)?
}

/// 
open class VpcConnectivityScram {
    Enabled: Boolean|Mapping
}

/// 
open class EncryptionInfo {
    EncryptionAtRest: (EncryptionAtRest)?
    EncryptionInTransit: (EncryptionInTransit)?
}

/// 
open class Firehose {
    Enabled: Boolean|Mapping
    DeliveryStream: (String|Mapping)?
}

/// 
open class VpcConnectivityTls {
    Enabled: Boolean|Mapping
}

/// 
open class VpcConnectivityIam {
    Enabled: Boolean|Mapping
}

/// 
open class Unauthenticated {
    Enabled: Boolean|Mapping
}

/// 
open class ClientAuthentication {
    Tls: (Tls)?
    Sasl: (Sasl)?
    Unauthenticated: (Unauthenticated)?
}

/// 
open class S3 {
    Enabled: Boolean|Mapping
    Prefix: (String|Mapping)?
    Bucket: (String|Mapping)?
}

/// 
open class JmxExporter {
    EnabledInBroker: Boolean|Mapping
}

/// 
open class VpcConnectivitySasl {
    Scram: (VpcConnectivityScram)?
    Iam: (VpcConnectivityIam)?
}

/// 
open class Sasl {
    Scram: (Scram)?
    Iam: (Iam)?
}

/// 
open class NodeExporter {
    EnabledInBroker: Boolean|Mapping
}

/// 
open class ConfigurationInfo {
    Revision: Int|Mapping
    Arn: String|Mapping
}

/// 
open class ProvisionedThroughput {
    VolumeThroughput: (Int|Mapping)?
    Enabled: (Boolean|Mapping)?
}

/// 
open class PublicAccess {
    Type: (String|Mapping)?
}

/// 
open class EncryptionAtRest {
    DataVolumeKMSKeyId: String|Mapping
}

typealias EncryptionInTransitClientBroker = "TLS"|"TLS_PLAINTEXT"|"PLAINTEXT"

/// 
open class EncryptionInTransit {
    InCluster: (Boolean|Mapping)?
    ClientBroker: (EncryptionInTransitClientBroker|Mapping)?
}

/// 
open class BrokerLogs {
    S3: (S3)?
    CloudWatchLogs: (CloudWatchLogs)?
    Firehose: (Firehose)?
}

/// 
open class OpenMonitoring {
    Prometheus: Prometheus
}

/// Resource Type definition for AWS::MSK::Cluster
open class Cluster extends cloudformation.Resource {

    Type = "AWS::MSK::Cluster"


    /// 
    hidden NumberOfBrokerNodes: Int|Mapping

    /// 
    hidden KafkaVersion: String|Mapping

    /// 
    hidden EncryptionInfo: (EncryptionInfo)?

    /// 
    hidden BrokerNodeGroupInfo: BrokerNodeGroupInfo

    /// The current version of the MSK cluster
    hidden CurrentVersion: (String|Mapping)?

    /// 
    hidden ClientAuthentication: (ClientAuthentication)?

    /// 
    hidden LoggingInfo: (LoggingInfo)?

    /// A key-value pair to associate with a resource.
    hidden Tags: (Dynamic)?

    /// 
    hidden EnhancedMonitoring: (ClusterEnhancedMonitoring|Mapping)?

    /// 
    hidden OpenMonitoring: (OpenMonitoring)?

    /// 
    hidden ClusterName: String|Mapping

    /// 
    hidden ConfigurationInfo: (ConfigurationInfo)?

    /// 
    hidden StorageMode: (ClusterStorageMode|Mapping)?

    Properties {
        ["NumberOfBrokerNodes"] = if (NumberOfBrokerNodes == null) null else NumberOfBrokerNodes
        ["KafkaVersion"] = if (KafkaVersion == null) null else KafkaVersion
        ["EncryptionInfo"] = if (EncryptionInfo == null) null else EncryptionInfo
        ["BrokerNodeGroupInfo"] = if (BrokerNodeGroupInfo == null) null else BrokerNodeGroupInfo
        ["CurrentVersion"] = if (CurrentVersion == null) null else CurrentVersion
        ["ClientAuthentication"] = if (ClientAuthentication == null) null else ClientAuthentication
        ["LoggingInfo"] = if (LoggingInfo == null) null else LoggingInfo
        ["Tags"] = if (Tags == null) null else Tags
        ["EnhancedMonitoring"] = if (EnhancedMonitoring == null) null else EnhancedMonitoring
        ["OpenMonitoring"] = if (OpenMonitoring == null) null else OpenMonitoring
        ["ClusterName"] = if (ClusterName == null) null else ClusterName
        ["ConfigurationInfo"] = if (ConfigurationInfo == null) null else ConfigurationInfo
        ["StorageMode"] = if (StorageMode == null) null else StorageMode
    }

}


typealias ClusterEnhancedMonitoring = "DEFAULT"|"PER_BROKER"|"PER_TOPIC_PER_BROKER"|"PER_TOPIC_PER_PARTITION"

typealias ClusterStorageMode = "LOCAL"|"TIERED"
