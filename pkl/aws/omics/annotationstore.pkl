/// AWS::Omics::AnnotationStore
///
/// Generated by rain build --pkl-class AWS::Omics::AnnotationStore
module aws.omics.annotationstore

import "../../cloudformation.pkl"

/// 
open class FormatToHeaderKey {
}

/// 
open class SseConfig {
    Type: EncryptionType
    KeyArn: (String(matches(Regex(#"arn:([^:
]*):([^:
]*):([^:
]*):([0-9]{12}):([^:
]*)"#)))|Mapping)?
}

/// 
open class StoreStatus {
}

/// 
open class AnnotationType {
}

/// 
open class FormatToHeader {
}

/// 
open class TagMap {
}

/// 
open class StoreOptions {
}

/// 
open class EncryptionType {
}

/// 
open class ReferenceItem {
    ReferenceArn: String(matches(Regex(#"^arn:.+$"#)))|Mapping
}

/// 
open class SchemaValueType {
}

/// 
open class StoreFormat {
}

/// 
open class SchemaItem {
}

/// 
open class TsvStoreOptions {
    AnnotationType: (AnnotationType)?
    FormatToHeader: (FormatToHeader)?
    Schema: (Listing<SchemaItem>)?
}

/// Definition of AWS::Omics::AnnotationStore Resource Type
open class AnnotationStore extends cloudformation.Resource {

    Type = "AWS::Omics::AnnotationStore"


    /// 
    hidden Tags: (TagMap)?

    /// 
    hidden Name: String(matches(Regex(#"^([a-z]){1}([a-z0-9_]){2,254}"#)))|Mapping

    /// 
    hidden StoreOptions: (StoreOptions)?

    /// 
    hidden Description: (String|Mapping)?

    /// 
    hidden SseConfig: (SseConfig)?

    /// 
    hidden StoreFormat: StoreFormat

    /// 
    hidden Reference: (ReferenceItem)?

    Properties {
        ["Tags"] = if (Tags == null) null else Tags
        ["Name"] = if (Name == null) null else Name
        ["StoreOptions"] = if (StoreOptions == null) null else StoreOptions
        ["Description"] = if (Description == null) null else Description
        ["SseConfig"] = if (SseConfig == null) null else SseConfig
        ["StoreFormat"] = if (StoreFormat == null) null else StoreFormat
        ["Reference"] = if (Reference == null) null else Reference
    }

}
