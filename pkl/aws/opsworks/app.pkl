/// AWS::OpsWorks::App
///
/// Generated by rain build --pkl-class AWS::OpsWorks::App
module aws.opsworks.app

import "../../cloudformation.pkl"

/// 
open class AppEnvironmentVariable {
    Value: String|Mapping
    Key: String|Mapping
    Secure: (Boolean|Mapping)?
}

/// 
open class AppDataSource {
    Arn: (String|Mapping)?
    DatabaseName: (String|Mapping)?
    Type: (String|Mapping)?
}

/// 
open class AppSslConfiguration {
    Certificate: (String|Mapping)?
    Chain: (String|Mapping)?
    PrivateKey: (String|Mapping)?
}

/// 
open class AppSource {
    Password: (String|Mapping)?
    Revision: (String|Mapping)?
    SshKey: (String|Mapping)?
    Type: (String|Mapping)?
    Url: (String|Mapping)?
    Username: (String|Mapping)?
}

/// Resource Type definition for AWS::OpsWorks::App
open class App extends cloudformation.Resource {

    Type = "AWS::OpsWorks::App"


    /// 
    hidden Name: String|Mapping

    /// 
    hidden Shortname: (String|Mapping)?

    /// 
    hidden SslConfiguration: (AppSslConfiguration)?

    /// 
    hidden StackId: String|Mapping

    /// 
    hidden AppSource: (AppSource)?

    /// 
    hidden Domains: (Listing<String|Mapping>)?

    /// 
    hidden EnableSsl: (Boolean|Mapping)?

    /// 
    hidden Attributes: (AppAppAttributes)?

    /// 
    hidden TypeProperty: String|Mapping

    /// 
    hidden DataSources: (Listing<AppDataSource>)?

    /// 
    hidden Description: (String|Mapping)?

    /// 
    hidden Environment: (Listing<AppEnvironmentVariable>)?

    Properties {
        ["Name"] = if (Name == null) null else Name
        ["Shortname"] = if (Shortname == null) null else Shortname
        ["SslConfiguration"] = if (SslConfiguration == null) null else SslConfiguration
        ["StackId"] = if (StackId == null) null else StackId
        ["AppSource"] = if (AppSource == null) null else AppSource
        ["Domains"] = if (Domains == null) null else Domains
        ["EnableSsl"] = if (EnableSsl == null) null else EnableSsl
        ["Attributes"] = if (Attributes == null) null else Attributes
        ["Type"] = if (TypeProperty == null) null else TypeProperty
        ["DataSources"] = if (DataSources == null) null else DataSources
        ["Description"] = if (Description == null) null else Description
        ["Environment"] = if (Environment == null) null else Environment
    }

}


typealias AppAppAttributes = Mapping<String, Any>
