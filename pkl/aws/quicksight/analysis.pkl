/// AWS::QuickSight::Analysis
///
/// Generated by rain build --pkl-class AWS::QuickSight::Analysis
module aws.quicksight.analysis

import "../../cloudformation.pkl"

/// 
open class AnalysisTotalOptions {
    TotalsVisibility: (AnalysisVisibility)?
    TotalAggregationOptions: (Listing<AnalysisTotalAggregationOption>)?
    Placement: (AnalysisTableTotalsPlacement)?
    ScrollStatus: (AnalysisTableTotalsScrollStatus)?
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (AnalysisTableCellStyle)?
}

typealias AnalysisRadarChartAxesRangeScale = String|Mapping


typealias AnalysisSpecialValue = String|Mapping


/// 
open class AnalysisFieldSortOptions {
    FieldSort: (AnalysisFieldSort)?
    ColumnSort: (AnalysisColumnSort)?
}

/// 
open class AnalysisTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class AnalysisSliderControlDisplayOptions {
    TitleOptions: (AnalysisLabelOptions)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
}

/// 
open class AnalysisNumericEqualityFilter {
    SelectAllOptions: (AnalysisNumericFilterSelectAllOptions)?
    MatchOperator: AnalysisNumericEqualityMatchOperator
    AggregationFunction: (AnalysisAggregationFunction)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: AnalysisFilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: AnalysisColumnIdentifier
    Value: (Number|Mapping)?
}

/// 
open class AnalysisStringParameterDeclaration {
    ParameterValueType: AnalysisParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (AnalysisStringDefaultValues)?
    ValueWhenUnset: (AnalysisStringValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<AnalysisMappedDataSetParameter>)?
}

/// 
open class AnalysisWaterfallChartAggregatedFieldWells {
    Values: (Listing<AnalysisMeasureField>)?
    Breakdowns: (Listing<AnalysisDimensionField>)?
    Categories: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisHeatMapFieldWells {
    HeatMapAggregatedFieldWells: (AnalysisHeatMapAggregatedFieldWells)?
}

typealias AnalysisSectionPageBreakStatus = String|Mapping


/// 
open class AnalysisContributionAnalysisDefault {
    MeasureFieldId: String|Mapping
    ContributorDimensions: Listing<AnalysisColumnIdentifier>
}

/// 
open class AnalysisSankeyDiagramFieldWells {
    SankeyDiagramAggregatedFieldWells: (AnalysisSankeyDiagramAggregatedFieldWells)?
}

/// 
open class AnalysisConditionalFormattingIcon {
    IconSet: (AnalysisConditionalFormattingIconSet)?
    CustomCondition: (AnalysisConditionalFormattingCustomIconCondition)?
}

/// 
open class AnalysisGeospatialMapFieldWells {
    GeospatialMapAggregatedFieldWells: (AnalysisGeospatialMapAggregatedFieldWells)?
}

/// 
open class AnalysisArcAxisConfiguration {
    Range: (AnalysisArcAxisDisplayRange)?
    ReserveRange: (Number|Mapping)?
}

/// 
open class AnalysisTableFieldLinkContentConfiguration {
    CustomTextContent: (AnalysisTableFieldCustomTextContent)?
    CustomIconContent: (AnalysisTableFieldCustomIconContent)?
}

/// 
open class AnalysisTimeBasedForecastProperties {
    PredictionInterval: (Number|Mapping)?
    Seasonality: (Number|Mapping)?
    PeriodsForward: (Number|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
}

/// 
open class AnalysisNegativeValueConfiguration {
    DisplayMode: AnalysisNegativeValueDisplayMode
}

typealias AnalysisGeospatialSelectedPointStyle = String|Mapping


/// 
open class AnalysisTotalAggregationFunction {
    SimpleTotalAggregationFunction: (AnalysisSimpleTotalAggregationFunction)?
}

typealias AnalysisResizeOption = String|Mapping


/// 
open class AnalysisThousandSeparatorOptions {
    Symbol: (AnalysisNumericSeparatorSymbol)?
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisDefaultGridLayoutConfiguration {
    CanvasSizeOptions: AnalysisGridLayoutCanvasSizeOptions
}

/// 
open class AnalysisTablePaginatedReportOptions {
    OverflowColumnHeaderVisibility: (AnalysisVisibility)?
    VerticalOverflowVisibility: (AnalysisVisibility)?
}

typealias AnalysisSheetContentType = String|Mapping


typealias AnalysisBarsArrangement = String|Mapping


/// 
open class AnalysisKPIFieldWells {
    Values: (Listing<AnalysisMeasureField>)?
    TargetValues: (Listing<AnalysisMeasureField>)?
    TrendGroups: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisDateAxisOptions {
    MissingDateVisibility: (AnalysisVisibility)?
}

/// 
open class AnalysisMappedDataSetParameter {
    DataSetIdentifier: String|Mapping
    DataSetParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class AnalysisAxisTickLabelOptions {
    LabelOptions: (AnalysisLabelOptions)?
    RotationAngle: (Number|Mapping)?
}

typealias AnalysisKPIVisualStandardLayoutType = String|Mapping


/// 
open class AnalysisGridLayoutScreenCanvasSizeOptions {
    ResizeOption: AnalysisResizeOption
    OptimizedViewPortWidth: (String|Mapping)?
}

typealias AnalysisPivotTableRowsLayout = String|Mapping


/// 
open class AnalysisParameterDropDownControl {
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (AnalysisDropDownControlDisplayOptions)?
    Type: (AnalysisSheetControlListType)?
    SelectableValues: (AnalysisParameterSelectableValues)?
    CascadingControlConfiguration: (AnalysisCascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
}

/// 
open class AnalysisColorsConfiguration {
    CustomColors: (Listing<AnalysisCustomColor>)?
}

typealias AnalysisColumnRole = String|Mapping


/// 
open class AnalysisDateTimeParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<String|Mapping>
}

typealias AnalysisPivotTableSubtotalLevel = String|Mapping


/// 
open class AnalysisAggregationFunction {
    NumericalAggregationFunction: (AnalysisNumericalAggregationFunction)?
    CategoricalAggregationFunction: (AnalysisCategoricalAggregationFunction)?
    DateAggregationFunction: (AnalysisDateAggregationFunction)?
    AttributeAggregationFunction: (AnalysisAttributeAggregationFunction)?
}

typealias AnalysisTableOrientation = String|Mapping


/// 
open class AnalysisTopBottomMoversComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (AnalysisDimensionField)?
    Category: (AnalysisDimensionField)?
    Value: (AnalysisMeasureField)?
    MoverSize: (Number|Mapping)?
    SortOrder: (AnalysisTopBottomSortOrder)?
    Type: AnalysisTopBottomComputationType
}

/// 
open class AnalysisTimeRangeFilter {
    IncludeMaximum: (Boolean|Mapping)?
    RangeMaximumValue: (AnalysisTimeRangeFilterValue)?
    NullOption: AnalysisFilterNullOption
    TimeGranularity: (AnalysisTimeGranularity)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: AnalysisColumnIdentifier
    IncludeMinimum: (Boolean|Mapping)?
    RangeMinimumValue: (AnalysisTimeRangeFilterValue)?
    ExcludePeriodConfiguration: (AnalysisExcludePeriodConfiguration)?
}

/// 
open class AnalysisFunnelChartSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimit: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisLongFormatText {
    PlainText: (String|Mapping)?
    RichText: (String|Mapping)?
}

/// 
open class AnalysisComparisonFormatConfiguration {
    NumberDisplayFormatConfiguration: (AnalysisNumberDisplayFormatConfiguration)?
    PercentageDisplayFormatConfiguration: (AnalysisPercentageDisplayFormatConfiguration)?
}

/// 
open class AnalysisAxisLinearScale {
    StepCount: (Number|Mapping)?
    StepSize: (Number|Mapping)?
}

typealias AnalysisURLTargetConfiguration = String|Mapping


/// 
open class AnalysisAttributeAggregationFunction {
    SimpleAttributeAggregation: (AnalysisSimpleAttributeAggregationFunction)?
    ValueForMultipleValues: (String|Mapping)?
}

/// 
open class AnalysisLineChartSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimitConfiguration: (AnalysisItemsLimitConfiguration)?
    ColorItemsLimitConfiguration: (AnalysisItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<AnalysisFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisWordCloudFieldWells {
    WordCloudAggregatedFieldWells: (AnalysisWordCloudAggregatedFieldWells)?
}

typealias AnalysisNumericFilterSelectAllOptions = String|Mapping


/// 
open class AnalysisHeatMapVisual {
    ChartConfiguration: (AnalysisHeatMapConfiguration)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
}

/// 
open class AnalysisListControlSelectAllOptions {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisGaugeChartConditionalFormattingOption {
    PrimaryValue: (AnalysisGaugeChartPrimaryValueConditionalFormatting)?
    Arc: (AnalysisGaugeChartArcConditionalFormatting)?
}

/// 
open class AnalysisGradientStop {
    DataValue: (Number|Mapping)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    GradientOffset: Number|Mapping
}

typealias AnalysisArcThicknessOptions = String|Mapping


typealias AnalysisMissingDataTreatmentOption = String|Mapping


/// 
open class AnalysisPivotTableFieldOption {
    FieldId: String|Mapping
    CustomLabel: (String|Mapping)?
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisRollingDateConfiguration {
    DataSetIdentifier: (String|Mapping)?
    Expression: String|Mapping
}

/// 
open class AnalysisPivotTableTotalOptions {
    RowSubtotalOptions: (AnalysisSubtotalOptions)?
    ColumnSubtotalOptions: (AnalysisSubtotalOptions)?
    RowTotalOptions: (AnalysisPivotTotalOptions)?
    ColumnTotalOptions: (AnalysisPivotTotalOptions)?
}

typealias AnalysisLegendPosition = String|Mapping


typealias AnalysisTableTotalsScrollStatus = String|Mapping


/// 
open class AnalysisLayoutConfiguration {
    GridLayout: (AnalysisGridLayoutConfiguration)?
    FreeFormLayout: (AnalysisFreeFormLayoutConfiguration)?
    SectionBasedLayout: (AnalysisSectionBasedLayoutConfiguration)?
}

/// 
open class AnalysisGaugeChartPrimaryValueConditionalFormatting {
    TextColor: (AnalysisConditionalFormattingColor)?
    Icon: (AnalysisConditionalFormattingIcon)?
}

typealias AnalysisTableFieldIconSetType = String|Mapping


/// 
open class AnalysisVisual {
    GeospatialMapVisual: (AnalysisGeospatialMapVisual)?
    EmptyVisual: (AnalysisEmptyVisual)?
    RadarChartVisual: (AnalysisRadarChartVisual)?
    TableVisual: (AnalysisTableVisual)?
    KPIVisual: (AnalysisKPIVisual)?
    HeatMapVisual: (AnalysisHeatMapVisual)?
    TreeMapVisual: (AnalysisTreeMapVisual)?
    ScatterPlotVisual: (AnalysisScatterPlotVisual)?
    CustomContentVisual: (AnalysisCustomContentVisual)?
    PivotTableVisual: (AnalysisPivotTableVisual)?
    LineChartVisual: (AnalysisLineChartVisual)?
    ComboChartVisual: (AnalysisComboChartVisual)?
    WordCloudVisual: (AnalysisWordCloudVisual)?
    SankeyDiagramVisual: (AnalysisSankeyDiagramVisual)?
    BarChartVisual: (AnalysisBarChartVisual)?
    PieChartVisual: (AnalysisPieChartVisual)?
    GaugeChartVisual: (AnalysisGaugeChartVisual)?
    FilledMapVisual: (AnalysisFilledMapVisual)?
    FunnelChartVisual: (AnalysisFunnelChartVisual)?
    BoxPlotVisual: (AnalysisBoxPlotVisual)?
    WaterfallVisual: (AnalysisWaterfallVisual)?
    HistogramVisual: (AnalysisHistogramVisual)?
    InsightVisual: (AnalysisInsightVisual)?
}

/// 
open class AnalysisAnalysisSourceTemplate {
    DataSetReferences: Listing<AnalysisDataSetReference>
    Arn: String|Mapping
}

/// 
open class AnalysisParameters {
    StringParameters: (Listing<AnalysisStringParameter>)?
    IntegerParameters: (Listing<AnalysisIntegerParameter>)?
    DecimalParameters: (Listing<AnalysisDecimalParameter>)?
    DateTimeParameters: (Listing<AnalysisDateTimeParameter>)?
}

/// 
open class AnalysisSectionLayoutConfiguration {
    FreeFormLayout: AnalysisFreeFormSectionLayoutConfiguration
}

/// 
open class AnalysisBoxPlotChartConfiguration {
    PrimaryYAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    Legend: (AnalysisLegendOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    ReferenceLines: (Listing<AnalysisReferenceLine>)?
    VisualPalette: (AnalysisVisualPalette)?
    BoxPlotOptions: (AnalysisBoxPlotOptions)?
    CategoryAxis: (AnalysisAxisDisplayOptions)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
    PrimaryYAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    FieldWells: (AnalysisBoxPlotFieldWells)?
    SortConfiguration: (AnalysisBoxPlotSortConfiguration)?
}

typealias AnalysisResourceStatus = String|Mapping


/// 
open class AnalysisFilledMapConditionalFormattingOption {
    Shape: AnalysisFilledMapShapeConditionalFormatting
}

/// 
open class AnalysisAnalysisDefaults {
    DefaultNewSheetConfiguration: AnalysisDefaultNewSheetConfiguration
}

/// 
open class AnalysisTooltipItem {
    FieldTooltipItem: (AnalysisFieldTooltipItem)?
    ColumnTooltipItem: (AnalysisColumnTooltipItem)?
}

/// 
open class AnalysisFreeFormLayoutScreenCanvasSizeOptions {
    OptimizedViewPortWidth: String|Mapping
}

typealias AnalysisPivotTableDataPathType = String|Mapping


typealias AnalysisReferenceLineLabelVerticalPosition = String|Mapping


/// 
open class AnalysisFreeFormLayoutConfiguration {
    Elements: Listing<AnalysisFreeFormLayoutElement>
    CanvasSizeOptions: (AnalysisFreeFormLayoutCanvasSizeOptions)?
}

/// 
open class AnalysisPivotTableConfiguration {
    SortConfiguration: (AnalysisPivotTableSortConfiguration)?
    TableOptions: (AnalysisPivotTableOptions)?
    TotalOptions: (AnalysisPivotTableTotalOptions)?
    FieldOptions: (AnalysisPivotTableFieldOptions)?
    PaginatedReportOptions: (AnalysisPivotTablePaginatedReportOptions)?
    FieldWells: (AnalysisPivotTableFieldWells)?
}

typealias AnalysisComparisonMethod = String|Mapping


/// 
open class AnalysisSpacing {
    Bottom: (String|Mapping)?
    Left: (String|Mapping)?
    Right: (String|Mapping)?
    Top: (String|Mapping)?
}

/// 
open class AnalysisFilter {
    NumericEqualityFilter: (AnalysisNumericEqualityFilter)?
    TimeEqualityFilter: (AnalysisTimeEqualityFilter)?
    TimeRangeFilter: (AnalysisTimeRangeFilter)?
    RelativeDatesFilter: (AnalysisRelativeDatesFilter)?
    TopBottomFilter: (AnalysisTopBottomFilter)?
    CategoryFilter: (AnalysisCategoryFilter)?
    NumericRangeFilter: (AnalysisNumericRangeFilter)?
}

/// 
open class AnalysisFilterTextFieldControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (AnalysisTextFieldControlDisplayOptions)?
}

/// 
open class AnalysisReferenceLineLabelConfiguration {
    FontConfiguration: (AnalysisFontConfiguration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    HorizontalPosition: (AnalysisReferenceLineLabelHorizontalPosition)?
    VerticalPosition: (AnalysisReferenceLineLabelVerticalPosition)?
    ValueLabelConfiguration: (AnalysisReferenceLineValueLabelConfiguration)?
    CustomLabelConfiguration: (AnalysisReferenceLineCustomLabelConfiguration)?
}

/// 
open class AnalysisTotalAggregationComputation {
    Name: (String|Mapping)?
    Value: (AnalysisMeasureField)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

typealias AnalysisAxisDisplayDataDrivenRange = Dynamic


/// 
open class AnalysisGlobalTableBorderOptions {
    SideSpecificBorder: (AnalysisTableSideBorderOptions)?
    UniformBorder: (AnalysisTableBorderOptions)?
}

/// 
open class AnalysisRadarChartSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimit: (AnalysisItemsLimitConfiguration)?
    ColorSort: (Listing<AnalysisFieldSortOptions>)?
    ColorItemsLimit: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisFunnelChartDataLabelOptions {
    Position: (AnalysisDataLabelPosition)?
    LabelFontConfiguration: (AnalysisFontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    MeasureDataLabelStyle: (AnalysisFunnelChartMeasureDataLabelStyle)?
    Visibility: (AnalysisVisibility)?
    CategoryLabelVisibility: (AnalysisVisibility)?
    MeasureLabelVisibility: (AnalysisVisibility)?
}

/// 
open class AnalysisTableFieldCustomIconContent {
    Icon: (AnalysisTableFieldIconSetType)?
}

typealias AnalysisLineChartMarkerShape = String|Mapping


/// 
open class AnalysisFontConfiguration {
    FontSize: (AnalysisFontSize)?
    FontDecoration: (AnalysisFontDecoration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    FontWeight: (AnalysisFontWeight)?
    FontStyle: (AnalysisFontStyle)?
}

/// 
open class AnalysisTableFieldOption {
    CustomLabel: (String|Mapping)?
    Visibility: (AnalysisVisibility)?
    URLStyling: (AnalysisTableFieldURLConfiguration)?
    FieldId: String|Mapping
    Width: (String|Mapping)?
}

/// 
open class AnalysisUniqueValuesComputation {
    Category: (AnalysisDimensionField)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
}

/// 
open class AnalysisPivotTableOptions {
    RowHeaderStyle: (AnalysisTableCellStyle)?
    CellStyle: (AnalysisTableCellStyle)?
    RowsLayout: (AnalysisPivotTableRowsLayout)?
    RowsLabelOptions: (AnalysisPivotTableRowsLabelOptions)?
    DefaultCellWidth: (String|Mapping)?
    RowAlternateColorOptions: (AnalysisRowAlternateColorOptions)?
    CollapsedRowDimensionsVisibility: (AnalysisVisibility)?
    SingleMetricVisibility: (AnalysisVisibility)?
    ColumnHeaderStyle: (AnalysisTableCellStyle)?
    MetricPlacement: (AnalysisPivotTableMetricPlacement)?
    ColumnNamesVisibility: (AnalysisVisibility)?
    ToggleButtonsVisibility: (AnalysisVisibility)?
    RowFieldNamesStyle: (AnalysisTableCellStyle)?
}

/// 
open class AnalysisFilledMapSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
}

/// 
open class AnalysisGaugeChartVisual {
    ChartConfiguration: (AnalysisGaugeChartConfiguration)?
    ConditionalFormatting: (AnalysisGaugeChartConditionalFormatting)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
}

/// 
open class AnalysisSheetControlInfoIconLabelOptions {
    Visibility: (AnalysisVisibility)?
    InfoIconText: (String|Mapping)?
}

/// 
open class AnalysisKPIVisualLayoutOptions {
    StandardLayout: (AnalysisKPIVisualStandardLayout)?
}

/// 
open class AnalysisParameterDeclaration {
    DateTimeParameterDeclaration: (AnalysisDateTimeParameterDeclaration)?
    StringParameterDeclaration: (AnalysisStringParameterDeclaration)?
    DecimalParameterDeclaration: (AnalysisDecimalParameterDeclaration)?
    IntegerParameterDeclaration: (AnalysisIntegerParameterDeclaration)?
}

typealias AnalysisKPISparklineType = String|Mapping


typealias AnalysisFontWeightName = String|Mapping


/// 
open class AnalysisPeriodToDateComputation {
    Name: (String|Mapping)?
    Time: (AnalysisDimensionField)?
    Value: (AnalysisMeasureField)?
    PeriodTimeGranularity: (AnalysisTimeGranularity)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisScatterPlotFieldWells {
    ScatterPlotCategoricallyAggregatedFieldWells: (AnalysisScatterPlotCategoricallyAggregatedFieldWells)?
    ScatterPlotUnaggregatedFieldWells: (AnalysisScatterPlotUnaggregatedFieldWells)?
}

/// 
open class AnalysisAssetOptions {
    WeekStart: (AnalysisDayOfTheWeek)?
    Timezone: (String|Mapping)?
}

/// 
open class AnalysisSubtotalOptions {
    StyleTargets: (Listing<AnalysisTableStyleTarget>)?
    TotalsVisibility: (AnalysisVisibility)?
    CustomLabel: (String|Mapping)?
    FieldLevel: (AnalysisPivotTableSubtotalLevel)?
    FieldLevelOptions: (Listing<AnalysisPivotTableFieldSubtotalOptions>)?
    TotalCellStyle: (AnalysisTableCellStyle)?
    ValueCellStyle: (AnalysisTableCellStyle)?
    MetricHeaderCellStyle: (AnalysisTableCellStyle)?
}

typealias AnalysisLineChartType = String|Mapping


/// 
open class AnalysisLineChartVisual {
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisLineChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
}

/// 
open class AnalysisTopBottomRankedComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Category: (AnalysisDimensionField)?
    Value: (AnalysisMeasureField)?
    ResultSize: (Number|Mapping)?
    Type: AnalysisTopBottomComputationType
}

/// 
open class AnalysisDropDownControlDisplayOptions {
    SelectAllOptions: (AnalysisListControlSelectAllOptions)?
    TitleOptions: (AnalysisLabelOptions)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
}

typealias AnalysisTextWrap = String|Mapping


/// 
open class AnalysisPanelTitleOptions {
    HorizontalTextAlignment: (AnalysisHorizontalTextAlignment)?
    Visibility: (AnalysisVisibility)?
    FontConfiguration: (AnalysisFontConfiguration)?
}

/// 
open class AnalysisParameterTextAreaControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Delimiter: (String|Mapping)?
    DisplayOptions: (AnalysisTextAreaControlDisplayOptions)?
}

/// 
open class AnalysisDataPathType {
    PivotTableDataPathType: (AnalysisPivotTableDataPathType)?
}

/// 
open class AnalysisClusterMarker {
    SimpleClusterMarker: (AnalysisSimpleClusterMarker)?
}

/// 
open class AnalysisColumnConfiguration {
    Column: AnalysisColumnIdentifier
    FormatConfiguration: (AnalysisFormatConfiguration)?
    Role: (AnalysisColumnRole)?
    ColorsConfiguration: (AnalysisColorsConfiguration)?
}

typealias AnalysisColorFillType = String|Mapping


/// 
open class AnalysisTableFieldImageConfiguration {
    SizingOptions: (AnalysisTableCellImageSizingConfiguration)?
}

typealias AnalysisSimpleNumericalAggregationFunction = String|Mapping


/// 
open class AnalysisPivotTableSortConfiguration {
    FieldSortOptions: (Listing<AnalysisPivotFieldSortOptions>)?
}

/// 
open class AnalysisFreeFormSectionLayoutConfiguration {
    Elements: Listing<AnalysisFreeFormLayoutElement>
}

/// 
open class AnalysisUnaggregatedField {
    Column: AnalysisColumnIdentifier
    FormatConfiguration: (AnalysisFormatConfiguration)?
    FieldId: String|Mapping
}

typealias AnalysisPrimaryValueDisplayType = String|Mapping


/// 
open class AnalysisSetParameterValueConfiguration {
    DestinationParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Value: AnalysisDestinationParameterValueConfiguration
}

/// 
open class AnalysisTableBorderOptions {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Thickness: (Number|Mapping)?
    Style: (AnalysisTableBorderStyle)?
}

/// 
open class AnalysisNumericalMeasureField {
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
    AggregationFunction: (AnalysisNumericalAggregationFunction)?
    FormatConfiguration: (AnalysisNumberFormatConfiguration)?
}

/// 
open class AnalysisDateTimeHierarchy {
    HierarchyId: String|Mapping
    DrillDownFilters: (Listing<AnalysisDrillDownFilter>)?
}

/// 
open class AnalysisRelativeDatesFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    AnchorDateConfiguration: AnalysisAnchorDateConfiguration
    TimeGranularity: AnalysisTimeGranularity
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: AnalysisFilterNullOption
    ExcludePeriodConfiguration: (AnalysisExcludePeriodConfiguration)?
    Column: AnalysisColumnIdentifier
    MinimumGranularity: (AnalysisTimeGranularity)?
    RelativeDateType: AnalysisRelativeDateType
    RelativeDateValue: (Number|Mapping)?
}

/// 
open class AnalysisFreeFormLayoutElementBackgroundStyle {
    Visibility: (AnalysisVisibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class AnalysisAxisDisplayOptions {
    AxisOffset: (String|Mapping)?
    TickLabelOptions: (AnalysisAxisTickLabelOptions)?
    AxisLineVisibility: (AnalysisVisibility)?
    GridLineVisibility: (AnalysisVisibility)?
    DataOptions: (AnalysisAxisDataOptions)?
    ScrollbarOptions: (AnalysisScrollBarOptions)?
}

typealias AnalysisLineChartLineStyle = String|Mapping


/// 
open class AnalysisPercentageDisplayFormatConfiguration {
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (AnalysisNumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (AnalysisDecimalPlacesConfiguration)?
    NegativeValueConfiguration: (AnalysisNegativeValueConfiguration)?
    NullValueFormatConfiguration: (AnalysisNullValueFormatConfiguration)?
}

/// 
open class AnalysisLayout {
    Configuration: AnalysisLayoutConfiguration
}

/// 
open class AnalysisFilledMapVisual {
    ChartConfiguration: (AnalysisFilledMapConfiguration)?
    ConditionalFormatting: (AnalysisFilledMapConditionalFormatting)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
}

typealias AnalysisTableBorderStyle = String|Mapping


/// 
open class AnalysisBinCountOptions {
    Value: (Number|Mapping)?
}

/// 
open class AnalysisCategoricalDimensionField {
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (AnalysisStringFormatConfiguration)?
}

typealias AnalysisTooltipTitleType = String|Mapping


/// 
open class AnalysisAxisDisplayRange {
    MinMax: (AnalysisAxisDisplayMinMaxRange)?
    DataDriven: (AnalysisAxisDisplayDataDrivenRange)?
}

/// 
open class AnalysisDataSetReference {
    DataSetPlaceholder: String(matches(Regex(#".*\S.*"#)))|Mapping
    DataSetArn: String|Mapping
}

/// 
open class AnalysisWordCloudVisual {
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisWordCloudChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisGeospatialMapStyleOptions {
    BaseMapStyle: (AnalysisBaseMapStyleType)?
}

/// 
open class AnalysisSeriesItem {
    FieldSeriesItem: (AnalysisFieldSeriesItem)?
    DataFieldSeriesItem: (AnalysisDataFieldSeriesItem)?
}

typealias AnalysisNumberScale = String|Mapping


typealias AnalysisReferenceLineValueLabelRelativePosition = String|Mapping


/// 
open class AnalysisTooltipOptions {
    TooltipVisibility: (AnalysisVisibility)?
    SelectedTooltipType: (AnalysisSelectedTooltipType)?
    FieldBasedTooltip: (AnalysisFieldBasedTooltip)?
}

/// 
open class AnalysisTotalAggregationOption {
    FieldId: String|Mapping
    TotalAggregationFunction: AnalysisTotalAggregationFunction
}

/// 
open class AnalysisReferenceLineDataConfiguration {
    StaticConfiguration: (AnalysisReferenceLineStaticDataConfiguration)?
    DynamicConfiguration: (AnalysisReferenceLineDynamicDataConfiguration)?
    AxisBinding: (AnalysisAxisBinding)?
    SeriesType: (AnalysisReferenceLineSeriesType)?
}

/// 
open class AnalysisGaugeChartConfiguration {
    FieldWells: (AnalysisGaugeChartFieldWells)?
    GaugeChartOptions: (AnalysisGaugeChartOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
    TooltipOptions: (AnalysisTooltipOptions)?
    VisualPalette: (AnalysisVisualPalette)?
}

/// 
open class AnalysisSankeyDiagramSortConfiguration {
    WeightSort: (Listing<AnalysisFieldSortOptions>)?
    SourceItemsLimit: (AnalysisItemsLimitConfiguration)?
    DestinationItemsLimit: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisFunnelChartAggregatedFieldWells {
    Category: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisFieldTooltipItem {
    FieldId: String|Mapping
    Label: (String|Mapping)?
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisSectionBasedLayoutConfiguration {
    CanvasSizeOptions: AnalysisSectionBasedLayoutCanvasSizeOptions
    HeaderSections: Listing<AnalysisHeaderFooterSectionConfiguration>
    BodySections: Listing<AnalysisBodySectionConfiguration>
    FooterSections: Listing<AnalysisHeaderFooterSectionConfiguration>
}

/// 
open class AnalysisWaterfallChartFieldWells {
    WaterfallChartAggregatedFieldWells: (AnalysisWaterfallChartAggregatedFieldWells)?
}

/// 
open class AnalysisKPIPrimaryValueConditionalFormatting {
    TextColor: (AnalysisConditionalFormattingColor)?
    Icon: (AnalysisConditionalFormattingIcon)?
}

/// 
open class AnalysisCustomParameterValues {
    StringValues: (Listing<String|Mapping>)?
    IntegerValues: (Listing<Number|Mapping>)?
    DecimalValues: (Listing<Number|Mapping>)?
    DateTimeValues: (Listing<String|Mapping>)?
}

/// 
open class AnalysisTimeEqualityFilter {
    Column: AnalysisColumnIdentifier
    Value: (String|Mapping)?
    RollingDate: (AnalysisRollingDateConfiguration)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    TimeGranularity: (AnalysisTimeGranularity)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisReferenceLineDynamicDataConfiguration {
    MeasureAggregationFunction: (AnalysisAggregationFunction)?
    Calculation: AnalysisNumericalAggregationFunction
    Column: AnalysisColumnIdentifier
}

/// 
open class AnalysisFilterControl {
    TextArea: (AnalysisFilterTextAreaControl)?
    Slider: (AnalysisFilterSliderControl)?
    RelativeDateTime: (AnalysisFilterRelativeDateTimeControl)?
    DateTimePicker: (AnalysisFilterDateTimePickerControl)?
    List: (AnalysisFilterListControl)?
    Dropdown: (AnalysisFilterDropDownControl)?
    TextField: (AnalysisFilterTextFieldControl)?
}

typealias AnalysisDateAggregationFunction = String|Mapping


/// 
open class AnalysisGridLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (AnalysisGridLayoutScreenCanvasSizeOptions)?
}

/// 
open class AnalysisAxisLogarithmicScale {
    Base: (Number|Mapping)?
}

/// 
open class AnalysisRadarChartFieldWells {
    RadarChartAggregatedFieldWells: (AnalysisRadarChartAggregatedFieldWells)?
}

typealias AnalysisWidgetStatus = String|Mapping


typealias AnalysisPanelBorderStyle = String|Mapping


/// 
open class AnalysisCustomContentVisual {
    DataSetIdentifier: String|Mapping
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisCustomContentConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
}

typealias AnalysisMapZoomMode = String|Mapping


/// 
open class AnalysisRadarChartConfiguration {
    Shape: (AnalysisRadarChartShape)?
    BaseSeriesSettings: (AnalysisRadarChartSeriesSettings)?
    StartAngle: (Number|Mapping)?
    CategoryAxis: (AnalysisAxisDisplayOptions)?
    ColorLabelOptions: (AnalysisChartAxisLabelOptions)?
    FieldWells: (AnalysisRadarChartFieldWells)?
    AlternateBandEvenColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Legend: (AnalysisLegendOptions)?
    AxesRangeScale: (AnalysisRadarChartAxesRangeScale)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
    ColorAxis: (AnalysisAxisDisplayOptions)?
    SortConfiguration: (AnalysisRadarChartSortConfiguration)?
    VisualPalette: (AnalysisVisualPalette)?
    AlternateBandColorsVisibility: (AnalysisVisibility)?
    AlternateBandOddColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisHeatMapConfiguration {
    Tooltip: (AnalysisTooltipOptions)?
    FieldWells: (AnalysisHeatMapFieldWells)?
    SortConfiguration: (AnalysisHeatMapSortConfiguration)?
    RowLabelOptions: (AnalysisChartAxisLabelOptions)?
    ColumnLabelOptions: (AnalysisChartAxisLabelOptions)?
    ColorScale: (AnalysisColorScale)?
    Legend: (AnalysisLegendOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
}

/// 
open class AnalysisGradientColor {
    Stops: (Listing<AnalysisGradientStop>)?
}

typealias AnalysisSimpleAttributeAggregationFunction = String|Mapping


/// 
open class AnalysisListControlDisplayOptions {
    TitleOptions: (AnalysisLabelOptions)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
    SearchOptions: (AnalysisListControlSearchOptions)?
    SelectAllOptions: (AnalysisListControlSelectAllOptions)?
}

/// 
open class AnalysisSheetElementRenderingRule {
    Expression: String|Mapping
    ConfigurationOverrides: AnalysisSheetElementConfigurationOverrides
}

/// 
open class AnalysisFreeFormLayoutElement {
    LoadingAnimation: (AnalysisLoadingAnimation)?
    XAxisLocation: String|Mapping
    YAxisLocation: String|Mapping
    Width: String|Mapping
    Height: String|Mapping
    Visibility: (AnalysisVisibility)?
    SelectedBorderStyle: (AnalysisFreeFormLayoutElementBorderStyle)?
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    ElementType: AnalysisLayoutElementType
    RenderingRules: (Listing<AnalysisSheetElementRenderingRule>)?
    BorderStyle: (AnalysisFreeFormLayoutElementBorderStyle)?
    BackgroundStyle: (AnalysisFreeFormLayoutElementBackgroundStyle)?
}

typealias AnalysisPivotTableConditionalFormattingScopeRole = String|Mapping


/// 
open class AnalysisCategoryFilterConfiguration {
    CustomFilterConfiguration: (AnalysisCustomFilterConfiguration)?
    FilterListConfiguration: (AnalysisFilterListConfiguration)?
    CustomFilterListConfiguration: (AnalysisCustomFilterListConfiguration)?
}

typealias AnalysisSelectedTooltipType = String|Mapping


/// 
open class AnalysisBodySectionConfiguration {
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: AnalysisBodySectionContent
    Style: (AnalysisSectionStyle)?
    PageBreakConfiguration: (AnalysisSectionPageBreakConfiguration)?
}

/// 
open class AnalysisCustomColor {
    FieldValue: (String|Mapping)?
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
    SpecialValue: (AnalysisSpecialValue)?
}

typealias AnalysisRelativeFontSize = String|Mapping


/// 
open class AnalysisListControlSearchOptions {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisKPISortConfiguration {
    TrendGroupSort: (Listing<AnalysisFieldSortOptions>)?
}

/// 
open class AnalysisRadarChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisRadarChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
}

/// 
open class AnalysisParameterTextFieldControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (AnalysisTextFieldControlDisplayOptions)?
}

/// 
open class AnalysisDecimalParameterDeclaration {
    ParameterValueType: AnalysisParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (AnalysisDecimalDefaultValues)?
    ValueWhenUnset: (AnalysisDecimalValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<AnalysisMappedDataSetParameter>)?
}

/// 
open class AnalysisConditionalFormattingCustomIconOptions {
    Icon: (AnalysisIcon)?
    UnicodeIcon: (String(matches(Regex(#"^[^\u0000-\u00FF]$"#)))|Mapping)?
}

/// 
open class AnalysisSectionBasedLayoutCanvasSizeOptions {
    PaperCanvasSizeOptions: (AnalysisSectionBasedLayoutPaperCanvasSizeOptions)?
}

/// 
open class AnalysisTextConditionalFormat {
    BackgroundColor: (AnalysisConditionalFormattingColor)?
    TextColor: (AnalysisConditionalFormattingColor)?
    Icon: (AnalysisConditionalFormattingIcon)?
}

typealias AnalysisPaperOrientation = String|Mapping


/// 
open class AnalysisConditionalFormattingIconDisplayConfiguration {
    IconDisplayOption: (AnalysisConditionalFormattingIconDisplayOption)?
}

/// 
open class AnalysisTreeMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisTreeMapConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
}

/// 
open class AnalysisItemsLimitConfiguration {
    ItemsLimit: (Number|Mapping)?
    OtherCategories: (AnalysisOtherCategories)?
}

typealias AnalysisBaseMapStyleType = String|Mapping


typealias AnalysisVisibility = String|Mapping


/// 
open class AnalysisCustomActionNavigationOperation {
    LocalNavigationConfiguration: (AnalysisLocalNavigationConfiguration)?
}

/// 
open class AnalysisTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<AnalysisTableConditionalFormattingOption>)?
}

/// 
open class AnalysisBarChartSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimit: (AnalysisItemsLimitConfiguration)?
    ColorSort: (Listing<AnalysisFieldSortOptions>)?
    ColorItemsLimit: (AnalysisItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<AnalysisFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisNumericalDimensionField {
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (AnalysisNumberFormatConfiguration)?
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
}

/// 
open class AnalysisCustomValuesConfiguration {
    IncludeNullValue: (Boolean|Mapping)?
    CustomValues: AnalysisCustomParameterValues
}

typealias AnalysisReferenceLinePatternType = String|Mapping


/// 
open class AnalysisConditionalFormattingCustomIconCondition {
    Expression: String|Mapping
    IconOptions: AnalysisConditionalFormattingCustomIconOptions
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    DisplayConfiguration: (AnalysisConditionalFormattingIconDisplayConfiguration)?
}

/// 
open class AnalysisLocalNavigationConfiguration {
    TargetSheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisSheetTextBox {
    SheetTextBoxId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: (String|Mapping)?
}

/// 
open class AnalysisRangeEndsLabelType {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisSectionBasedLayoutPaperCanvasSizeOptions {
    PaperOrientation: (AnalysisPaperOrientation)?
    PaperMargin: (AnalysisSpacing)?
    PaperSize: (AnalysisPaperSize)?
}

/// 
open class AnalysisDestinationParameterValueConfiguration {
    CustomValuesConfiguration: (AnalysisCustomValuesConfiguration)?
    SelectAllValueOptions: (AnalysisSelectAllValueOptions)?
    SourceParameterName: (String|Mapping)?
    SourceField: (String|Mapping)?
    SourceColumn: (AnalysisColumnIdentifier)?
}

/// 
open class AnalysisNumericRangeFilterValue {
    StaticValue: (Number|Mapping)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class AnalysisPivotFieldSortOptions {
    FieldId: String|Mapping
    SortBy: AnalysisPivotTableSortBy
}

/// 
open class AnalysisSmallMultiplesOptions {
    MaxVisibleRows: (Number|Mapping)?
    MaxVisibleColumns: (Number|Mapping)?
    PanelConfiguration: (AnalysisPanelConfiguration)?
    XAxis: (AnalysisSmallMultiplesAxisProperties)?
    YAxis: (AnalysisSmallMultiplesAxisProperties)?
}

/// 
open class AnalysisTableSideBorderOptions {
    InnerVertical: (AnalysisTableBorderOptions)?
    InnerHorizontal: (AnalysisTableBorderOptions)?
    Left: (AnalysisTableBorderOptions)?
    Right: (AnalysisTableBorderOptions)?
    Top: (AnalysisTableBorderOptions)?
    Bottom: (AnalysisTableBorderOptions)?
}

/// 
open class AnalysisBoxPlotFieldWells {
    BoxPlotAggregatedFieldWells: (AnalysisBoxPlotAggregatedFieldWells)?
}

/// 
open class AnalysisNumericalAggregationFunction {
    SimpleNumericalAggregation: (AnalysisSimpleNumericalAggregationFunction)?
    PercentileAggregation: (AnalysisPercentileAggregation)?
}

/// 
open class AnalysisVisualCustomActionOperation {
    URLOperation: (AnalysisCustomActionURLOperation)?
    SetParametersOperation: (AnalysisCustomActionSetParametersOperation)?
    FilterOperation: (AnalysisCustomActionFilterOperation)?
    NavigationOperation: (AnalysisCustomActionNavigationOperation)?
}

/// 
open class AnalysisReferenceLineValueLabelConfiguration {
    RelativePosition: (AnalysisReferenceLineValueLabelRelativePosition)?
    FormatConfiguration: (AnalysisNumericFormatConfiguration)?
}

/// 
open class AnalysisLegendOptions {
    Visibility: (AnalysisVisibility)?
    Title: (AnalysisLabelOptions)?
    Position: (AnalysisLegendPosition)?
    Width: (String|Mapping)?
    Height: (String|Mapping)?
}

/// 
open class AnalysisNullValueFormatConfiguration {
    NullString: String|Mapping
}

/// 
open class AnalysisTreeMapAggregatedFieldWells {
    Sizes: (Listing<AnalysisMeasureField>)?
    Colors: (Listing<AnalysisMeasureField>)?
    Groups: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisFilterSelectableValues {
    Values: (Listing<String|Mapping>)?
}

/// 
open class AnalysisGeospatialHeatmapColorScale {
    Colors: (Listing<AnalysisGeospatialHeatmapDataColor>)?
}

/// 
open class AnalysisHistogramBinOptions {
    BinWidth: (AnalysisBinWidthOptions)?
    StartValue: (Number|Mapping)?
    SelectedBinType: (AnalysisHistogramBinType)?
    BinCount: (AnalysisBinCountOptions)?
}

/// 
open class AnalysisDataPathValue {
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
    DataPathType: (AnalysisDataPathType)?
}

/// 
open class AnalysisCustomContentConfiguration {
    ImageScaling: (AnalysisCustomContentImageScalingConfiguration)?
    ContentUrl: (String|Mapping)?
    ContentType: (AnalysisCustomContentType)?
}

/// 
open class AnalysisAnchorDateConfiguration {
    AnchorOption: (AnalysisAnchorOption)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

typealias AnalysisRelativeDateType = String|Mapping


/// 
open class AnalysisForecastScenario {
    WhatIfPointScenario: (AnalysisWhatIfPointScenario)?
    WhatIfRangeScenario: (AnalysisWhatIfRangeScenario)?
}

/// 
open class AnalysisAxisLabelReferenceOptions {
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
}

/// 
open class AnalysisGeospatialWindowOptions {
    Bounds: (AnalysisGeospatialCoordinateBounds)?
    MapZoomMode: (AnalysisMapZoomMode)?
}

typealias AnalysisAnalysisErrorType = String|Mapping


/// 
open class AnalysisPieChartConfiguration {
    FieldWells: (AnalysisPieChartFieldWells)?
    SortConfiguration: (AnalysisPieChartSortConfiguration)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
    ValueLabelOptions: (AnalysisChartAxisLabelOptions)?
    Legend: (AnalysisLegendOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    ContributionAnalysisDefaults: (Listing<AnalysisContributionAnalysisDefault>)?
    DonutOptions: (AnalysisDonutOptions)?
    SmallMultiplesOptions: (AnalysisSmallMultiplesOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
}

/// 
open class AnalysisIntegerParameterDeclaration {
    ValueWhenUnset: (AnalysisIntegerValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<AnalysisMappedDataSetParameter>)?
    ParameterValueType: AnalysisParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (AnalysisIntegerDefaultValues)?
}

typealias AnalysisCategoryFilterSelectAllOptions = String|Mapping


/// 
open class AnalysisDateTimeParameterDeclaration {
    MappedDataSetParameters: (Listing<AnalysisMappedDataSetParameter>)?
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (AnalysisDateTimeDefaultValues)?
    TimeGranularity: (AnalysisTimeGranularity)?
    ValueWhenUnset: (AnalysisDateTimeValueWhenUnsetConfiguration)?
}

/// 
open class AnalysisPivotTableFieldOptions {
    DataPathOptions: (Listing<AnalysisPivotTableDataPathOption>)?
    CollapseStateOptions: (Listing<AnalysisPivotTableFieldCollapseStateOption>)?
    SelectedFieldOptions: (Listing<AnalysisPivotTableFieldOption>)?
}

/// 
open class AnalysisBarChartAggregatedFieldWells {
    Category: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
    Colors: (Listing<AnalysisDimensionField>)?
    SmallMultiples: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisGeospatialCoordinateBounds {
    North: Number|Mapping
    South: Number|Mapping
    West: Number|Mapping
    East: Number|Mapping
}

/// 
open class AnalysisFormatConfiguration {
    DateTimeFormatConfiguration: (AnalysisDateTimeFormatConfiguration)?
    StringFormatConfiguration: (AnalysisStringFormatConfiguration)?
    NumberFormatConfiguration: (AnalysisNumberFormatConfiguration)?
}

/// 
open class AnalysisDefaultFreeFormLayoutConfiguration {
    CanvasSizeOptions: AnalysisFreeFormLayoutCanvasSizeOptions
}

/// 
open class AnalysisSheetControlLayoutConfiguration {
    GridLayout: (AnalysisGridLayoutConfiguration)?
}

/// 
open class AnalysisWaterfallChartSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    BreakdownItemsLimit: (AnalysisItemsLimitConfiguration)?
}

typealias AnalysisFontStyle = String|Mapping


/// 
open class AnalysisMinimumLabelType {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisChartAxisLabelOptions {
    Visibility: (AnalysisVisibility)?
    SortIconVisibility: (AnalysisVisibility)?
    AxisLabelOptions: (Listing<AnalysisAxisLabelOptions>)?
}

/// 
open class AnalysisShapeConditionalFormat {
    BackgroundColor: AnalysisConditionalFormattingColor
}

/// 
open class AnalysisCategoryDrillDownFilter {
    Column: AnalysisColumnIdentifier
    CategoryValues: Listing<String|Mapping>
}

/// 
open class AnalysisArcOptions {
    ArcThickness: (AnalysisArcThickness)?
}

/// 
open class AnalysisConditionalFormattingSolidColor {
    Expression: String|Mapping
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisSectionPageBreakConfiguration {
    After: (AnalysisSectionAfterPageBreak)?
}

/// 
open class AnalysisLineChartLineStyleSettings {
    LineVisibility: (AnalysisVisibility)?
    LineInterpolation: (AnalysisLineInterpolation)?
    LineStyle: (AnalysisLineChartLineStyle)?
    LineWidth: (String|Mapping)?
}

/// 
open class AnalysisTreeMapFieldWells {
    TreeMapAggregatedFieldWells: (AnalysisTreeMapAggregatedFieldWells)?
}

typealias AnalysisArcThickness = String|Mapping


/// 
open class AnalysisReferenceLineCustomLabelConfiguration {
    CustomLabel: String(matches(Regex(#".*\S.*"#)))|Mapping
}

/// 
open class AnalysisCalculatedMeasureField {
    Expression: String|Mapping
    FieldId: String|Mapping
}

/// 
open class AnalysisTableFieldURLConfiguration {
    ImageConfiguration: (AnalysisTableFieldImageConfiguration)?
    LinkConfiguration: (AnalysisTableFieldLinkConfiguration)?
}

/// 
open class AnalysisGridLayoutElement {
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    ElementType: AnalysisLayoutElementType
    ColumnIndex: (Number|Mapping)?
    ColumnSpan: Number|Mapping
    RowIndex: (Number|Mapping)?
    RowSpan: Number|Mapping
}

typealias AnalysisFilterNullOption = String|Mapping


/// 
open class AnalysisParameterSelectableValues {
    Values: (Listing<String|Mapping>)?
    LinkToDataSetColumn: (AnalysisColumnIdentifier)?
}

/// 
open class AnalysisFreeFormLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (AnalysisFreeFormLayoutScreenCanvasSizeOptions)?
}

/// 
open class AnalysisResourcePermission {
    Principal: String|Mapping
    Actions: Listing<String|Mapping>
}

typealias AnalysisWordCloudWordScaling = String|Mapping


typealias AnalysisValidationStrategyMode = String|Mapping


/// 
open class AnalysisReferenceLineStyleConfiguration {
    Pattern: (AnalysisReferenceLinePatternType)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisTableFieldCustomTextContent {
    Value: (String|Mapping)?
    FontConfiguration: AnalysisFontConfiguration
}

/// 
open class AnalysisFunnelChartFieldWells {
    FunnelChartAggregatedFieldWells: (AnalysisFunnelChartAggregatedFieldWells)?
}

/// 
open class AnalysisSelectedSheetsFilterScopeConfiguration {
    SheetVisualScopingConfigurations: (Listing<AnalysisSheetVisualScopingConfiguration>)?
}

typealias AnalysisPivotTableMetricPlacement = String|Mapping


/// 
open class AnalysisBarChartConfiguration {
    SortConfiguration: (AnalysisBarChartSortConfiguration)?
    BarsArrangement: (AnalysisBarsArrangement)?
    CategoryAxis: (AnalysisAxisDisplayOptions)?
    Legend: (AnalysisLegendOptions)?
    ContributionAnalysisDefaults: (Listing<AnalysisContributionAnalysisDefault>)?
    Orientation: (AnalysisBarChartOrientation)?
    DataLabels: (AnalysisDataLabelOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    ColorLabelOptions: (AnalysisChartAxisLabelOptions)?
    ReferenceLines: (Listing<AnalysisReferenceLine>)?
    FieldWells: (AnalysisBarChartFieldWells)?
    VisualPalette: (AnalysisVisualPalette)?
    SmallMultiplesOptions: (AnalysisSmallMultiplesOptions)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
    ValueAxis: (AnalysisAxisDisplayOptions)?
    ValueLabelOptions: (AnalysisChartAxisLabelOptions)?
}

/// 
open class AnalysisLineChartAggregatedFieldWells {
    Category: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
    Colors: (Listing<AnalysisDimensionField>)?
    SmallMultiples: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisStringFormatConfiguration {
    NullValueFormatConfiguration: (AnalysisNullValueFormatConfiguration)?
    NumericFormatConfiguration: (AnalysisNumericFormatConfiguration)?
}

/// 
open class AnalysisNumericRangeFilter {
    Column: AnalysisColumnIdentifier
    IncludeMinimum: (Boolean|Mapping)?
    IncludeMaximum: (Boolean|Mapping)?
    RangeMinimum: (AnalysisNumericRangeFilterValue)?
    RangeMaximum: (AnalysisNumericRangeFilterValue)?
    SelectAllOptions: (AnalysisNumericFilterSelectAllOptions)?
    NullOption: AnalysisFilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    AggregationFunction: (AnalysisAggregationFunction)?
}

/// 
open class AnalysisArcAxisDisplayRange {
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
}

/// 
open class AnalysisFilterScopeConfiguration {
    SelectedSheets: (AnalysisSelectedSheetsFilterScopeConfiguration)?
    AllSheets: (AnalysisAllSheetsFilterScopeConfiguration)?
}

typealias AnalysisWordCloudWordPadding = String|Mapping


/// 
open class AnalysisTableAggregatedFieldWells {
    GroupBy: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisFilterListControl {
    CascadingControlConfiguration: (AnalysisCascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (AnalysisListControlDisplayOptions)?
    Type: (AnalysisSheetControlListType)?
    SelectableValues: (AnalysisFilterSelectableValues)?
}

/// 
open class AnalysisLineChartMarkerStyleSettings {
    MarkerVisibility: (AnalysisVisibility)?
    MarkerShape: (AnalysisLineChartMarkerShape)?
    MarkerSize: (String|Mapping)?
    MarkerColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisDrillDownFilter {
    NumericEqualityFilter: (AnalysisNumericEqualityDrillDownFilter)?
    CategoryFilter: (AnalysisCategoryDrillDownFilter)?
    TimeRangeFilter: (AnalysisTimeRangeDrillDownFilter)?
}

/// 
open class AnalysisFilterDropDownControl {
    CascadingControlConfiguration: (AnalysisCascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (AnalysisDropDownControlDisplayOptions)?
    Type: (AnalysisSheetControlListType)?
    SelectableValues: (AnalysisFilterSelectableValues)?
}

/// 
open class AnalysisAggregationSortConfiguration {
    Column: AnalysisColumnIdentifier
    SortDirection: AnalysisSortDirection
    AggregationFunction: (AnalysisAggregationFunction)?
}

/// 
open class AnalysisDecimalValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (AnalysisValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

/// 
open class AnalysisBodySectionContent {
    Layout: (AnalysisSectionLayoutConfiguration)?
}

/// 
open class AnalysisRowAlternateColorOptions {
    Status: (AnalysisWidgetStatus)?
    RowAlternateColors: (Listing<String|Mapping>)?
    UsePrimaryBackgroundColor: (AnalysisWidgetStatus)?
}

/// 
open class AnalysisTableCellConditionalFormatting {
    FieldId: String|Mapping
    TextFormat: (AnalysisTextConditionalFormat)?
}

/// 
open class AnalysisPivotTableVisual {
    ConditionalFormatting: (AnalysisPivotTableConditionalFormatting)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisPivotTableConfiguration)?
}

/// 
open class AnalysisHeatMapSortConfiguration {
    HeatMapRowSort: (Listing<AnalysisFieldSortOptions>)?
    HeatMapColumnSort: (Listing<AnalysisFieldSortOptions>)?
    HeatMapRowItemsLimitConfiguration: (AnalysisItemsLimitConfiguration)?
    HeatMapColumnItemsLimitConfiguration: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisHistogramFieldWells {
    HistogramAggregatedFieldWells: (AnalysisHistogramAggregatedFieldWells)?
}

/// 
open class AnalysisColumnHierarchy {
    DateTimeHierarchy: (AnalysisDateTimeHierarchy)?
    PredefinedHierarchy: (AnalysisPredefinedHierarchy)?
    ExplicitHierarchy: (AnalysisExplicitHierarchy)?
}

/// 
open class AnalysisPivotTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<AnalysisPivotTableConditionalFormattingOption>)?
}

/// 
open class AnalysisConditionalFormattingGradientColor {
    Expression: String|Mapping
    Color: AnalysisGradientColor
}

/// 
open class AnalysisPieChartAggregatedFieldWells {
    Category: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
    SmallMultiples: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisCurrencyDisplayFormatConfiguration {
    NullValueFormatConfiguration: (AnalysisNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (AnalysisNumericSeparatorConfiguration)?
    Symbol: (String(matches(Regex(#"[A-Z]{3}"#)))|Mapping)?
    DecimalPlacesConfiguration: (AnalysisDecimalPlacesConfiguration)?
    NumberScale: (AnalysisNumberScale)?
    NegativeValueConfiguration: (AnalysisNegativeValueConfiguration)?
}

/// 
open class AnalysisAxisDisplayMinMaxRange {
    Minimum: (Number|Mapping)?
    Maximum: (Number|Mapping)?
}

/// 
open class AnalysisScatterPlotCategoricallyAggregatedFieldWells {
    Size: (Listing<AnalysisMeasureField>)?
    Label: (Listing<AnalysisDimensionField>)?
    XAxis: (Listing<AnalysisMeasureField>)?
    YAxis: (Listing<AnalysisMeasureField>)?
    Category: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisRelativeDateTimeControlDisplayOptions {
    TitleOptions: (AnalysisLabelOptions)?
    DateTimeFormat: (String|Mapping)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
}

/// 
open class AnalysisFilledMapConfiguration {
    MapStyleOptions: (AnalysisGeospatialMapStyleOptions)?
    FieldWells: (AnalysisFilledMapFieldWells)?
    SortConfiguration: (AnalysisFilledMapSortConfiguration)?
    Legend: (AnalysisLegendOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    WindowOptions: (AnalysisGeospatialWindowOptions)?
}

/// 
open class AnalysisCustomActionSetParametersOperation {
    ParameterValueConfigurations: Listing<AnalysisSetParameterValueConfiguration>
}

/// 
open class AnalysisCascadingControlSource {
    SourceSheetControlId: (String|Mapping)?
    ColumnToMatch: (AnalysisColumnIdentifier)?
}

/// 
open class AnalysisPanelConfiguration {
    Title: (AnalysisPanelTitleOptions)?
    BorderVisibility: (AnalysisVisibility)?
    BorderStyle: (AnalysisPanelBorderStyle)?
    BorderColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    GutterVisibility: (AnalysisVisibility)?
    BackgroundVisibility: (AnalysisVisibility)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    BorderThickness: (String|Mapping)?
    GutterSpacing: (String|Mapping)?
}

/// 
open class AnalysisDateDimensionField {
    DateGranularity: (AnalysisTimeGranularity)?
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (AnalysisDateTimeFormatConfiguration)?
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
}

/// 
open class AnalysisColorScale {
    Colors: Listing<AnalysisDataColor>
    ColorFillType: AnalysisColorFillType
    NullValueColor: (AnalysisDataColor)?
}

/// 
open class AnalysisRadarChartAreaStyleSettings {
    Visibility: (AnalysisVisibility)?
}

typealias AnalysisDataLabelContent = String|Mapping


/// 
open class AnalysisPieChartVisual {
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisPieChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisKPISparklineOptions {
    Visibility: (AnalysisVisibility)?
    Type: AnalysisKPISparklineType
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    TooltipVisibility: (AnalysisVisibility)?
}

/// 
open class AnalysisVisualSubtitleLabelOptions {
    Visibility: (AnalysisVisibility)?
    FormatText: (AnalysisLongFormatText)?
}

/// 
open class AnalysisTimeRangeFilterValue {
    RollingDate: (AnalysisRollingDateConfiguration)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    StaticValue: (String|Mapping)?
}

/// 
open class AnalysisGeospatialMapAggregatedFieldWells {
    Colors: (Listing<AnalysisDimensionField>)?
    Geospatial: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisWordCloudAggregatedFieldWells {
    GroupBy: (Listing<AnalysisDimensionField>)?
    Size: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisComboChartAggregatedFieldWells {
    Category: (Listing<AnalysisDimensionField>)?
    BarValues: (Listing<AnalysisMeasureField>)?
    Colors: (Listing<AnalysisDimensionField>)?
    LineValues: (Listing<AnalysisMeasureField>)?
}

typealias AnalysisMaximumMinimumComputationType = String|Mapping


/// 
open class AnalysisTrendArrowOptions {
    Visibility: (AnalysisVisibility)?
}

typealias AnalysisCustomContentImageScalingConfiguration = String|Mapping


/// 
open class AnalysisCustomNarrativeOptions {
    Narrative: String|Mapping
}

/// 
open class AnalysisCascadingControlConfiguration {
    SourceControls: (Listing<AnalysisCascadingControlSource>)?
}

typealias AnalysisForecastComputationSeasonality = String|Mapping


typealias AnalysisCrossDatasetTypes = String|Mapping


/// 
open class AnalysisMeasureField {
    NumericalMeasureField: (AnalysisNumericalMeasureField)?
    CategoricalMeasureField: (AnalysisCategoricalMeasureField)?
    DateMeasureField: (AnalysisDateMeasureField)?
    CalculatedMeasureField: (AnalysisCalculatedMeasureField)?
}

/// 
open class AnalysisFieldBasedTooltip {
    TooltipFields: (Listing<AnalysisTooltipItem>)?
    AggregationVisibility: (AnalysisVisibility)?
    TooltipTitleType: (AnalysisTooltipTitleType)?
}

/// 
open class AnalysisTableCellImageSizingConfiguration {
    TableCellImageScalingConfiguration: (AnalysisTableCellImageScalingConfiguration)?
}

/// 
open class AnalysisTableSortConfiguration {
    RowSort: (Listing<AnalysisFieldSortOptions>)?
    PaginationConfiguration: (AnalysisPaginationConfiguration)?
}

/// 
open class AnalysisPivotTableFieldWells {
    PivotTableAggregatedFieldWells: (AnalysisPivotTableAggregatedFieldWells)?
}

/// 
open class AnalysisDataColor {
    DataValue: (Number|Mapping)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisWordCloudChartConfiguration {
    WordCloudOptions: (AnalysisWordCloudOptions)?
    FieldWells: (AnalysisWordCloudFieldWells)?
    SortConfiguration: (AnalysisWordCloudSortConfiguration)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
}

typealias AnalysisFunnelChartMeasureDataLabelStyle = String|Mapping


typealias AnalysisConditionalFormattingIconSetType = String|Mapping


/// 
open class AnalysisFieldSort {
    Direction: AnalysisSortDirection
    FieldId: String|Mapping
}

/// 
open class AnalysisWordCloudOptions {
    WordPadding: (AnalysisWordCloudWordPadding)?
    MaximumStringLength: (Number|Mapping)?
    WordOrientation: (AnalysisWordCloudWordOrientation)?
    WordScaling: (AnalysisWordCloudWordScaling)?
    CloudLayout: (AnalysisWordCloudCloudLayout)?
    WordCasing: (AnalysisWordCloudWordCasing)?
}

typealias AnalysisDataLabelPosition = String|Mapping


/// 
open class AnalysisHeaderFooterSectionConfiguration {
    Layout: AnalysisSectionLayoutConfiguration
    Style: (AnalysisSectionStyle)?
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisPercentileAggregation {
    PercentileValue: (Number|Mapping)?
}

/// 
open class AnalysisWaterfallChartConfiguration {
    FieldWells: (AnalysisWaterfallChartFieldWells)?
    CategoryAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    PrimaryYAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    Legend: (AnalysisLegendOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    SortConfiguration: (AnalysisWaterfallChartSortConfiguration)?
    WaterfallChartOptions: (AnalysisWaterfallChartOptions)?
    CategoryAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
}

/// 
open class AnalysisCustomActionURLOperation {
    URLTemplate: String|Mapping
    URLTarget: AnalysisURLTargetConfiguration
}

/// 
open class AnalysisGaugeChartFieldWells {
    Values: (Listing<AnalysisMeasureField>)?
    TargetValues: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisPivotTableCellConditionalFormatting {
    TextFormat: (AnalysisTextConditionalFormat)?
    Scope: (AnalysisPivotTableConditionalFormattingScope)?
    Scopes: (Listing<AnalysisPivotTableConditionalFormattingScope>)?
    FieldId: String|Mapping
}

typealias AnalysisTableTotalsPlacement = String|Mapping


/// 
open class AnalysisLoadingAnimation {
    Visibility: (AnalysisVisibility)?
}

typealias AnalysisHistogramBinType = String|Mapping


/// 
open class AnalysisNumericAxisOptions {
    Scale: (AnalysisAxisScale)?
    Range: (AnalysisAxisDisplayRange)?
}

/// 
open class AnalysisTopBottomFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: AnalysisColumnIdentifier
    Limit: (Number|Mapping)?
    AggregationSortConfigurations: Listing<AnalysisAggregationSortConfiguration>
    TimeGranularity: (AnalysisTimeGranularity)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class AnalysisSheetVisualScopingConfiguration {
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Scope: AnalysisFilterVisualScope
    VisualIds: (Listing<String|Mapping>)?
}

typealias AnalysisSimpleTotalAggregationFunction = String|Mapping


/// 
open class AnalysisMaximumLabelType {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisLineChartConfiguration {
    ForecastConfigurations: (Listing<AnalysisForecastConfiguration>)?
    XAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    SecondaryYAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    ContributionAnalysisDefaults: (Listing<AnalysisContributionAnalysisDefault>)?
    VisualPalette: (AnalysisVisualPalette)?
    ReferenceLines: (Listing<AnalysisReferenceLine>)?
    FieldWells: (AnalysisLineChartFieldWells)?
    SortConfiguration: (AnalysisLineChartSortConfiguration)?
    Type: (AnalysisLineChartType)?
    XAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    Series: (Listing<AnalysisSeriesItem>)?
    PrimaryYAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    SecondaryYAxisDisplayOptions: (AnalysisLineSeriesAxisDisplayOptions)?
    DefaultSeriesSettings: (AnalysisLineChartDefaultSeriesSettings)?
    Legend: (AnalysisLegendOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
    SmallMultiplesOptions: (AnalysisSmallMultiplesOptions)?
    PrimaryYAxisDisplayOptions: (AnalysisLineSeriesAxisDisplayOptions)?
    Tooltip: (AnalysisTooltipOptions)?
}

/// 
open class AnalysisWhatIfRangeScenario {
    EndDate: String|Mapping
    Value: Number|Mapping
    StartDate: String|Mapping
}

/// 
open class AnalysisTableFieldLinkConfiguration {
    Target: AnalysisURLTargetConfiguration
    Content: AnalysisTableFieldLinkContentConfiguration
}

/// 
open class AnalysisAxisDataOptions {
    NumericAxisOptions: (AnalysisNumericAxisOptions)?
    DateAxisOptions: (AnalysisDateAxisOptions)?
}

/// 
open class AnalysisTreeMapConfiguration {
    FieldWells: (AnalysisTreeMapFieldWells)?
    SortConfiguration: (AnalysisTreeMapSortConfiguration)?
    ColorLabelOptions: (AnalysisChartAxisLabelOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    GroupLabelOptions: (AnalysisChartAxisLabelOptions)?
    SizeLabelOptions: (AnalysisChartAxisLabelOptions)?
    ColorScale: (AnalysisColorScale)?
    Legend: (AnalysisLegendOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
}

/// 
open class AnalysisKPIVisualStandardLayout {
    Type: AnalysisKPIVisualStandardLayoutType
}

/// 
open class AnalysisConditionalFormattingIconSet {
    Expression: String|Mapping
    IconSetType: (AnalysisConditionalFormattingIconSetType)?
}

typealias AnalysisFontDecoration = String|Mapping


/// 
open class AnalysisDecimalDefaultValues {
    DynamicValue: (AnalysisDynamicDefaultValue)?
    StaticValues: (Listing<Number|Mapping>)?
}

/// 
open class AnalysisKPIConfiguration {
    KPIOptions: (AnalysisKPIOptions)?
    FieldWells: (AnalysisKPIFieldWells)?
    SortConfiguration: (AnalysisKPISortConfiguration)?
}

/// 
open class AnalysisTableFieldWells {
    TableAggregatedFieldWells: (AnalysisTableAggregatedFieldWells)?
    TableUnaggregatedFieldWells: (AnalysisTableUnaggregatedFieldWells)?
}

/// 
open class AnalysisScatterPlotConfiguration {
    DataLabels: (AnalysisDataLabelOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    XAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    YAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    Legend: (AnalysisLegendOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    FieldWells: (AnalysisScatterPlotFieldWells)?
    XAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    YAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
}

/// 
open class AnalysisIntegerDefaultValues {
    StaticValues: (Listing<Number|Mapping>)?
    DynamicValue: (AnalysisDynamicDefaultValue)?
}

/// 
open class AnalysisFilledMapFieldWells {
    FilledMapAggregatedFieldWells: (AnalysisFilledMapAggregatedFieldWells)?
}

/// 
open class AnalysisEntity {
    Path: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
}

/// 
open class AnalysisNumericFormatConfiguration {
    NumberDisplayFormatConfiguration: (AnalysisNumberDisplayFormatConfiguration)?
    CurrencyDisplayFormatConfiguration: (AnalysisCurrencyDisplayFormatConfiguration)?
    PercentageDisplayFormatConfiguration: (AnalysisPercentageDisplayFormatConfiguration)?
}

/// 
open class AnalysisTableConfiguration {
    FieldOptions: (AnalysisTableFieldOptions)?
    PaginatedReportOptions: (AnalysisTablePaginatedReportOptions)?
    TableInlineVisualizations: (Listing<AnalysisTableInlineVisualization>)?
    FieldWells: (AnalysisTableFieldWells)?
    SortConfiguration: (AnalysisTableSortConfiguration)?
    TableOptions: (AnalysisTableOptions)?
    TotalOptions: (AnalysisTotalOptions)?
}

typealias AnalysisIcon = String|Mapping


typealias AnalysisFilterVisualScope = String|Mapping


typealias AnalysisLineInterpolation = String|Mapping


/// 
open class AnalysisFilterRelativeDateTimeControl {
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (AnalysisRelativeDateTimeControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

typealias AnalysisWordCloudCloudLayout = String|Mapping


/// 
open class AnalysisTreeMapSortConfiguration {
    TreeMapSort: (Listing<AnalysisFieldSortOptions>)?
    TreeMapGroupItemsLimitConfiguration: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisCustomActionFilterOperation {
    TargetVisualsConfiguration: AnalysisFilterOperationTargetVisualsConfiguration
    SelectedFieldsConfiguration: AnalysisFilterOperationSelectedFieldsConfiguration
}

/// 
open class AnalysisCalculatedField {
    Expression: String|Mapping
    DataSetIdentifier: String|Mapping
    Name: String|Mapping
}

typealias AnalysisConditionalFormattingIconDisplayOption = String|Mapping


/// 
open class AnalysisTextFieldControlDisplayOptions {
    TitleOptions: (AnalysisLabelOptions)?
    PlaceholderOptions: (AnalysisTextControlPlaceholderOptions)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
}

/// 
open class AnalysisExplicitHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<AnalysisColumnIdentifier>
    DrillDownFilters: (Listing<AnalysisDrillDownFilter>)?
}

typealias AnalysisPaperSize = String|Mapping


typealias AnalysisTopBottomSortOrder = String|Mapping


/// 
open class AnalysisDateTimeFormatConfiguration {
    NullValueFormatConfiguration: (AnalysisNullValueFormatConfiguration)?
    NumericFormatConfiguration: (AnalysisNumericFormatConfiguration)?
    DateTimeFormat: (String|Mapping)?
}

/// 
open class AnalysisColumnTooltipItem {
    Column: AnalysisColumnIdentifier
    Label: (String|Mapping)?
    Visibility: (AnalysisVisibility)?
    Aggregation: (AnalysisAggregationFunction)?
}

/// 
open class AnalysisWaterfallChartOptions {
    TotalBarLabel: (String|Mapping)?
}

/// 
open class AnalysisNumericSeparatorConfiguration {
    DecimalSeparator: (AnalysisNumericSeparatorSymbol)?
    ThousandsSeparator: (AnalysisThousandSeparatorOptions)?
}

/// 
open class AnalysisNumberDisplayFormatConfiguration {
    NullValueFormatConfiguration: (AnalysisNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (AnalysisNumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (AnalysisDecimalPlacesConfiguration)?
    NumberScale: (AnalysisNumberScale)?
    NegativeValueConfiguration: (AnalysisNegativeValueConfiguration)?
}

/// 
open class AnalysisAxisScale {
    Linear: (AnalysisAxisLinearScale)?
    Logarithmic: (AnalysisAxisLogarithmicScale)?
}

/// 
open class AnalysisCategoricalMeasureField {
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
    AggregationFunction: (AnalysisCategoricalAggregationFunction)?
    FormatConfiguration: (AnalysisStringFormatConfiguration)?
}

typealias AnalysisLayoutElementType = String|Mapping


/// 
open class AnalysisPivotTableAggregatedFieldWells {
    Rows: (Listing<AnalysisDimensionField>)?
    Columns: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

typealias AnalysisDayOfTheWeek = String|Mapping


/// 
open class AnalysisBoxPlotVisual {
    ChartConfiguration: (AnalysisBoxPlotChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
}

/// 
open class AnalysisAnalysisDefinition {
    Sheets: (Listing<AnalysisSheetDefinition>)?
    CalculatedFields: (Listing<AnalysisCalculatedField>)?
    ParameterDeclarations: (Listing<AnalysisParameterDeclaration>)?
    FilterGroups: (Listing<AnalysisFilterGroup>)?
    ColumnConfigurations: (Listing<AnalysisColumnConfiguration>)?
    AnalysisDefaults: (AnalysisAnalysisDefaults)?
    Options: (AnalysisAssetOptions)?
    DataSetIdentifierDeclarations: Listing<AnalysisDataSetIdentifierDeclaration>
}

/// 
open class AnalysisNumberFormatConfiguration {
    FormatConfiguration: (AnalysisNumericFormatConfiguration)?
}

/// 
open class AnalysisScatterPlotUnaggregatedFieldWells {
    XAxis: (Listing<AnalysisDimensionField>)?
    YAxis: (Listing<AnalysisDimensionField>)?
    Size: (Listing<AnalysisMeasureField>)?
    Category: (Listing<AnalysisDimensionField>)?
    Label: (Listing<AnalysisDimensionField>)?
}

/// 
open class AnalysisGeospatialMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisGeospatialMapConfiguration)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
}

/// 
open class AnalysisBinWidthOptions {
    Value: (Number|Mapping)?
    BinCountLimit: (Number|Mapping)?
}

/// 
open class AnalysisGridLayoutConfiguration {
    Elements: Listing<AnalysisGridLayoutElement>
    CanvasSizeOptions: (AnalysisGridLayoutCanvasSizeOptions)?
}

/// 
open class AnalysisComboChartConfiguration {
    BarsArrangement: (AnalysisBarsArrangement)?
    SecondaryYAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    ReferenceLines: (Listing<AnalysisReferenceLine>)?
    CategoryAxis: (AnalysisAxisDisplayOptions)?
    BarDataLabels: (AnalysisDataLabelOptions)?
    ColorLabelOptions: (AnalysisChartAxisLabelOptions)?
    Legend: (AnalysisLegendOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    FieldWells: (AnalysisComboChartFieldWells)?
    SortConfiguration: (AnalysisComboChartSortConfiguration)?
    PrimaryYAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    PrimaryYAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
    SecondaryYAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    LineDataLabels: (AnalysisDataLabelOptions)?
}

/// 
open class AnalysisComboChartFieldWells {
    ComboChartAggregatedFieldWells: (AnalysisComboChartAggregatedFieldWells)?
}

typealias AnalysisTopBottomComputationType = String|Mapping


/// 
open class AnalysisLineChartFieldWells {
    LineChartAggregatedFieldWells: (AnalysisLineChartAggregatedFieldWells)?
}

/// 
open class AnalysisDataBarsOptions {
    FieldId: String|Mapping
    PositiveColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    NegativeColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisMaximumMinimumComputation {
    Value: (AnalysisMeasureField)?
    Type: AnalysisMaximumMinimumComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (AnalysisDimensionField)?
}

/// 
open class AnalysisDateTimeDefaultValues {
    DynamicValue: (AnalysisDynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
    RollingDate: (AnalysisRollingDateConfiguration)?
}

/// 
open class AnalysisConditionalFormattingColor {
    Solid: (AnalysisConditionalFormattingSolidColor)?
    Gradient: (AnalysisConditionalFormattingGradientColor)?
}

/// 
open class AnalysisWhatIfPointScenario {
    Value: Number|Mapping
    Date: String|Mapping
}

/// 
open class AnalysisKPIOptions {
    TrendArrows: (AnalysisTrendArrowOptions)?
    Comparison: (AnalysisComparisonConfiguration)?
    Sparkline: (AnalysisKPISparklineOptions)?
    VisualLayoutOptions: (AnalysisKPIVisualLayoutOptions)?
    ProgressBar: (AnalysisProgressBarOptions)?
    SecondaryValue: (AnalysisSecondaryValueOptions)?
    PrimaryValueDisplayType: (AnalysisPrimaryValueDisplayType)?
    PrimaryValueFontConfiguration: (AnalysisFontConfiguration)?
    SecondaryValueFontConfiguration: (AnalysisFontConfiguration)?
}

/// 
open class AnalysisPredefinedHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<AnalysisColumnIdentifier>
    DrillDownFilters: (Listing<AnalysisDrillDownFilter>)?
}

/// 
open class AnalysisAnalysisSourceEntity {
    SourceTemplate: (AnalysisAnalysisSourceTemplate)?
}

/// 
open class AnalysisVisualPalette {
    ChartColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    ColorMap: (Listing<AnalysisDataPathColor>)?
}

/// 
open class AnalysisBoxPlotOptions {
    OutlierVisibility: (AnalysisVisibility)?
    AllDataPointsVisibility: (AnalysisVisibility)?
    StyleOptions: (AnalysisBoxPlotStyleOptions)?
}

/// 
open class AnalysisSheetDefinition {
    Title: (String|Mapping)?
    ParameterControls: (Listing<AnalysisParameterControl>)?
    Visuals: (Listing<AnalysisVisual>)?
    ContentType: (AnalysisSheetContentType)?
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Description: (String|Mapping)?
    Name: (String|Mapping)?
    FilterControls: (Listing<AnalysisFilterControl>)?
    TextBoxes: (Listing<AnalysisSheetTextBox>)?
    Layouts: (Listing<AnalysisLayout>)?
    SheetControlLayouts: (Listing<AnalysisSheetControlLayout>)?
}

typealias AnalysisReferenceLineSeriesType = String|Mapping


/// 
open class AnalysisPivotTableRowsLabelOptions {
    Visibility: (AnalysisVisibility)?
    CustomLabel: (String|Mapping)?
}

/// 
open class AnalysisHeatMapAggregatedFieldWells {
    Rows: (Listing<AnalysisDimensionField>)?
    Columns: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisClusterMarkerConfiguration {
    ClusterMarker: (AnalysisClusterMarker)?
}

typealias AnalysisAnchorOption = String|Mapping


/// 
open class AnalysisParameterDateTimePickerControl {
    DisplayOptions: (AnalysisDateTimePickerControlDisplayOptions)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

typealias AnalysisAxisBinding = String|Mapping


/// 
open class AnalysisPaginationConfiguration {
    PageSize: Number|Mapping
    PageNumber: Number|Mapping
}

/// 
open class AnalysisGeospatialHeatmapConfiguration {
    HeatmapColor: (AnalysisGeospatialHeatmapColorScale)?
}

/// 
open class AnalysisSmallMultiplesAxisProperties {
    Scale: (AnalysisSmallMultiplesAxisScale)?
    Placement: (AnalysisSmallMultiplesAxisPlacement)?
}

/// 
open class AnalysisAxisLabelOptions {
    FontConfiguration: (AnalysisFontConfiguration)?
    CustomLabel: (String|Mapping)?
    ApplyTo: (AnalysisAxisLabelReferenceOptions)?
}

/// 
open class AnalysisFunnelChartConfiguration {
    DataLabelOptions: (AnalysisFunnelChartDataLabelOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    FieldWells: (AnalysisFunnelChartFieldWells)?
    SortConfiguration: (AnalysisFunnelChartSortConfiguration)?
    CategoryLabelOptions: (AnalysisChartAxisLabelOptions)?
    ValueLabelOptions: (AnalysisChartAxisLabelOptions)?
    Tooltip: (AnalysisTooltipOptions)?
}

/// 
open class AnalysisFilterTextAreaControl {
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Delimiter: (String|Mapping)?
    DisplayOptions: (AnalysisTextAreaControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisGrowthRateComputation {
    PeriodSize: (Number|Mapping)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (AnalysisDimensionField)?
    Value: (AnalysisMeasureField)?
}

typealias AnalysisSheetControlDateTimePickerType = String|Mapping


/// 
open class AnalysisDefaultSectionBasedLayoutConfiguration {
    CanvasSizeOptions: AnalysisSectionBasedLayoutCanvasSizeOptions
}

/// 
open class AnalysisKPIComparisonValueConditionalFormatting {
    TextColor: (AnalysisConditionalFormattingColor)?
    Icon: (AnalysisConditionalFormattingIcon)?
}

/// 
open class AnalysisTablePinnedFieldOptions {
    PinnedLeftFields: (Listing<String|Mapping>)?
}

typealias AnalysisSheetControlListType = String|Mapping


/// 
open class AnalysisFilledMapAggregatedFieldWells {
    Geospatial: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisPeriodOverPeriodComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (AnalysisDimensionField)?
    Value: (AnalysisMeasureField)?
}

/// 
open class AnalysisSheetControlLayout {
    Configuration: AnalysisSheetControlLayoutConfiguration
}

/// 
open class AnalysisTextControlPlaceholderOptions {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisScatterPlotVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisScatterPlotConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
}

typealias AnalysisSelectAllValueOptions = String|Mapping


typealias AnalysisRadarChartShape = String|Mapping


/// 
open class AnalysisHistogramConfiguration {
    BinOptions: (AnalysisHistogramBinOptions)?
    DataLabels: (AnalysisDataLabelOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    FieldWells: (AnalysisHistogramFieldWells)?
    XAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
    XAxisLabelOptions: (AnalysisChartAxisLabelOptions)?
    YAxisDisplayOptions: (AnalysisAxisDisplayOptions)?
}

/// 
open class AnalysisDecimalParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<Number|Mapping>
}

typealias AnalysisValueWhenUnsetOption = String|Mapping


/// 
open class AnalysisFilterListConfiguration {
    NullOption: (AnalysisFilterNullOption)?
    MatchOperator: AnalysisCategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
    SelectAllOptions: (AnalysisCategoryFilterSelectAllOptions)?
}

/// 
open class AnalysisFreeFormLayoutElementBorderStyle {
    Visibility: (AnalysisVisibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

typealias AnalysisBoxPlotFillStyle = String|Mapping


/// 
open class AnalysisDataSetIdentifierDeclaration {
    Identifier: String|Mapping
    DataSetArn: String|Mapping
}

/// 
open class AnalysisProgressBarOptions {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisTableVisual {
    ConditionalFormatting: (AnalysisTableConditionalFormatting)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisTableConfiguration)?
}

/// 
open class AnalysisParameterListControl {
    CascadingControlConfiguration: (AnalysisCascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (AnalysisListControlDisplayOptions)?
    Type: (AnalysisSheetControlListType)?
    SelectableValues: (AnalysisParameterSelectableValues)?
}

/// 
open class AnalysisIntegerParameter {
    Values: Listing<Number|Mapping>
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
}

/// 
open class AnalysisRadarChartAggregatedFieldWells {
    Category: (Listing<AnalysisDimensionField>)?
    Color: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisFilledMapShapeConditionalFormatting {
    FieldId: String|Mapping
    Format: (AnalysisShapeConditionalFormat)?
}

/// 
open class AnalysisTimeRangeDrillDownFilter {
    RangeMaximum: String|Mapping
    TimeGranularity: AnalysisTimeGranularity
    Column: AnalysisColumnIdentifier
    RangeMinimum: String|Mapping
}

/// 
open class AnalysisSectionStyle {
    Height: (String|Mapping)?
    Padding: (AnalysisSpacing)?
}

typealias AnalysisNumericSeparatorSymbol = String|Mapping


/// 
open class AnalysisPivotTableFieldCollapseStateTarget {
    FieldId: (String|Mapping)?
    FieldDataPathValues: (Listing<AnalysisDataPathValue>)?
}

/// 
open class AnalysisDataFieldSeriesItem {
    FieldId: String|Mapping
    FieldValue: (String|Mapping)?
    AxisBinding: AnalysisAxisBinding
    Settings: (AnalysisLineChartSeriesSettings)?
}

/// 
open class AnalysisColumnSort {
    SortBy: AnalysisColumnIdentifier
    Direction: AnalysisSortDirection
    AggregationFunction: (AnalysisAggregationFunction)?
}

/// 
open class AnalysisBoxPlotAggregatedFieldWells {
    GroupBy: (Listing<AnalysisDimensionField>)?
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisSecondaryValueOptions {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisDataPathColor {
    Element: AnalysisDataPathValue
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
    TimeGranularity: (AnalysisTimeGranularity)?
}

/// 
open class AnalysisFieldLabelType {
    FieldId: (String|Mapping)?
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisStringParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<String|Mapping>
}

/// 
open class AnalysisFilterGroup {
    FilterGroupId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Filters: Listing<AnalysisFilter>
    ScopeConfiguration: AnalysisFilterScopeConfiguration
    Status: (AnalysisWidgetStatus)?
    CrossDataset: AnalysisCrossDatasetTypes
}

/// 
open class AnalysisForecastComputation {
    Name: (String|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    PredictionInterval: (Number|Mapping)?
    CustomSeasonalityValue: (Number|Mapping)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Value: (AnalysisMeasureField)?
    PeriodsForward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
    Seasonality: (AnalysisForecastComputationSeasonality)?
    Time: (AnalysisDimensionField)?
}

typealias AnalysisTimeGranularity = String|Mapping


/// 
open class AnalysisArcConfiguration {
    ArcAngle: (Number|Mapping)?
    ArcThickness: (AnalysisArcThicknessOptions)?
}

/// 
open class AnalysisTableRowConditionalFormatting {
    BackgroundColor: (AnalysisConditionalFormattingColor)?
    TextColor: (AnalysisConditionalFormattingColor)?
}

/// 
open class AnalysisComparisonConfiguration {
    ComparisonMethod: (AnalysisComparisonMethod)?
    ComparisonFormat: (AnalysisComparisonFormatConfiguration)?
}

/// 
open class AnalysisSankeyDiagramChartConfiguration {
    FieldWells: (AnalysisSankeyDiagramFieldWells)?
    SortConfiguration: (AnalysisSankeyDiagramSortConfiguration)?
    DataLabels: (AnalysisDataLabelOptions)?
}

/// 
open class AnalysisLineChartSeriesSettings {
    LineStyleSettings: (AnalysisLineChartLineStyleSettings)?
    MarkerStyleSettings: (AnalysisLineChartMarkerStyleSettings)?
}

/// 
open class AnalysisDateTimeValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (AnalysisValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

/// 
open class AnalysisPercentVisibleRange {
    From: (Number|Mapping)?
    To: (Number|Mapping)?
}

/// 
open class AnalysisPivotTableSortBy {
    Field: (AnalysisFieldSort)?
    Column: (AnalysisColumnSort)?
    DataPath: (AnalysisDataPathSort)?
}

/// 
open class AnalysisComputation {
    TopBottomMovers: (AnalysisTopBottomMoversComputation)?
    TotalAggregation: (AnalysisTotalAggregationComputation)?
    GrowthRate: (AnalysisGrowthRateComputation)?
    UniqueValues: (AnalysisUniqueValuesComputation)?
    TopBottomRanked: (AnalysisTopBottomRankedComputation)?
    MetricComparison: (AnalysisMetricComparisonComputation)?
    PeriodOverPeriod: (AnalysisPeriodOverPeriodComputation)?
    PeriodToDate: (AnalysisPeriodToDateComputation)?
    Forecast: (AnalysisForecastComputation)?
    MaximumMinimum: (AnalysisMaximumMinimumComputation)?
}

typealias AnalysisNegativeValueDisplayMode = String|Mapping


/// 
open class AnalysisTableCellStyle {
    Height: (Number|Mapping)?
    Border: (AnalysisGlobalTableBorderOptions)?
    Visibility: (AnalysisVisibility)?
    FontConfiguration: (AnalysisFontConfiguration)?
    TextWrap: (AnalysisTextWrap)?
    HorizontalTextAlignment: (AnalysisHorizontalTextAlignment)?
    VerticalTextAlignment: (AnalysisVerticalTextAlignment)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class AnalysisDimensionField {
    NumericalDimensionField: (AnalysisNumericalDimensionField)?
    CategoricalDimensionField: (AnalysisCategoricalDimensionField)?
    DateDimensionField: (AnalysisDateDimensionField)?
}

/// 
open class AnalysisGaugeChartArcConditionalFormatting {
    ForegroundColor: (AnalysisConditionalFormattingColor)?
}

/// 
open class AnalysisPivotTotalOptions {
    TotalAggregationOptions: (Listing<AnalysisTotalAggregationOption>)?
    Placement: (AnalysisTableTotalsPlacement)?
    ScrollStatus: (AnalysisTableTotalsScrollStatus)?
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (AnalysisTableCellStyle)?
    ValueCellStyle: (AnalysisTableCellStyle)?
    MetricHeaderCellStyle: (AnalysisTableCellStyle)?
    TotalsVisibility: (AnalysisVisibility)?
}

/// 
open class AnalysisHistogramAggregatedFieldWells {
    Values: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisFilterOperationSelectedFieldsConfiguration {
    SelectedFields: (Listing<String|Mapping>)?
    SelectedFieldOptions: (AnalysisSelectedFieldOptions)?
    SelectedColumns: (Listing<AnalysisColumnIdentifier>)?
}

typealias AnalysisNumericEqualityMatchOperator = String|Mapping


typealias AnalysisSmallMultiplesAxisPlacement = String|Mapping


/// 
open class AnalysisSimpleClusterMarker {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

typealias AnalysisCustomContentType = String|Mapping


/// 
open class AnalysisMissingDataConfiguration {
    TreatmentOption: (AnalysisMissingDataTreatmentOption)?
}

/// 
open class AnalysisDonutOptions {
    ArcOptions: (AnalysisArcOptions)?
    DonutCenterOptions: (AnalysisDonutCenterOptions)?
}

/// 
open class AnalysisDateMeasureField {
    FieldId: String|Mapping
    Column: AnalysisColumnIdentifier
    AggregationFunction: (AnalysisDateAggregationFunction)?
    FormatConfiguration: (AnalysisDateTimeFormatConfiguration)?
}

typealias AnalysisTargetVisualOptions = String|Mapping


typealias AnalysisOtherCategories = String|Mapping


/// 
open class AnalysisDataPathLabelType {
    Visibility: (AnalysisVisibility)?
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
}

typealias AnalysisSortDirection = String|Mapping


/// 
open class AnalysisGaugeChartOptions {
    PrimaryValueDisplayType: (AnalysisPrimaryValueDisplayType)?
    Comparison: (AnalysisComparisonConfiguration)?
    ArcAxis: (AnalysisArcAxisConfiguration)?
    Arc: (AnalysisArcConfiguration)?
    PrimaryValueFontConfiguration: (AnalysisFontConfiguration)?
}

/// 
open class AnalysisBoxPlotSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    PaginationConfiguration: (AnalysisPaginationConfiguration)?
}

/// 
open class AnalysisBoxPlotStyleOptions {
    FillStyle: (AnalysisBoxPlotFillStyle)?
}

/// 
open class AnalysisForecastConfiguration {
    ForecastProperties: (AnalysisTimeBasedForecastProperties)?
    Scenario: (AnalysisForecastScenario)?
}

/// 
open class AnalysisKPIConditionalFormattingOption {
    PrimaryValue: (AnalysisKPIPrimaryValueConditionalFormatting)?
    ProgressBar: (AnalysisKPIProgressBarConditionalFormatting)?
    ActualValue: (AnalysisKPIActualValueConditionalFormatting)?
    ComparisonValue: (AnalysisKPIComparisonValueConditionalFormatting)?
}

/// 
open class AnalysisTableOptions {
    Orientation: (AnalysisTableOrientation)?
    HeaderStyle: (AnalysisTableCellStyle)?
    CellStyle: (AnalysisTableCellStyle)?
    RowAlternateColorOptions: (AnalysisRowAlternateColorOptions)?
}

/// 
open class AnalysisStringDefaultValues {
    DynamicValue: (AnalysisDynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
}

/// 
open class AnalysisVisualCustomAction {
    ActionOperations: Listing<AnalysisVisualCustomActionOperation>
    CustomActionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: String|Mapping
    Status: (AnalysisWidgetStatus)?
    Trigger: AnalysisVisualCustomActionTrigger
}

/// 
open class AnalysisAnalysisError {
    Type: (AnalysisAnalysisErrorType)?
    Message: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
    ViolatedEntities: (Listing<AnalysisEntity>)?
}

/// 
open class AnalysisComboChartSortConfiguration {
    ColorItemsLimit: (AnalysisItemsLimitConfiguration)?
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimit: (AnalysisItemsLimitConfiguration)?
    ColorSort: (Listing<AnalysisFieldSortOptions>)?
}

/// 
open class AnalysisDefaultPaginatedLayoutConfiguration {
    SectionBased: (AnalysisDefaultSectionBasedLayoutConfiguration)?
}

/// 
open class AnalysisDataLabelOptions {
    MeasureLabelVisibility: (AnalysisVisibility)?
    DataLabelTypes: (Listing<AnalysisDataLabelType>)?
    LabelContent: (AnalysisDataLabelContent)?
    TotalsVisibility: (AnalysisVisibility)?
    Visibility: (AnalysisVisibility)?
    Position: (AnalysisDataLabelPosition)?
    LabelFontConfiguration: (AnalysisFontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Overlap: (AnalysisDataLabelOverlap)?
    CategoryLabelVisibility: (AnalysisVisibility)?
}

/// 
open class AnalysisPivotTableConditionalFormattingScope {
    Role: (AnalysisPivotTableConditionalFormattingScopeRole)?
}

/// 
open class AnalysisLineSeriesAxisDisplayOptions {
    AxisOptions: (AnalysisAxisDisplayOptions)?
    MissingDataConfigurations: (Listing<AnalysisMissingDataConfiguration>)?
}

/// 
open class AnalysisKPIActualValueConditionalFormatting {
    TextColor: (AnalysisConditionalFormattingColor)?
    Icon: (AnalysisConditionalFormattingIcon)?
}

/// 
open class AnalysisLabelOptions {
    Visibility: (AnalysisVisibility)?
    FontConfiguration: (AnalysisFontConfiguration)?
    CustomLabel: (String|Mapping)?
}

typealias AnalysisSmallMultiplesAxisScale = String|Mapping


/// 
open class AnalysisFilterSliderControl {
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (AnalysisSliderControlDisplayOptions)?
    Type: (AnalysisSheetControlSliderType)?
    MaximumValue: Number|Mapping
}

/// 
open class AnalysisStringValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (AnalysisValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

/// 
open class AnalysisCustomFilterConfiguration {
    MatchOperator: AnalysisCategoryFilterMatchOperator
    CategoryValue: (String|Mapping)?
    SelectAllOptions: (AnalysisCategoryFilterSelectAllOptions)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: AnalysisFilterNullOption
}

/// 
open class AnalysisPivotTableDataPathOption {
    DataPathList: Listing<AnalysisDataPathValue>
    Width: (String|Mapping)?
}

/// 
open class AnalysisPivotTableConditionalFormattingOption {
    Cell: (AnalysisPivotTableCellConditionalFormatting)?
}

/// 
open class AnalysisTableUnaggregatedFieldWells {
    Values: (Listing<AnalysisUnaggregatedField>)?
}

/// 
open class AnalysisFontWeight {
    Name: (AnalysisFontWeightName)?
}

/// 
open class AnalysisWordCloudSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimit: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisLineChartDefaultSeriesSettings {
    AxisBinding: (AnalysisAxisBinding)?
    LineStyleSettings: (AnalysisLineChartLineStyleSettings)?
    MarkerStyleSettings: (AnalysisLineChartMarkerStyleSettings)?
}

/// 
open class AnalysisNumericEqualityDrillDownFilter {
    Column: AnalysisColumnIdentifier
    Value: Number|Mapping
}

/// 
open class AnalysisReferenceLineStaticDataConfiguration {
    Value: Number|Mapping
}

/// 
open class AnalysisKPIProgressBarConditionalFormatting {
    ForegroundColor: (AnalysisConditionalFormattingColor)?
}

/// 
open class AnalysisTableInlineVisualization {
    DataBars: (AnalysisDataBarsOptions)?
}

/// 
open class AnalysisBarChartFieldWells {
    BarChartAggregatedFieldWells: (AnalysisBarChartAggregatedFieldWells)?
}

typealias AnalysisDataLabelOverlap = String|Mapping


typealias AnalysisParameterValueType = String|Mapping


/// 
open class AnalysisExcludePeriodConfiguration {
    Amount: Number|Mapping
    Granularity: AnalysisTimeGranularity
    Status: (AnalysisWidgetStatus)?
}

/// 
open class AnalysisTableStyleTarget {
    CellType: AnalysisStyledCellType
}

typealias AnalysisReferenceLineLabelHorizontalPosition = String|Mapping


/// 
open class AnalysisCategoryFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: AnalysisColumnIdentifier
    Configuration: AnalysisCategoryFilterConfiguration
}

/// 
open class AnalysisEmptyVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DataSetIdentifier: String|Mapping
    Actions: (Listing<AnalysisVisualCustomAction>)?
}

/// 
open class AnalysisPieChartSortConfiguration {
    CategorySort: (Listing<AnalysisFieldSortOptions>)?
    CategoryItemsLimit: (AnalysisItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<AnalysisFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (AnalysisItemsLimitConfiguration)?
}

/// 
open class AnalysisDefaultInteractiveLayoutConfiguration {
    Grid: (AnalysisDefaultGridLayoutConfiguration)?
    FreeForm: (AnalysisDefaultFreeFormLayoutConfiguration)?
}

/// 
open class AnalysisValidationStrategy {
    Mode: AnalysisValidationStrategyMode
}

typealias AnalysisSelectedFieldOptions = String|Mapping


/// 
open class AnalysisCustomFilterListConfiguration {
    SelectAllOptions: (AnalysisCategoryFilterSelectAllOptions)?
    NullOption: AnalysisFilterNullOption
    MatchOperator: AnalysisCategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
}

/// 
open class AnalysisSankeyDiagramVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisSankeyDiagramChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
}

/// 
open class AnalysisColumnIdentifier {
    DataSetIdentifier: String|Mapping
    ColumnName: String|Mapping
}

/// 
open class AnalysisTableFieldOptions {
    Order: (Listing<String|Mapping>)?
    PinnedFieldOptions: (AnalysisTablePinnedFieldOptions)?
    SelectedFieldOptions: (Listing<AnalysisTableFieldOption>)?
}

/// 
open class AnalysisFilterOperationTargetVisualsConfiguration {
    SameSheetTargetVisualConfiguration: (AnalysisSameSheetTargetVisualConfiguration)?
}

typealias AnalysisHorizontalTextAlignment = String|Mapping


/// 
open class AnalysisFunnelChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisFunnelChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
}

typealias AnalysisVerticalTextAlignment = String|Mapping


/// 
open class AnalysisSankeyDiagramAggregatedFieldWells {
    Source: (Listing<AnalysisDimensionField>)?
    Destination: (Listing<AnalysisDimensionField>)?
    Weight: (Listing<AnalysisMeasureField>)?
}

/// 
open class AnalysisSectionAfterPageBreak {
    Status: (AnalysisSectionPageBreakStatus)?
}

typealias AnalysisAllSheetsFilterScopeConfiguration = Dynamic


/// 
open class AnalysisSheetElementConfigurationOverrides {
    Visibility: (AnalysisVisibility)?
}

/// 
open class AnalysisPieChartFieldWells {
    PieChartAggregatedFieldWells: (AnalysisPieChartAggregatedFieldWells)?
}

typealias AnalysisBarChartOrientation = String|Mapping


/// 
open class AnalysisDonutCenterOptions {
    LabelVisibility: (AnalysisVisibility)?
}

typealias AnalysisSheetControlSliderType = String|Mapping


/// 
open class AnalysisWaterfallVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisWaterfallChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
}

typealias AnalysisWordCloudWordCasing = String|Mapping


/// 
open class AnalysisDataLabelType {
    FieldLabelType: (AnalysisFieldLabelType)?
    DataPathLabelType: (AnalysisDataPathLabelType)?
    RangeEndsLabelType: (AnalysisRangeEndsLabelType)?
    MinimumLabelType: (AnalysisMinimumLabelType)?
    MaximumLabelType: (AnalysisMaximumLabelType)?
}

/// 
open class AnalysisPivotTableFieldSubtotalOptions {
    FieldId: (String|Mapping)?
}

typealias AnalysisVisualCustomActionTrigger = String|Mapping


/// 
open class AnalysisTableConditionalFormattingOption {
    Cell: (AnalysisTableCellConditionalFormatting)?
    Row: (AnalysisTableRowConditionalFormatting)?
}

/// 
open class AnalysisIntegerValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (AnalysisValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

/// 
open class AnalysisKPIVisual {
    ConditionalFormatting: (AnalysisKPIConditionalFormatting)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisKPIConfiguration)?
}

/// 
open class AnalysisDefaultNewSheetConfiguration {
    InteractiveLayoutConfiguration: (AnalysisDefaultInteractiveLayoutConfiguration)?
    PaginatedLayoutConfiguration: (AnalysisDefaultPaginatedLayoutConfiguration)?
    SheetContentType: (AnalysisSheetContentType)?
}

/// 
open class AnalysisFieldSeriesItem {
    FieldId: String|Mapping
    AxisBinding: AnalysisAxisBinding
    Settings: (AnalysisLineChartSeriesSettings)?
}

/// 
open class AnalysisInsightConfiguration {
    Computations: (Listing<AnalysisComputation>)?
    CustomNarrative: (AnalysisCustomNarrativeOptions)?
}

typealias AnalysisStyledCellType = String|Mapping


/// 
open class AnalysisHistogramVisual {
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisHistogramConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class AnalysisDecimalPlacesConfiguration {
    DecimalPlaces: Number|Mapping
}

/// 
open class AnalysisVisualTitleLabelOptions {
    Visibility: (AnalysisVisibility)?
    FormatText: (AnalysisShortFormatText)?
}

/// 
open class AnalysisInsightVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    InsightConfiguration: (AnalysisInsightConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    DataSetIdentifier: String|Mapping
}

/// 
open class AnalysisSameSheetTargetVisualConfiguration {
    TargetVisuals: (Listing<String|Mapping>)?
    TargetVisualOptions: (AnalysisTargetVisualOptions)?
}

/// 
open class AnalysisDateTimePickerControlDisplayOptions {
    TitleOptions: (AnalysisLabelOptions)?
    DateTimeFormat: (String|Mapping)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
}

/// 
open class AnalysisParameterSliderControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (AnalysisSliderControlDisplayOptions)?
    MaximumValue: Number|Mapping
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
}

/// 
open class AnalysisKPIConditionalFormatting {
    ConditionalFormattingOptions: (Listing<AnalysisKPIConditionalFormattingOption>)?
}

/// 
open class AnalysisParameterControl {
    TextArea: (AnalysisParameterTextAreaControl)?
    Slider: (AnalysisParameterSliderControl)?
    DateTimePicker: (AnalysisParameterDateTimePickerControl)?
    List: (AnalysisParameterListControl)?
    Dropdown: (AnalysisParameterDropDownControl)?
    TextField: (AnalysisParameterTextFieldControl)?
}

/// 
open class AnalysisMetricComparisonComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (AnalysisDimensionField)?
    FromValue: (AnalysisMeasureField)?
    TargetValue: (AnalysisMeasureField)?
}

/// 
open class AnalysisComboChartVisual {
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisComboChartConfiguration)?
}

typealias AnalysisPivotTableFieldCollapseState = String|Mapping


/// 
open class AnalysisReferenceLine {
    Status: (AnalysisWidgetStatus)?
    DataConfiguration: AnalysisReferenceLineDataConfiguration
    StyleConfiguration: (AnalysisReferenceLineStyleConfiguration)?
    LabelConfiguration: (AnalysisReferenceLineLabelConfiguration)?
}

typealias AnalysisWordCloudWordOrientation = String|Mapping


typealias AnalysisTableCellImageScalingConfiguration = String|Mapping


/// 
open class AnalysisShortFormatText {
    RichText: (String|Mapping)?
    PlainText: (String|Mapping)?
}

/// 
open class AnalysisGeospatialMapConfiguration {
    MapStyleOptions: (AnalysisGeospatialMapStyleOptions)?
    PointStyleOptions: (AnalysisGeospatialPointStyleOptions)?
    VisualPalette: (AnalysisVisualPalette)?
    FieldWells: (AnalysisGeospatialMapFieldWells)?
    Legend: (AnalysisLegendOptions)?
    Tooltip: (AnalysisTooltipOptions)?
    WindowOptions: (AnalysisGeospatialWindowOptions)?
}

typealias AnalysisCategoryFilterMatchOperator = String|Mapping


/// 
open class AnalysisScrollBarOptions {
    Visibility: (AnalysisVisibility)?
    VisibleRange: (AnalysisVisibleRangeOptions)?
}

/// 
open class AnalysisFontSize {
    Relative: (AnalysisRelativeFontSize)?
}

/// 
open class AnalysisPivotTableFieldCollapseStateOption {
    Target: AnalysisPivotTableFieldCollapseStateTarget
    State: (AnalysisPivotTableFieldCollapseState)?
}

/// 
open class AnalysisGaugeChartConditionalFormatting {
    ConditionalFormattingOptions: (Listing<AnalysisGaugeChartConditionalFormattingOption>)?
}

/// 
open class AnalysisGeospatialPointStyleOptions {
    SelectedPointStyle: (AnalysisGeospatialSelectedPointStyle)?
    ClusterMarkerConfiguration: (AnalysisClusterMarkerConfiguration)?
    HeatmapConfiguration: (AnalysisGeospatialHeatmapConfiguration)?
}

/// 
open class AnalysisDynamicDefaultValue {
    GroupNameColumn: (AnalysisColumnIdentifier)?
    DefaultValueColumn: AnalysisColumnIdentifier
    UserNameColumn: (AnalysisColumnIdentifier)?
}

/// 
open class AnalysisFilledMapConditionalFormatting {
    ConditionalFormattingOptions: Listing<AnalysisFilledMapConditionalFormattingOption>
}

/// 
open class AnalysisPivotTablePaginatedReportOptions {
    VerticalOverflowVisibility: (AnalysisVisibility)?
    OverflowColumnHeaderVisibility: (AnalysisVisibility)?
}

typealias AnalysisCategoricalAggregationFunction = String|Mapping


/// 
open class AnalysisTextAreaControlDisplayOptions {
    TitleOptions: (AnalysisLabelOptions)?
    PlaceholderOptions: (AnalysisTextControlPlaceholderOptions)?
    InfoIconLabelOptions: (AnalysisSheetControlInfoIconLabelOptions)?
}

/// 
open class AnalysisSheet {
    SheetId: (String(matches(Regex(#"[\w\-]+"#)))|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class AnalysisFilterDateTimePickerControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (AnalysisDateTimePickerControlDisplayOptions)?
    Type: (AnalysisSheetControlDateTimePickerType)?
}

/// 
open class AnalysisBarChartVisual {
    Subtitle: (AnalysisVisualSubtitleLabelOptions)?
    ChartConfiguration: (AnalysisBarChartConfiguration)?
    Actions: (Listing<AnalysisVisualCustomAction>)?
    ColumnHierarchies: (Listing<AnalysisColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (AnalysisVisualTitleLabelOptions)?
}

/// 
open class AnalysisVisibleRangeOptions {
    PercentRange: (AnalysisPercentVisibleRange)?
}

/// 
open class AnalysisDataPathSort {
    Direction: AnalysisSortDirection
    SortPaths: Listing<AnalysisDataPathValue>
}

/// 
open class AnalysisRadarChartSeriesSettings {
    AreaStyleSettings: (AnalysisRadarChartAreaStyleSettings)?
}

/// 
open class AnalysisGeospatialHeatmapDataColor {
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
}

/// Definition of the AWS::QuickSight::Analysis Resource Type.
open class Analysis extends cloudformation.Resource {

    Type = "AWS::QuickSight::Analysis"


    /// 
    hidden AwsAccountId: String(matches(Regex(#"^[0-9]{12}$"#)))|Mapping

    /// 
    hidden Parameters: (AnalysisParameters)?

    /// 
    hidden Permissions: (Listing<AnalysisResourcePermission>)?

    /// 
    hidden Tags: (Listing<AnalysisTag>)?

    /// 
    hidden ThemeArn: (String|Mapping)?

    /// 
    hidden SourceEntity: (AnalysisAnalysisSourceEntity)?

    /// 
    hidden Sheets: (Listing<AnalysisSheet>)?

    /// 
    hidden Status: (AnalysisResourceStatus)?

    /// 
    hidden AnalysisId: String(matches(Regex(#"[\w\-]+"#)))|Mapping

    /// 
    hidden Definition: (AnalysisAnalysisDefinition)?

    /// 
    hidden Errors: (Listing<AnalysisAnalysisError>)?

    /// 
    hidden Name: String|Mapping

    /// 
    hidden ValidationStrategy: (AnalysisValidationStrategy)?

    Properties {
        ["AwsAccountId"] = if (AwsAccountId == null) null else AwsAccountId
        ["Parameters"] = if (Parameters == null) null else Parameters
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["Tags"] = if (Tags == null) null else Tags
        ["ThemeArn"] = if (ThemeArn == null) null else ThemeArn
        ["SourceEntity"] = if (SourceEntity == null) null else SourceEntity
        ["Sheets"] = if (Sheets == null) null else Sheets
        ["Status"] = if (Status == null) null else Status
        ["AnalysisId"] = if (AnalysisId == null) null else AnalysisId
        ["Definition"] = if (Definition == null) null else Definition
        ["Errors"] = if (Errors == null) null else Errors
        ["Name"] = if (Name == null) null else Name
        ["ValidationStrategy"] = if (ValidationStrategy == null) null else ValidationStrategy
    }

}
