/// AWS::QuickSight::Dashboard
///
/// Generated by rain build --pkl-class AWS::QuickSight::Dashboard
module aws.quicksight.dashboard

import "../../cloudformation.pkl"

/// 
open class DashboardKPIVisualStandardLayout {
    Type: DashboardKPIVisualStandardLayoutType
}

typealias DashboardSheetControlDateTimePickerType = String|Mapping


/// 
open class DashboardBarChartFieldWells {
    BarChartAggregatedFieldWells: (DashboardBarChartAggregatedFieldWells)?
}

typealias DashboardDataLabelPosition = String|Mapping


/// 
open class DashboardDefaultNewSheetConfiguration {
    InteractiveLayoutConfiguration: (DashboardDefaultInteractiveLayoutConfiguration)?
    PaginatedLayoutConfiguration: (DashboardDefaultPaginatedLayoutConfiguration)?
    SheetContentType: (DashboardSheetContentType)?
}

/// 
open class DashboardGaugeChartConditionalFormattingOption {
    Arc: (DashboardGaugeChartArcConditionalFormatting)?
    PrimaryValue: (DashboardGaugeChartPrimaryValueConditionalFormatting)?
}

/// 
open class DashboardTimeRangeFilter {
    RangeMinimumValue: (DashboardTimeRangeFilterValue)?
    RangeMaximumValue: (DashboardTimeRangeFilterValue)?
    NullOption: DashboardFilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: DashboardColumnIdentifier
    ExcludePeriodConfiguration: (DashboardExcludePeriodConfiguration)?
    TimeGranularity: (DashboardTimeGranularity)?
    IncludeMinimum: (Boolean|Mapping)?
    IncludeMaximum: (Boolean|Mapping)?
}

/// 
open class DashboardConditionalFormattingCustomIconOptions {
    Icon: (DashboardIcon)?
    UnicodeIcon: (String(matches(Regex(#"^[^\u0000-\u00FF]$"#)))|Mapping)?
}

/// 
open class DashboardDateTimeParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<String|Mapping>
}

/// 
open class DashboardLegendOptions {
    Visibility: (DashboardVisibility)?
    Title: (DashboardLabelOptions)?
    Position: (DashboardLegendPosition)?
    Width: (String|Mapping)?
    Height: (String|Mapping)?
}

typealias DashboardPivotTableSubtotalLevel = String|Mapping


/// 
open class DashboardExportWithHiddenFieldsOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardFieldTooltipItem {
    FieldId: String|Mapping
    Label: (String|Mapping)?
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardGridLayoutConfiguration {
    Elements: Listing<DashboardGridLayoutElement>
    CanvasSizeOptions: (DashboardGridLayoutCanvasSizeOptions)?
}

/// 
open class DashboardSankeyDiagramChartConfiguration {
    FieldWells: (DashboardSankeyDiagramFieldWells)?
    SortConfiguration: (DashboardSankeyDiagramSortConfiguration)?
    DataLabels: (DashboardDataLabelOptions)?
}

typealias DashboardAllSheetsFilterScopeConfiguration = Dynamic


/// 
open class DashboardDecimalPlacesConfiguration {
    DecimalPlaces: Number|Mapping
}

/// 
open class DashboardDimensionField {
    NumericalDimensionField: (DashboardNumericalDimensionField)?
    CategoricalDimensionField: (DashboardCategoricalDimensionField)?
    DateDimensionField: (DashboardDateDimensionField)?
}

/// 
open class DashboardEntity {
    Path: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
}

/// 
open class DashboardFilledMapFieldWells {
    FilledMapAggregatedFieldWells: (DashboardFilledMapAggregatedFieldWells)?
}

/// 
open class DashboardHeaderFooterSectionConfiguration {
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Layout: DashboardSectionLayoutConfiguration
    Style: (DashboardSectionStyle)?
}

/// 
open class DashboardLineChartMarkerStyleSettings {
    MarkerVisibility: (DashboardVisibility)?
    MarkerShape: (DashboardLineChartMarkerShape)?
    MarkerSize: (String|Mapping)?
    MarkerColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardPivotFieldSortOptions {
    FieldId: String|Mapping
    SortBy: DashboardPivotTableSortBy
}

/// 
open class DashboardCustomActionNavigationOperation {
    LocalNavigationConfiguration: (DashboardLocalNavigationConfiguration)?
}

/// 
open class DashboardCustomActionURLOperation {
    URLTemplate: String|Mapping
    URLTarget: DashboardURLTargetConfiguration
}

/// 
open class DashboardDateTimeValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (DashboardValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

/// 
open class DashboardDecimalParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<Number|Mapping>
}

/// 
open class DashboardWordCloudVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardWordCloudChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
}

/// 
open class DashboardDashboardPublishOptions {
    VisualAxisSortOption: (DashboardVisualAxisSortOption)?
    ExportWithHiddenFieldsOption: (DashboardExportWithHiddenFieldsOption)?
    DataPointMenuLabelOption: (DashboardDataPointMenuLabelOption)?
    DataPointTooltipOption: (DashboardDataPointTooltipOption)?
    SheetControlsOption: (DashboardSheetControlsOption)?
    SheetLayoutElementMaximizationOption: (DashboardSheetLayoutElementMaximizationOption)?
    VisualPublishOptions: (DashboardDashboardVisualPublishOptions)?
    VisualMenuOption: (DashboardVisualMenuOption)?
    DataPointDrillUpDownOption: (DashboardDataPointDrillUpDownOption)?
    AdHocFilteringOption: (DashboardAdHocFilteringOption)?
    ExportToCSVOption: (DashboardExportToCSVOption)?
}

/// 
open class DashboardParameterTextAreaControl {
    Delimiter: (String|Mapping)?
    DisplayOptions: (DashboardTextAreaControlDisplayOptions)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class DashboardPieChartSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    CategoryItemsLimit: (DashboardItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<DashboardFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardTotalOptions {
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (DashboardTableCellStyle)?
    TotalsVisibility: (DashboardVisibility)?
    TotalAggregationOptions: (Listing<DashboardTotalAggregationOption>)?
    Placement: (DashboardTableTotalsPlacement)?
    ScrollStatus: (DashboardTableTotalsScrollStatus)?
}

/// 
open class DashboardFilterGroup {
    Status: (DashboardWidgetStatus)?
    CrossDataset: DashboardCrossDatasetTypes
    FilterGroupId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Filters: Listing<DashboardFilter>
    ScopeConfiguration: DashboardFilterScopeConfiguration
}

/// 
open class DashboardFreeFormLayoutElementBackgroundStyle {
    Visibility: (DashboardVisibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class DashboardListControlSelectAllOptions {
    Visibility: (DashboardVisibility)?
}

typealias DashboardSelectAllValueOptions = String|Mapping


typealias DashboardCategoryFilterMatchOperator = String|Mapping


/// 
open class DashboardColumnConfiguration {
    Column: DashboardColumnIdentifier
    FormatConfiguration: (DashboardFormatConfiguration)?
    Role: (DashboardColumnRole)?
    ColorsConfiguration: (DashboardColorsConfiguration)?
}

/// 
open class DashboardComboChartConfiguration {
    BarsArrangement: (DashboardBarsArrangement)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    VisualPalette: (DashboardVisualPalette)?
    CategoryAxis: (DashboardAxisDisplayOptions)?
    PrimaryYAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    PrimaryYAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    SecondaryYAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    LineDataLabels: (DashboardDataLabelOptions)?
    FieldWells: (DashboardComboChartFieldWells)?
    ColorLabelOptions: (DashboardChartAxisLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    SortConfiguration: (DashboardComboChartSortConfiguration)?
    SecondaryYAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    Legend: (DashboardLegendOptions)?
    BarDataLabels: (DashboardDataLabelOptions)?
    ReferenceLines: (Listing<DashboardReferenceLine>)?
}

typealias DashboardCustomContentImageScalingConfiguration = String|Mapping


/// 
open class DashboardTableInlineVisualization {
    DataBars: (DashboardDataBarsOptions)?
}

/// 
open class DashboardWordCloudFieldWells {
    WordCloudAggregatedFieldWells: (DashboardWordCloudAggregatedFieldWells)?
}

typealias DashboardNumberScale = String|Mapping


/// 
open class DashboardParameterSliderControl {
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DashboardSliderControlDisplayOptions)?
    MaximumValue: Number|Mapping
}

/// 
open class DashboardPivotTableDataPathOption {
    DataPathList: Listing<DashboardDataPathValue>
    Width: (String|Mapping)?
}

/// 
open class DashboardProgressBarOptions {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardBoxPlotSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    PaginationConfiguration: (DashboardPaginationConfiguration)?
}

/// 
open class DashboardCategoryFilterConfiguration {
    CustomFilterConfiguration: (DashboardCustomFilterConfiguration)?
    FilterListConfiguration: (DashboardFilterListConfiguration)?
    CustomFilterListConfiguration: (DashboardCustomFilterListConfiguration)?
}

typealias DashboardDashboardBehavior = String|Mapping


/// 
open class DashboardDataFieldSeriesItem {
    Settings: (DashboardLineChartSeriesSettings)?
    FieldId: String|Mapping
    FieldValue: (String|Mapping)?
    AxisBinding: DashboardAxisBinding
}

/// 
open class DashboardSelectedSheetsFilterScopeConfiguration {
    SheetVisualScopingConfigurations: (Listing<DashboardSheetVisualScopingConfiguration>)?
}

typealias DashboardSimpleAttributeAggregationFunction = String|Mapping


/// 
open class DashboardVisualTitleLabelOptions {
    Visibility: (DashboardVisibility)?
    FormatText: (DashboardShortFormatText)?
}

/// 
open class DashboardWaterfallChartFieldWells {
    WaterfallChartAggregatedFieldWells: (DashboardWaterfallChartAggregatedFieldWells)?
}

/// 
open class DashboardBinCountOptions {
    Value: (Number|Mapping)?
}

typealias DashboardNegativeValueDisplayMode = String|Mapping


typealias DashboardPivotTableMetricPlacement = String|Mapping


/// 
open class DashboardSmallMultiplesOptions {
    PanelConfiguration: (DashboardPanelConfiguration)?
    XAxis: (DashboardSmallMultiplesAxisProperties)?
    YAxis: (DashboardSmallMultiplesAxisProperties)?
    MaxVisibleRows: (Number|Mapping)?
    MaxVisibleColumns: (Number|Mapping)?
}

/// 
open class DashboardFunnelChartDataLabelOptions {
    Visibility: (DashboardVisibility)?
    CategoryLabelVisibility: (DashboardVisibility)?
    MeasureLabelVisibility: (DashboardVisibility)?
    Position: (DashboardDataLabelPosition)?
    LabelFontConfiguration: (DashboardFontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    MeasureDataLabelStyle: (DashboardFunnelChartMeasureDataLabelStyle)?
}

/// 
open class DashboardHeatMapAggregatedFieldWells {
    Rows: (Listing<DashboardDimensionField>)?
    Columns: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

typealias DashboardPivotTableRowsLayout = String|Mapping


/// 
open class DashboardValidationStrategy {
    Mode: DashboardValidationStrategyMode
}

/// 
open class DashboardColorScale {
    Colors: Listing<DashboardDataColor>
    ColorFillType: DashboardColorFillType
    NullValueColor: (DashboardDataColor)?
}

/// 
open class DashboardGeospatialMapStyleOptions {
    BaseMapStyle: (DashboardBaseMapStyleType)?
}

/// 
open class DashboardTextControlPlaceholderOptions {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardWaterfallChartConfiguration {
    CategoryAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    PrimaryYAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    Legend: (DashboardLegendOptions)?
    VisualPalette: (DashboardVisualPalette)?
    FieldWells: (DashboardWaterfallChartFieldWells)?
    SortConfiguration: (DashboardWaterfallChartSortConfiguration)?
    WaterfallChartOptions: (DashboardWaterfallChartOptions)?
    CategoryAxisDisplayOptions: (DashboardAxisDisplayOptions)?
}

/// 
open class DashboardDecimalValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (DashboardValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

/// 
open class DashboardGlobalTableBorderOptions {
    UniformBorder: (DashboardTableBorderOptions)?
    SideSpecificBorder: (DashboardTableSideBorderOptions)?
}

/// 
open class DashboardNumericRangeFilterValue {
    StaticValue: (Number|Mapping)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class DashboardPivotTableCellConditionalFormatting {
    FieldId: String|Mapping
    TextFormat: (DashboardTextConditionalFormat)?
    Scope: (DashboardPivotTableConditionalFormattingScope)?
    Scopes: (Listing<DashboardPivotTableConditionalFormattingScope>)?
}

typealias DashboardBaseMapStyleType = String|Mapping


typealias DashboardComparisonMethod = String|Mapping


typealias DashboardDashboardUIState = String|Mapping


/// 
open class DashboardDateTimeParameterDeclaration {
    DefaultValues: (DashboardDateTimeDefaultValues)?
    TimeGranularity: (DashboardTimeGranularity)?
    ValueWhenUnset: (DashboardDateTimeValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<DashboardMappedDataSetParameter>)?
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class DashboardTableFieldOptions {
    SelectedFieldOptions: (Listing<DashboardTableFieldOption>)?
    Order: (Listing<String|Mapping>)?
    PinnedFieldOptions: (DashboardTablePinnedFieldOptions)?
}

/// 
open class DashboardTimeEqualityFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: DashboardColumnIdentifier
    Value: (String|Mapping)?
    RollingDate: (DashboardRollingDateConfiguration)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    TimeGranularity: (DashboardTimeGranularity)?
}

/// 
open class DashboardTimeRangeDrillDownFilter {
    RangeMinimum: String|Mapping
    RangeMaximum: String|Mapping
    TimeGranularity: DashboardTimeGranularity
    Column: DashboardColumnIdentifier
}

/// 
open class DashboardDefaultGridLayoutConfiguration {
    CanvasSizeOptions: DashboardGridLayoutCanvasSizeOptions
}

/// 
open class DashboardDonutCenterOptions {
    LabelVisibility: (DashboardVisibility)?
}

/// 
open class DashboardDonutOptions {
    DonutCenterOptions: (DashboardDonutCenterOptions)?
    ArcOptions: (DashboardArcOptions)?
}

/// 
open class DashboardFieldBasedTooltip {
    TooltipTitleType: (DashboardTooltipTitleType)?
    TooltipFields: (Listing<DashboardTooltipItem>)?
    AggregationVisibility: (DashboardVisibility)?
}

typealias DashboardReferenceLineSeriesType = String|Mapping


/// 
open class DashboardTableFieldWells {
    TableAggregatedFieldWells: (DashboardTableAggregatedFieldWells)?
    TableUnaggregatedFieldWells: (DashboardTableUnaggregatedFieldWells)?
}

typealias DashboardValidationStrategyMode = String|Mapping


/// 
open class DashboardWaterfallVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardWaterfallChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
}

typealias DashboardColorFillType = String|Mapping


/// 
open class DashboardDefaultPaginatedLayoutConfiguration {
    SectionBased: (DashboardDefaultSectionBasedLayoutConfiguration)?
}

/// 
open class DashboardFunnelChartAggregatedFieldWells {
    Category: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardPieChartConfiguration {
    VisualPalette: (DashboardVisualPalette)?
    ContributionAnalysisDefaults: (Listing<DashboardContributionAnalysisDefault>)?
    FieldWells: (DashboardPieChartFieldWells)?
    SortConfiguration: (DashboardPieChartSortConfiguration)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    DonutOptions: (DashboardDonutOptions)?
    SmallMultiplesOptions: (DashboardSmallMultiplesOptions)?
    ValueLabelOptions: (DashboardChartAxisLabelOptions)?
    Legend: (DashboardLegendOptions)?
}

/// 
open class DashboardWordCloudOptions {
    WordPadding: (DashboardWordCloudWordPadding)?
    MaximumStringLength: (Number|Mapping)?
    WordOrientation: (DashboardWordCloudWordOrientation)?
    WordScaling: (DashboardWordCloudWordScaling)?
    CloudLayout: (DashboardWordCloudCloudLayout)?
    WordCasing: (DashboardWordCloudWordCasing)?
}

typealias DashboardForecastComputationSeasonality = String|Mapping


/// 
open class DashboardTopBottomFilter {
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: DashboardColumnIdentifier
    Limit: (Number|Mapping)?
    AggregationSortConfigurations: Listing<DashboardAggregationSortConfiguration>
    TimeGranularity: (DashboardTimeGranularity)?
}

/// 
open class DashboardPanelTitleOptions {
    HorizontalTextAlignment: (DashboardHorizontalTextAlignment)?
    Visibility: (DashboardVisibility)?
    FontConfiguration: (DashboardFontConfiguration)?
}

/// 
open class DashboardPivotTableFieldCollapseStateTarget {
    FieldId: (String|Mapping)?
    FieldDataPathValues: (Listing<DashboardDataPathValue>)?
}

typealias DashboardSheetControlSliderType = String|Mapping


/// 
open class DashboardCalculatedField {
    Name: String|Mapping
    Expression: String|Mapping
    DataSetIdentifier: String|Mapping
}

typealias DashboardDateAggregationFunction = String|Mapping


/// 
open class DashboardDateTimeFormatConfiguration {
    DateTimeFormat: (String|Mapping)?
    NullValueFormatConfiguration: (DashboardNullValueFormatConfiguration)?
    NumericFormatConfiguration: (DashboardNumericFormatConfiguration)?
}

/// 
open class DashboardFilledMapSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
}

/// 
open class DashboardAxisLabelReferenceOptions {
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
}

/// 
open class DashboardKPIPrimaryValueConditionalFormatting {
    Icon: (DashboardConditionalFormattingIcon)?
    TextColor: (DashboardConditionalFormattingColor)?
}

/// 
open class DashboardGaugeChartFieldWells {
    Values: (Listing<DashboardMeasureField>)?
    TargetValues: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardGridLayoutElement {
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    ElementType: DashboardLayoutElementType
    ColumnIndex: (Number|Mapping)?
    ColumnSpan: Number|Mapping
    RowIndex: (Number|Mapping)?
    RowSpan: Number|Mapping
}

/// 
open class DashboardLocalNavigationConfiguration {
    TargetSheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

typealias DashboardTableTotalsScrollStatus = String|Mapping


/// 
open class DashboardArcConfiguration {
    ArcAngle: (Number|Mapping)?
    ArcThickness: (DashboardArcThicknessOptions)?
}

typealias DashboardFilterNullOption = String|Mapping


/// 
open class DashboardFreeFormLayoutConfiguration {
    Elements: Listing<DashboardFreeFormLayoutElement>
    CanvasSizeOptions: (DashboardFreeFormLayoutCanvasSizeOptions)?
}

/// 
open class DashboardFunnelChartFieldWells {
    FunnelChartAggregatedFieldWells: (DashboardFunnelChartAggregatedFieldWells)?
}

/// 
open class DashboardCalculatedMeasureField {
    FieldId: String|Mapping
    Expression: String|Mapping
}

/// 
open class DashboardCascadingControlSource {
    ColumnToMatch: (DashboardColumnIdentifier)?
    SourceSheetControlId: (String|Mapping)?
}

typealias DashboardFontDecoration = String|Mapping


typealias DashboardRadarChartAxesRangeScale = String|Mapping


/// 
open class DashboardStringDefaultValues {
    DynamicValue: (DashboardDynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
}

/// 
open class DashboardUnaggregatedField {
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
    FormatConfiguration: (DashboardFormatConfiguration)?
}

typealias DashboardFunnelChartMeasureDataLabelStyle = String|Mapping


/// 
open class DashboardGradientColor {
    Stops: (Listing<DashboardGradientStop>)?
}

/// 
open class DashboardKPIConditionalFormatting {
    ConditionalFormattingOptions: (Listing<DashboardKPIConditionalFormattingOption>)?
}

typealias DashboardPaperOrientation = String|Mapping


typealias DashboardURLTargetConfiguration = String|Mapping


/// 
open class DashboardAxisDisplayRange {
    MinMax: (DashboardAxisDisplayMinMaxRange)?
    DataDriven: (DashboardAxisDisplayDataDrivenRange)?
}

/// 
open class DashboardComboChartAggregatedFieldWells {
    Category: (Listing<DashboardDimensionField>)?
    BarValues: (Listing<DashboardMeasureField>)?
    Colors: (Listing<DashboardDimensionField>)?
    LineValues: (Listing<DashboardMeasureField>)?
}

typealias DashboardLineInterpolation = String|Mapping


/// 
open class DashboardTreeMapFieldWells {
    TreeMapAggregatedFieldWells: (DashboardTreeMapAggregatedFieldWells)?
}

/// 
open class DashboardVisual {
    FilledMapVisual: (DashboardFilledMapVisual)?
    InsightVisual: (DashboardInsightVisual)?
    RadarChartVisual: (DashboardRadarChartVisual)?
    TableVisual: (DashboardTableVisual)?
    PivotTableVisual: (DashboardPivotTableVisual)?
    BarChartVisual: (DashboardBarChartVisual)?
    KPIVisual: (DashboardKPIVisual)?
    LineChartVisual: (DashboardLineChartVisual)?
    HeatMapVisual: (DashboardHeatMapVisual)?
    ComboChartVisual: (DashboardComboChartVisual)?
    BoxPlotVisual: (DashboardBoxPlotVisual)?
    WaterfallVisual: (DashboardWaterfallVisual)?
    SankeyDiagramVisual: (DashboardSankeyDiagramVisual)?
    PieChartVisual: (DashboardPieChartVisual)?
    GeospatialMapVisual: (DashboardGeospatialMapVisual)?
    FunnelChartVisual: (DashboardFunnelChartVisual)?
    WordCloudVisual: (DashboardWordCloudVisual)?
    CustomContentVisual: (DashboardCustomContentVisual)?
    GaugeChartVisual: (DashboardGaugeChartVisual)?
    TreeMapVisual: (DashboardTreeMapVisual)?
    ScatterPlotVisual: (DashboardScatterPlotVisual)?
    HistogramVisual: (DashboardHistogramVisual)?
    EmptyVisual: (DashboardEmptyVisual)?
}

/// 
open class DashboardDataPointMenuLabelOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardHistogramBinOptions {
    StartValue: (Number|Mapping)?
    SelectedBinType: (DashboardHistogramBinType)?
    BinCount: (DashboardBinCountOptions)?
    BinWidth: (DashboardBinWidthOptions)?
}

/// 
open class DashboardHistogramFieldWells {
    HistogramAggregatedFieldWells: (DashboardHistogramAggregatedFieldWells)?
}

typealias DashboardPivotTableFieldCollapseState = String|Mapping


/// 
open class DashboardCurrencyDisplayFormatConfiguration {
    NumberScale: (DashboardNumberScale)?
    NegativeValueConfiguration: (DashboardNegativeValueConfiguration)?
    NullValueFormatConfiguration: (DashboardNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (DashboardNumericSeparatorConfiguration)?
    Symbol: (String(matches(Regex(#"[A-Z]{3}"#)))|Mapping)?
    DecimalPlacesConfiguration: (DashboardDecimalPlacesConfiguration)?
}

/// 
open class DashboardExcludePeriodConfiguration {
    Amount: Number|Mapping
    Granularity: DashboardTimeGranularity
    Status: (DashboardWidgetStatus)?
}

/// 
open class DashboardMeasureField {
    DateMeasureField: (DashboardDateMeasureField)?
    CalculatedMeasureField: (DashboardCalculatedMeasureField)?
    NumericalMeasureField: (DashboardNumericalMeasureField)?
    CategoricalMeasureField: (DashboardCategoricalMeasureField)?
}

typealias DashboardSpecialValue = String|Mapping


/// 
open class DashboardSankeyDiagramSortConfiguration {
    SourceItemsLimit: (DashboardItemsLimitConfiguration)?
    DestinationItemsLimit: (DashboardItemsLimitConfiguration)?
    WeightSort: (Listing<DashboardFieldSortOptions>)?
}

/// 
open class DashboardTableOptions {
    Orientation: (DashboardTableOrientation)?
    HeaderStyle: (DashboardTableCellStyle)?
    CellStyle: (DashboardTableCellStyle)?
    RowAlternateColorOptions: (DashboardRowAlternateColorOptions)?
}

/// 
open class DashboardBarChartAggregatedFieldWells {
    Category: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
    Colors: (Listing<DashboardDimensionField>)?
    SmallMultiples: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardColumnHierarchy {
    ExplicitHierarchy: (DashboardExplicitHierarchy)?
    DateTimeHierarchy: (DashboardDateTimeHierarchy)?
    PredefinedHierarchy: (DashboardPredefinedHierarchy)?
}

/// 
open class DashboardConditionalFormattingCustomIconCondition {
    Expression: String|Mapping
    IconOptions: DashboardConditionalFormattingCustomIconOptions
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    DisplayConfiguration: (DashboardConditionalFormattingIconDisplayConfiguration)?
}

/// 
open class DashboardLineSeriesAxisDisplayOptions {
    AxisOptions: (DashboardAxisDisplayOptions)?
    MissingDataConfigurations: (Listing<DashboardMissingDataConfiguration>)?
}

/// 
open class DashboardReferenceLineValueLabelConfiguration {
    RelativePosition: (DashboardReferenceLineValueLabelRelativePosition)?
    FormatConfiguration: (DashboardNumericFormatConfiguration)?
}

typealias DashboardTableBorderStyle = String|Mapping


/// 
open class DashboardAxisLinearScale {
    StepSize: (Number|Mapping)?
    StepCount: (Number|Mapping)?
}

/// 
open class DashboardGeospatialHeatmapColorScale {
    Colors: (Listing<DashboardGeospatialHeatmapDataColor>)?
}

/// 
open class DashboardNumericalDimensionField {
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (DashboardNumberFormatConfiguration)?
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
}

/// 
open class DashboardPercentileAggregation {
    PercentileValue: (Number|Mapping)?
}

/// 
open class DashboardComboChartFieldWells {
    ComboChartAggregatedFieldWells: (DashboardComboChartAggregatedFieldWells)?
}

/// 
open class DashboardConditionalFormattingSolidColor {
    Expression: String|Mapping
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardFilterOperationTargetVisualsConfiguration {
    SameSheetTargetVisualConfiguration: (DashboardSameSheetTargetVisualConfiguration)?
}

/// 
open class DashboardNumericEqualityDrillDownFilter {
    Value: Number|Mapping
    Column: DashboardColumnIdentifier
}

/// 
open class DashboardHeatMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardHeatMapConfiguration)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    Actions: (Listing<DashboardVisualCustomAction>)?
}

typealias DashboardTableOrientation = String|Mapping


typealias DashboardBarChartOrientation = String|Mapping


typealias DashboardCategoricalAggregationFunction = String|Mapping


/// 
open class DashboardDefaultFreeFormLayoutConfiguration {
    CanvasSizeOptions: DashboardFreeFormLayoutCanvasSizeOptions
}

/// 
open class DashboardFilterDropDownControl {
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DashboardDropDownControlDisplayOptions)?
    Type: (DashboardSheetControlListType)?
    SelectableValues: (DashboardFilterSelectableValues)?
    CascadingControlConfiguration: (DashboardCascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
}

/// 
open class DashboardNumericFormatConfiguration {
    PercentageDisplayFormatConfiguration: (DashboardPercentageDisplayFormatConfiguration)?
    NumberDisplayFormatConfiguration: (DashboardNumberDisplayFormatConfiguration)?
    CurrencyDisplayFormatConfiguration: (DashboardCurrencyDisplayFormatConfiguration)?
}

/// 
open class DashboardInsightVisual {
    InsightConfiguration: (DashboardInsightConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    DataSetIdentifier: String|Mapping
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
}

/// 
open class DashboardIntegerParameterDeclaration {
    ValueWhenUnset: (DashboardIntegerValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<DashboardMappedDataSetParameter>)?
    ParameterValueType: DashboardParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (DashboardIntegerDefaultValues)?
}

typealias DashboardKPISparklineType = String|Mapping


/// 
open class DashboardLayoutConfiguration {
    GridLayout: (DashboardGridLayoutConfiguration)?
    FreeFormLayout: (DashboardFreeFormLayoutConfiguration)?
    SectionBasedLayout: (DashboardSectionBasedLayoutConfiguration)?
}

/// 
open class DashboardGaugeChartOptions {
    PrimaryValueDisplayType: (DashboardPrimaryValueDisplayType)?
    Comparison: (DashboardComparisonConfiguration)?
    ArcAxis: (DashboardArcAxisConfiguration)?
    Arc: (DashboardArcConfiguration)?
    PrimaryValueFontConfiguration: (DashboardFontConfiguration)?
}

/// 
open class DashboardPivotTotalOptions {
    ScrollStatus: (DashboardTableTotalsScrollStatus)?
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (DashboardTableCellStyle)?
    ValueCellStyle: (DashboardTableCellStyle)?
    MetricHeaderCellStyle: (DashboardTableCellStyle)?
    TotalsVisibility: (DashboardVisibility)?
    TotalAggregationOptions: (Listing<DashboardTotalAggregationOption>)?
    Placement: (DashboardTableTotalsPlacement)?
}

/// 
open class DashboardSheetControlLayoutConfiguration {
    GridLayout: (DashboardGridLayoutConfiguration)?
}

/// 
open class DashboardFilterOperationSelectedFieldsConfiguration {
    SelectedFields: (Listing<String|Mapping>)?
    SelectedFieldOptions: (DashboardSelectedFieldOptions)?
    SelectedColumns: (Listing<DashboardColumnIdentifier>)?
}

/// 
open class DashboardGradientStop {
    GradientOffset: Number|Mapping
    DataValue: (Number|Mapping)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardPivotTableOptions {
    CellStyle: (DashboardTableCellStyle)?
    DefaultCellWidth: (String|Mapping)?
    ColumnNamesVisibility: (DashboardVisibility)?
    RowHeaderStyle: (DashboardTableCellStyle)?
    ColumnHeaderStyle: (DashboardTableCellStyle)?
    CollapsedRowDimensionsVisibility: (DashboardVisibility)?
    RowsLayout: (DashboardPivotTableRowsLayout)?
    MetricPlacement: (DashboardPivotTableMetricPlacement)?
    ToggleButtonsVisibility: (DashboardVisibility)?
    RowsLabelOptions: (DashboardPivotTableRowsLabelOptions)?
    SingleMetricVisibility: (DashboardVisibility)?
    RowAlternateColorOptions: (DashboardRowAlternateColorOptions)?
    RowFieldNamesStyle: (DashboardTableCellStyle)?
}

typealias DashboardAxisBinding = String|Mapping


/// 
open class DashboardNumericAxisOptions {
    Scale: (DashboardAxisScale)?
    Range: (DashboardAxisDisplayRange)?
}

/// 
open class DashboardFilledMapConditionalFormatting {
    ConditionalFormattingOptions: Listing<DashboardFilledMapConditionalFormattingOption>
}

/// 
open class DashboardNumericRangeFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    IncludeMaximum: (Boolean|Mapping)?
    SelectAllOptions: (DashboardNumericFilterSelectAllOptions)?
    AggregationFunction: (DashboardAggregationFunction)?
    Column: DashboardColumnIdentifier
    IncludeMinimum: (Boolean|Mapping)?
    RangeMinimum: (DashboardNumericRangeFilterValue)?
    RangeMaximum: (DashboardNumericRangeFilterValue)?
    NullOption: DashboardFilterNullOption
}

/// 
open class DashboardReferenceLineLabelConfiguration {
    CustomLabelConfiguration: (DashboardReferenceLineCustomLabelConfiguration)?
    FontConfiguration: (DashboardFontConfiguration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    HorizontalPosition: (DashboardReferenceLineLabelHorizontalPosition)?
    VerticalPosition: (DashboardReferenceLineLabelVerticalPosition)?
    ValueLabelConfiguration: (DashboardReferenceLineValueLabelConfiguration)?
}

typealias DashboardWordCloudWordPadding = String|Mapping


/// 
open class DashboardExplicitHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<DashboardColumnIdentifier>
    DrillDownFilters: (Listing<DashboardDrillDownFilter>)?
}

/// 
open class DashboardFieldSeriesItem {
    FieldId: String|Mapping
    AxisBinding: DashboardAxisBinding
    Settings: (DashboardLineChartSeriesSettings)?
}

/// 
open class DashboardInsightConfiguration {
    Computations: (Listing<DashboardComputation>)?
    CustomNarrative: (DashboardCustomNarrativeOptions)?
}

/// 
open class DashboardRadarChartAreaStyleSettings {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardDataPointDrillUpDownOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardPivotTableFieldOption {
    Visibility: (DashboardVisibility)?
    FieldId: String|Mapping
    CustomLabel: (String|Mapping)?
}

/// 
open class DashboardStringParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<String|Mapping>
}

/// 
open class DashboardPivotTableFieldOptions {
    SelectedFieldOptions: (Listing<DashboardPivotTableFieldOption>)?
    DataPathOptions: (Listing<DashboardPivotTableDataPathOption>)?
    CollapseStateOptions: (Listing<DashboardPivotTableFieldCollapseStateOption>)?
}

typealias DashboardTargetVisualOptions = String|Mapping


/// 
open class DashboardCustomContentConfiguration {
    ContentUrl: (String|Mapping)?
    ContentType: (DashboardCustomContentType)?
    ImageScaling: (DashboardCustomContentImageScalingConfiguration)?
}

/// 
open class DashboardDrillDownFilter {
    NumericEqualityFilter: (DashboardNumericEqualityDrillDownFilter)?
    CategoryFilter: (DashboardCategoryDrillDownFilter)?
    TimeRangeFilter: (DashboardTimeRangeDrillDownFilter)?
}

/// 
open class DashboardFilterListConfiguration {
    MatchOperator: DashboardCategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
    SelectAllOptions: (DashboardCategoryFilterSelectAllOptions)?
    NullOption: (DashboardFilterNullOption)?
}

/// 
open class DashboardGridLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (DashboardGridLayoutScreenCanvasSizeOptions)?
}

typealias DashboardPaperSize = String|Mapping


/// 
open class DashboardSheetControlLayout {
    Configuration: DashboardSheetControlLayoutConfiguration
}

/// 
open class DashboardBarChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardBarChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
}

/// 
open class DashboardSimpleClusterMarker {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardFilledMapConditionalFormattingOption {
    Shape: DashboardFilledMapShapeConditionalFormatting
}

/// 
open class DashboardFilterScopeConfiguration {
    SelectedSheets: (DashboardSelectedSheetsFilterScopeConfiguration)?
    AllSheets: (DashboardAllSheetsFilterScopeConfiguration)?
}

/// 
open class DashboardGeospatialMapAggregatedFieldWells {
    Colors: (Listing<DashboardDimensionField>)?
    Geospatial: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardGeospatialMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardGeospatialMapConfiguration)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    Actions: (Listing<DashboardVisualCustomAction>)?
}

/// 
open class DashboardDataPathLabelType {
    Visibility: (DashboardVisibility)?
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
}

/// 
open class DashboardFontConfiguration {
    FontSize: (DashboardFontSize)?
    FontDecoration: (DashboardFontDecoration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    FontWeight: (DashboardFontWeight)?
    FontStyle: (DashboardFontStyle)?
}

/// 
open class DashboardPivotTableConditionalFormattingScope {
    Role: (DashboardPivotTableConditionalFormattingScopeRole)?
}

typealias DashboardWidgetStatus = String|Mapping


/// 
open class DashboardDataPathType {
    PivotTableDataPathType: (DashboardPivotTableDataPathType)?
}

/// 
open class DashboardNegativeValueConfiguration {
    DisplayMode: DashboardNegativeValueDisplayMode
}

typealias DashboardTopBottomComputationType = String|Mapping


typealias DashboardTopBottomSortOrder = String|Mapping


/// 
open class DashboardTooltipItem {
    FieldTooltipItem: (DashboardFieldTooltipItem)?
    ColumnTooltipItem: (DashboardColumnTooltipItem)?
}

/// 
open class DashboardComboChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardComboChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
}

/// 
open class DashboardGrowthRateComputation {
    Name: (String|Mapping)?
    Time: (DashboardDimensionField)?
    Value: (DashboardMeasureField)?
    PeriodSize: (Number|Mapping)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardNullValueFormatConfiguration {
    NullString: String|Mapping
}

typealias DashboardReferenceLinePatternType = String|Mapping


/// 
open class DashboardSmallMultiplesAxisProperties {
    Scale: (DashboardSmallMultiplesAxisScale)?
    Placement: (DashboardSmallMultiplesAxisPlacement)?
}

/// 
open class DashboardSubtotalOptions {
    CustomLabel: (String|Mapping)?
    FieldLevel: (DashboardPivotTableSubtotalLevel)?
    FieldLevelOptions: (Listing<DashboardPivotTableFieldSubtotalOptions>)?
    TotalCellStyle: (DashboardTableCellStyle)?
    ValueCellStyle: (DashboardTableCellStyle)?
    MetricHeaderCellStyle: (DashboardTableCellStyle)?
    StyleTargets: (Listing<DashboardTableStyleTarget>)?
    TotalsVisibility: (DashboardVisibility)?
}

/// 
open class DashboardTableAggregatedFieldWells {
    GroupBy: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardTableVisual {
    ConditionalFormatting: (DashboardTableConditionalFormatting)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardTableConfiguration)?
}

/// 
open class DashboardDateTimeDefaultValues {
    DynamicValue: (DashboardDynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
    RollingDate: (DashboardRollingDateConfiguration)?
}

/// 
open class DashboardFilledMapVisual {
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardFilledMapConfiguration)?
    ConditionalFormatting: (DashboardFilledMapConditionalFormatting)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardFunnelChartVisual {
    ChartConfiguration: (DashboardFunnelChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
}

/// 
open class DashboardPeriodToDateComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DashboardDimensionField)?
    Value: (DashboardMeasureField)?
    PeriodTimeGranularity: (DashboardTimeGranularity)?
}

typealias DashboardTextWrap = String|Mapping


/// 
open class DashboardComboChartSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    CategoryItemsLimit: (DashboardItemsLimitConfiguration)?
    ColorSort: (Listing<DashboardFieldSortOptions>)?
    ColorItemsLimit: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardDateAxisOptions {
    MissingDateVisibility: (DashboardVisibility)?
}

/// 
open class DashboardLabelOptions {
    Visibility: (DashboardVisibility)?
    FontConfiguration: (DashboardFontConfiguration)?
    CustomLabel: (String|Mapping)?
}

typealias DashboardLayoutElementType = String|Mapping


/// 
open class DashboardRadarChartFieldWells {
    RadarChartAggregatedFieldWells: (DashboardRadarChartAggregatedFieldWells)?
}

/// 
open class DashboardAnchorDateConfiguration {
    AnchorOption: (DashboardAnchorOption)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class DashboardPivotTableRowsLabelOptions {
    Visibility: (DashboardVisibility)?
    CustomLabel: (String|Mapping)?
}

/// 
open class DashboardSheetDefinition {
    TextBoxes: (Listing<DashboardSheetTextBox>)?
    Layouts: (Listing<DashboardLayout>)?
    ContentType: (DashboardSheetContentType)?
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Description: (String|Mapping)?
    ParameterControls: (Listing<DashboardParameterControl>)?
    FilterControls: (Listing<DashboardFilterControl>)?
    Title: (String|Mapping)?
    Name: (String|Mapping)?
    Visuals: (Listing<DashboardVisual>)?
    SheetControlLayouts: (Listing<DashboardSheetControlLayout>)?
}

typealias DashboardTableFieldIconSetType = String|Mapping


/// 
open class DashboardTableRowConditionalFormatting {
    BackgroundColor: (DashboardConditionalFormattingColor)?
    TextColor: (DashboardConditionalFormattingColor)?
}

/// 
open class DashboardTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias DashboardAnchorOption = String|Mapping


/// 
open class DashboardDashboardVersion {
    Errors: (Listing<DashboardDashboardError>)?
    VersionNumber: (Number|Mapping)?
    Arn: (String|Mapping)?
    DataSetArns: (Listing<String|Mapping>)?
    ThemeArn: (String|Mapping)?
    Sheets: (Listing<DashboardSheet>)?
    CreatedTime: (String|Mapping)?
    Status: (DashboardResourceStatus)?
    SourceEntityArn: (String|Mapping)?
    Description: (String|Mapping)?
}

/// 
open class DashboardLineChartDefaultSeriesSettings {
    AxisBinding: (DashboardAxisBinding)?
    LineStyleSettings: (DashboardLineChartLineStyleSettings)?
    MarkerStyleSettings: (DashboardLineChartMarkerStyleSettings)?
}

/// 
open class DashboardSheetVisualScopingConfiguration {
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Scope: DashboardFilterVisualScope
    VisualIds: (Listing<String|Mapping>)?
}

typealias DashboardValueWhenUnsetOption = String|Mapping


/// 
open class DashboardVisualCustomAction {
    Name: String|Mapping
    Status: (DashboardWidgetStatus)?
    Trigger: DashboardVisualCustomActionTrigger
    ActionOperations: Listing<DashboardVisualCustomActionOperation>
    CustomActionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardArcAxisDisplayRange {
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
}

/// 
open class DashboardConditionalFormattingGradientColor {
    Expression: String|Mapping
    Color: DashboardGradientColor
}

typealias DashboardCustomContentType = String|Mapping


/// 
open class DashboardFreeFormLayoutScreenCanvasSizeOptions {
    OptimizedViewPortWidth: String|Mapping
}

typealias DashboardVerticalTextAlignment = String|Mapping


/// 
open class DashboardArcAxisConfiguration {
    Range: (DashboardArcAxisDisplayRange)?
    ReserveRange: (Number|Mapping)?
}

typealias DashboardNumericSeparatorSymbol = String|Mapping


/// 
open class DashboardPivotTableAggregatedFieldWells {
    Rows: (Listing<DashboardDimensionField>)?
    Columns: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardTableConfiguration {
    TableOptions: (DashboardTableOptions)?
    TotalOptions: (DashboardTotalOptions)?
    FieldOptions: (DashboardTableFieldOptions)?
    PaginatedReportOptions: (DashboardTablePaginatedReportOptions)?
    TableInlineVisualizations: (Listing<DashboardTableInlineVisualization>)?
    FieldWells: (DashboardTableFieldWells)?
    SortConfiguration: (DashboardTableSortConfiguration)?
}

/// 
open class DashboardDataLabelOptions {
    MeasureLabelVisibility: (DashboardVisibility)?
    DataLabelTypes: (Listing<DashboardDataLabelType>)?
    Position: (DashboardDataLabelPosition)?
    LabelFontConfiguration: (DashboardFontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Overlap: (DashboardDataLabelOverlap)?
    TotalsVisibility: (DashboardVisibility)?
    Visibility: (DashboardVisibility)?
    CategoryLabelVisibility: (DashboardVisibility)?
    LabelContent: (DashboardDataLabelContent)?
}

/// 
open class DashboardGaugeChartArcConditionalFormatting {
    ForegroundColor: (DashboardConditionalFormattingColor)?
}

/// 
open class DashboardTableFieldCustomTextContent {
    Value: (String|Mapping)?
    FontConfiguration: DashboardFontConfiguration
}

typealias DashboardVisualCustomActionTrigger = String|Mapping


/// 
open class DashboardAxisDisplayOptions {
    AxisLineVisibility: (DashboardVisibility)?
    GridLineVisibility: (DashboardVisibility)?
    DataOptions: (DashboardAxisDataOptions)?
    ScrollbarOptions: (DashboardScrollBarOptions)?
    AxisOffset: (String|Mapping)?
    TickLabelOptions: (DashboardAxisTickLabelOptions)?
}

/// 
open class DashboardDateDimensionField {
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
    DateGranularity: (DashboardTimeGranularity)?
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (DashboardDateTimeFormatConfiguration)?
}

/// 
open class DashboardPredefinedHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<DashboardColumnIdentifier>
    DrillDownFilters: (Listing<DashboardDrillDownFilter>)?
}

/// 
open class DashboardColumnIdentifier {
    DataSetIdentifier: String|Mapping
    ColumnName: String|Mapping
}

typealias DashboardLineChartLineStyle = String|Mapping


typealias DashboardResizeOption = String|Mapping


/// 
open class DashboardTableUnaggregatedFieldWells {
    Values: (Listing<DashboardUnaggregatedField>)?
}

/// 
open class DashboardScatterPlotCategoricallyAggregatedFieldWells {
    XAxis: (Listing<DashboardMeasureField>)?
    YAxis: (Listing<DashboardMeasureField>)?
    Category: (Listing<DashboardDimensionField>)?
    Size: (Listing<DashboardMeasureField>)?
    Label: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardArcOptions {
    ArcThickness: (DashboardArcThickness)?
}

/// 
open class DashboardCascadingControlConfiguration {
    SourceControls: (Listing<DashboardCascadingControlSource>)?
}

typealias DashboardFontWeightName = String|Mapping


/// 
open class DashboardGeospatialHeatmapDataColor {
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
}

/// 
open class DashboardTablePinnedFieldOptions {
    PinnedLeftFields: (Listing<String|Mapping>)?
}

/// 
open class DashboardTopBottomMoversComputation {
    Name: (String|Mapping)?
    Time: (DashboardDimensionField)?
    Category: (DashboardDimensionField)?
    Value: (DashboardMeasureField)?
    MoverSize: (Number|Mapping)?
    SortOrder: (DashboardTopBottomSortOrder)?
    Type: DashboardTopBottomComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardDashboardSourceEntity {
    SourceTemplate: (DashboardDashboardSourceTemplate)?
}

/// 
open class DashboardFunnelChartSortConfiguration {
    CategoryItemsLimit: (DashboardItemsLimitConfiguration)?
    CategorySort: (Listing<DashboardFieldSortOptions>)?
}

typealias DashboardMissingDataTreatmentOption = String|Mapping


/// 
open class DashboardSheetControlsOption {
    VisibilityState: (DashboardDashboardUIState)?
}

/// 
open class DashboardClusterMarkerConfiguration {
    ClusterMarker: (DashboardClusterMarker)?
}

/// 
open class DashboardCustomFilterListConfiguration {
    SelectAllOptions: (DashboardCategoryFilterSelectAllOptions)?
    NullOption: DashboardFilterNullOption
    MatchOperator: DashboardCategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
}

/// 
open class DashboardShortFormatText {
    PlainText: (String|Mapping)?
    RichText: (String|Mapping)?
}

/// 
open class DashboardTextAreaControlDisplayOptions {
    TitleOptions: (DashboardLabelOptions)?
    PlaceholderOptions: (DashboardTextControlPlaceholderOptions)?
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
}

/// 
open class DashboardVisualAxisSortOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardSectionBasedLayoutCanvasSizeOptions {
    PaperCanvasSizeOptions: (DashboardSectionBasedLayoutPaperCanvasSizeOptions)?
}

/// 
open class DashboardSeriesItem {
    FieldSeriesItem: (DashboardFieldSeriesItem)?
    DataFieldSeriesItem: (DashboardDataFieldSeriesItem)?
}

/// 
open class DashboardAdHocFilteringOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardConditionalFormattingIcon {
    IconSet: (DashboardConditionalFormattingIconSet)?
    CustomCondition: (DashboardConditionalFormattingCustomIconCondition)?
}

/// 
open class DashboardItemsLimitConfiguration {
    ItemsLimit: (Number|Mapping)?
    OtherCategories: (DashboardOtherCategories)?
}

/// 
open class DashboardMetricComparisonComputation {
    TargetValue: (DashboardMeasureField)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DashboardDimensionField)?
    FromValue: (DashboardMeasureField)?
}

/// 
open class DashboardPivotTableFieldSubtotalOptions {
    FieldId: (String|Mapping)?
}

/// 
open class DashboardRadarChartSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    CategoryItemsLimit: (DashboardItemsLimitConfiguration)?
    ColorSort: (Listing<DashboardFieldSortOptions>)?
    ColorItemsLimit: (DashboardItemsLimitConfiguration)?
}

typealias DashboardTooltipTitleType = String|Mapping


/// 
open class DashboardWaterfallChartSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    BreakdownItemsLimit: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardGeospatialCoordinateBounds {
    North: Number|Mapping
    South: Number|Mapping
    West: Number|Mapping
    East: Number|Mapping
}

/// 
open class DashboardIntegerValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (DashboardValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

typealias DashboardParameterValueType = String|Mapping


/// 
open class DashboardPivotTableConfiguration {
    FieldWells: (DashboardPivotTableFieldWells)?
    SortConfiguration: (DashboardPivotTableSortConfiguration)?
    TableOptions: (DashboardPivotTableOptions)?
    TotalOptions: (DashboardPivotTableTotalOptions)?
    FieldOptions: (DashboardPivotTableFieldOptions)?
    PaginatedReportOptions: (DashboardPivotTablePaginatedReportOptions)?
}

/// 
open class DashboardTablePaginatedReportOptions {
    VerticalOverflowVisibility: (DashboardVisibility)?
    OverflowColumnHeaderVisibility: (DashboardVisibility)?
}

/// 
open class DashboardTextFieldControlDisplayOptions {
    TitleOptions: (DashboardLabelOptions)?
    PlaceholderOptions: (DashboardTextControlPlaceholderOptions)?
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
}

typealias DashboardHorizontalTextAlignment = String|Mapping


/// 
open class DashboardLineChartAggregatedFieldWells {
    Colors: (Listing<DashboardDimensionField>)?
    SmallMultiples: (Listing<DashboardDimensionField>)?
    Category: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

typealias DashboardMapZoomMode = String|Mapping


/// 
open class DashboardSectionBasedLayoutConfiguration {
    BodySections: Listing<DashboardBodySectionConfiguration>
    FooterSections: Listing<DashboardHeaderFooterSectionConfiguration>
    CanvasSizeOptions: DashboardSectionBasedLayoutCanvasSizeOptions
    HeaderSections: Listing<DashboardHeaderFooterSectionConfiguration>
}

/// 
open class DashboardKPIProgressBarConditionalFormatting {
    ForegroundColor: (DashboardConditionalFormattingColor)?
}

/// 
open class DashboardParameterControl {
    DateTimePicker: (DashboardParameterDateTimePickerControl)?
    List: (DashboardParameterListControl)?
    Dropdown: (DashboardParameterDropDownControl)?
    TextField: (DashboardParameterTextFieldControl)?
    TextArea: (DashboardParameterTextAreaControl)?
    Slider: (DashboardParameterSliderControl)?
}

typealias DashboardSmallMultiplesAxisScale = String|Mapping


typealias DashboardStyledCellType = String|Mapping


typealias DashboardArcThickness = String|Mapping


/// 
open class DashboardCategoricalMeasureField {
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
    AggregationFunction: (DashboardCategoricalAggregationFunction)?
    FormatConfiguration: (DashboardStringFormatConfiguration)?
}

/// 
open class DashboardDateTimeHierarchy {
    HierarchyId: String|Mapping
    DrillDownFilters: (Listing<DashboardDrillDownFilter>)?
}

/// 
open class DashboardDynamicDefaultValue {
    UserNameColumn: (DashboardColumnIdentifier)?
    GroupNameColumn: (DashboardColumnIdentifier)?
    DefaultValueColumn: DashboardColumnIdentifier
}

/// 
open class DashboardTableStyleTarget {
    CellType: DashboardStyledCellType
}

/// 
open class DashboardTreeMapAggregatedFieldWells {
    Groups: (Listing<DashboardDimensionField>)?
    Sizes: (Listing<DashboardMeasureField>)?
    Colors: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardKPISparklineOptions {
    Visibility: (DashboardVisibility)?
    Type: DashboardKPISparklineType
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    TooltipVisibility: (DashboardVisibility)?
}

/// 
open class DashboardKPIVisual {
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardKPIConfiguration)?
    ConditionalFormatting: (DashboardKPIConditionalFormatting)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardScatterPlotUnaggregatedFieldWells {
    Label: (Listing<DashboardDimensionField>)?
    XAxis: (Listing<DashboardDimensionField>)?
    YAxis: (Listing<DashboardDimensionField>)?
    Size: (Listing<DashboardMeasureField>)?
    Category: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardScrollBarOptions {
    Visibility: (DashboardVisibility)?
    VisibleRange: (DashboardVisibleRangeOptions)?
}

/// 
open class DashboardBodySectionConfiguration {
    Content: DashboardBodySectionContent
    Style: (DashboardSectionStyle)?
    PageBreakConfiguration: (DashboardSectionPageBreakConfiguration)?
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardFormatConfiguration {
    StringFormatConfiguration: (DashboardStringFormatConfiguration)?
    NumberFormatConfiguration: (DashboardNumberFormatConfiguration)?
    DateTimeFormatConfiguration: (DashboardDateTimeFormatConfiguration)?
}

/// 
open class DashboardFreeFormSectionLayoutConfiguration {
    Elements: Listing<DashboardFreeFormLayoutElement>
}

/// 
open class DashboardKPIFieldWells {
    Values: (Listing<DashboardMeasureField>)?
    TargetValues: (Listing<DashboardMeasureField>)?
    TrendGroups: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardTableFieldLinkContentConfiguration {
    CustomTextContent: (DashboardTableFieldCustomTextContent)?
    CustomIconContent: (DashboardTableFieldCustomIconContent)?
}

/// 
open class DashboardVisualCustomActionOperation {
    FilterOperation: (DashboardCustomActionFilterOperation)?
    NavigationOperation: (DashboardCustomActionNavigationOperation)?
    URLOperation: (DashboardCustomActionURLOperation)?
    SetParametersOperation: (DashboardCustomActionSetParametersOperation)?
}

/// 
open class DashboardTableFieldImageConfiguration {
    SizingOptions: (DashboardTableCellImageSizingConfiguration)?
}

/// 
open class DashboardExportToCSVOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

typealias DashboardLegendPosition = String|Mapping


/// 
open class DashboardPieChartAggregatedFieldWells {
    Category: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
    SmallMultiples: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardRadarChartVisual {
    ChartConfiguration: (DashboardRadarChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
}

/// 
open class DashboardAttributeAggregationFunction {
    SimpleAttributeAggregation: (DashboardSimpleAttributeAggregationFunction)?
    ValueForMultipleValues: (String|Mapping)?
}

/// 
open class DashboardFieldSortOptions {
    FieldSort: (DashboardFieldSort)?
    ColumnSort: (DashboardColumnSort)?
}

/// 
open class DashboardHistogramVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardHistogramConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
}

/// 
open class DashboardAnalysisDefaults {
    DefaultNewSheetConfiguration: DashboardDefaultNewSheetConfiguration
}

/// 
open class DashboardPercentageDisplayFormatConfiguration {
    NegativeValueConfiguration: (DashboardNegativeValueConfiguration)?
    NullValueFormatConfiguration: (DashboardNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (DashboardNumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (DashboardDecimalPlacesConfiguration)?
}

/// 
open class DashboardSheetControlInfoIconLabelOptions {
    Visibility: (DashboardVisibility)?
    InfoIconText: (String|Mapping)?
}

typealias DashboardSimpleTotalAggregationFunction = String|Mapping


/// 
open class DashboardReferenceLineDataConfiguration {
    StaticConfiguration: (DashboardReferenceLineStaticDataConfiguration)?
    DynamicConfiguration: (DashboardReferenceLineDynamicDataConfiguration)?
    AxisBinding: (DashboardAxisBinding)?
    SeriesType: (DashboardReferenceLineSeriesType)?
}

/// 
open class DashboardSameSheetTargetVisualConfiguration {
    TargetVisuals: (Listing<String|Mapping>)?
    TargetVisualOptions: (DashboardTargetVisualOptions)?
}

/// 
open class DashboardSankeyDiagramFieldWells {
    SankeyDiagramAggregatedFieldWells: (DashboardSankeyDiagramAggregatedFieldWells)?
}

/// 
open class DashboardAxisDisplayMinMaxRange {
    Minimum: (Number|Mapping)?
    Maximum: (Number|Mapping)?
}

/// 
open class DashboardCustomNarrativeOptions {
    Narrative: String|Mapping
}

/// 
open class DashboardHeatMapConfiguration {
    SortConfiguration: (DashboardHeatMapSortConfiguration)?
    RowLabelOptions: (DashboardChartAxisLabelOptions)?
    ColumnLabelOptions: (DashboardChartAxisLabelOptions)?
    ColorScale: (DashboardColorScale)?
    Legend: (DashboardLegendOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    FieldWells: (DashboardHeatMapFieldWells)?
}

/// 
open class DashboardPaginationConfiguration {
    PageNumber: Number|Mapping
    PageSize: Number|Mapping
}

/// 
open class DashboardKPISortConfiguration {
    TrendGroupSort: (Listing<DashboardFieldSortOptions>)?
}

/// 
open class DashboardLineChartSortConfiguration {
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    CategoryItemsLimitConfiguration: (DashboardItemsLimitConfiguration)?
    ColorItemsLimitConfiguration: (DashboardItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<DashboardFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardNumericalAggregationFunction {
    PercentileAggregation: (DashboardPercentileAggregation)?
    SimpleNumericalAggregation: (DashboardSimpleNumericalAggregationFunction)?
}

typealias DashboardSimpleNumericalAggregationFunction = String|Mapping


/// 
open class DashboardCategoryDrillDownFilter {
    Column: DashboardColumnIdentifier
    CategoryValues: Listing<String|Mapping>
}

/// 
open class DashboardClusterMarker {
    SimpleClusterMarker: (DashboardSimpleClusterMarker)?
}

typealias DashboardCrossDatasetTypes = String|Mapping


/// 
open class DashboardDataPointTooltipOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

typealias DashboardTableCellImageScalingConfiguration = String|Mapping


/// 
open class DashboardTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<DashboardTableConditionalFormattingOption>)?
}

/// 
open class DashboardTableSortConfiguration {
    PaginationConfiguration: (DashboardPaginationConfiguration)?
    RowSort: (Listing<DashboardFieldSortOptions>)?
}

/// 
open class DashboardSetParameterValueConfiguration {
    DestinationParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Value: DashboardDestinationParameterValueConfiguration
}

/// 
open class DashboardGaugeChartConditionalFormatting {
    ConditionalFormattingOptions: (Listing<DashboardGaugeChartConditionalFormattingOption>)?
}

/// 
open class DashboardSecondaryValueOptions {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardFontWeight {
    Name: (DashboardFontWeightName)?
}

/// 
open class DashboardRadarChartConfiguration {
    BaseSeriesSettings: (DashboardRadarChartSeriesSettings)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    ColorAxis: (DashboardAxisDisplayOptions)?
    AxesRangeScale: (DashboardRadarChartAxesRangeScale)?
    ColorLabelOptions: (DashboardChartAxisLabelOptions)?
    Legend: (DashboardLegendOptions)?
    Shape: (DashboardRadarChartShape)?
    StartAngle: (Number|Mapping)?
    VisualPalette: (DashboardVisualPalette)?
    AlternateBandEvenColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    SortConfiguration: (DashboardRadarChartSortConfiguration)?
    CategoryAxis: (DashboardAxisDisplayOptions)?
    FieldWells: (DashboardRadarChartFieldWells)?
    AlternateBandColorsVisibility: (DashboardVisibility)?
    AlternateBandOddColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardSectionLayoutConfiguration {
    FreeFormLayout: DashboardFreeFormSectionLayoutConfiguration
}

/// 
open class DashboardEmptyVisual {
    DataSetIdentifier: String|Mapping
    Actions: (Listing<DashboardVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

typealias DashboardOtherCategories = String|Mapping


/// 
open class DashboardTreeMapSortConfiguration {
    TreeMapSort: (Listing<DashboardFieldSortOptions>)?
    TreeMapGroupItemsLimitConfiguration: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardGaugeChartPrimaryValueConditionalFormatting {
    TextColor: (DashboardConditionalFormattingColor)?
    Icon: (DashboardConditionalFormattingIcon)?
}

typealias DashboardReferenceLineLabelHorizontalPosition = String|Mapping


/// 
open class DashboardSectionBasedLayoutPaperCanvasSizeOptions {
    PaperSize: (DashboardPaperSize)?
    PaperOrientation: (DashboardPaperOrientation)?
    PaperMargin: (DashboardSpacing)?
}

/// 
open class DashboardSheetElementRenderingRule {
    Expression: String|Mapping
    ConfigurationOverrides: DashboardSheetElementConfigurationOverrides
}

/// 
open class DashboardBodySectionContent {
    Layout: (DashboardSectionLayoutConfiguration)?
}

/// 
open class DashboardFilterSliderControl {
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DashboardSliderControlDisplayOptions)?
    Type: (DashboardSheetControlSliderType)?
    MaximumValue: Number|Mapping
}

/// 
open class DashboardFilterTextFieldControl {
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DashboardTextFieldControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardFreeFormLayoutElement {
    ElementType: DashboardLayoutElementType
    XAxisLocation: String|Mapping
    Width: String|Mapping
    RenderingRules: (Listing<DashboardSheetElementRenderingRule>)?
    BorderStyle: (DashboardFreeFormLayoutElementBorderStyle)?
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    YAxisLocation: String|Mapping
    Height: String|Mapping
    Visibility: (DashboardVisibility)?
    SelectedBorderStyle: (DashboardFreeFormLayoutElementBorderStyle)?
    BackgroundStyle: (DashboardFreeFormLayoutElementBackgroundStyle)?
    LoadingAnimation: (DashboardLoadingAnimation)?
}

/// 
open class DashboardWhatIfPointScenario {
    Date: String|Mapping
    Value: Number|Mapping
}

/// 
open class DashboardCustomColor {
    FieldValue: (String|Mapping)?
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
    SpecialValue: (DashboardSpecialValue)?
}

/// 
open class DashboardKPIConditionalFormattingOption {
    ActualValue: (DashboardKPIActualValueConditionalFormatting)?
    ComparisonValue: (DashboardKPIComparisonValueConditionalFormatting)?
    PrimaryValue: (DashboardKPIPrimaryValueConditionalFormatting)?
    ProgressBar: (DashboardKPIProgressBarConditionalFormatting)?
}

/// 
open class DashboardTableCellImageSizingConfiguration {
    TableCellImageScalingConfiguration: (DashboardTableCellImageScalingConfiguration)?
}

/// 
open class DashboardTimeRangeFilterValue {
    StaticValue: (String|Mapping)?
    RollingDate: (DashboardRollingDateConfiguration)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class DashboardVisibleRangeOptions {
    PercentRange: (DashboardPercentVisibleRange)?
}

typealias DashboardArcThicknessOptions = String|Mapping


/// 
open class DashboardDataLabelType {
    FieldLabelType: (DashboardFieldLabelType)?
    DataPathLabelType: (DashboardDataPathLabelType)?
    RangeEndsLabelType: (DashboardRangeEndsLabelType)?
    MinimumLabelType: (DashboardMinimumLabelType)?
    MaximumLabelType: (DashboardMaximumLabelType)?
}

/// 
open class DashboardRadarChartAggregatedFieldWells {
    Color: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
    Category: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardTableFieldCustomIconContent {
    Icon: (DashboardTableFieldIconSetType)?
}

/// 
open class DashboardParameterDeclaration {
    IntegerParameterDeclaration: (DashboardIntegerParameterDeclaration)?
    DateTimeParameterDeclaration: (DashboardDateTimeParameterDeclaration)?
    StringParameterDeclaration: (DashboardStringParameterDeclaration)?
    DecimalParameterDeclaration: (DashboardDecimalParameterDeclaration)?
}

/// 
open class DashboardPivotTableTotalOptions {
    RowSubtotalOptions: (DashboardSubtotalOptions)?
    ColumnSubtotalOptions: (DashboardSubtotalOptions)?
    RowTotalOptions: (DashboardPivotTotalOptions)?
    ColumnTotalOptions: (DashboardPivotTotalOptions)?
}

typealias DashboardRelativeDateType = String|Mapping


typealias DashboardSheetControlListType = String|Mapping


/// 
open class DashboardBinWidthOptions {
    Value: (Number|Mapping)?
    BinCountLimit: (Number|Mapping)?
}

/// 
open class DashboardConditionalFormattingIconDisplayConfiguration {
    IconDisplayOption: (DashboardConditionalFormattingIconDisplayOption)?
}

/// 
open class DashboardTableFieldURLConfiguration {
    LinkConfiguration: (DashboardTableFieldLinkConfiguration)?
    ImageConfiguration: (DashboardTableFieldImageConfiguration)?
}

/// 
open class DashboardCategoryFilter {
    Column: DashboardColumnIdentifier
    Configuration: DashboardCategoryFilterConfiguration
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardDecimalParameterDeclaration {
    DefaultValues: (DashboardDecimalDefaultValues)?
    ValueWhenUnset: (DashboardDecimalValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<DashboardMappedDataSetParameter>)?
    ParameterValueType: DashboardParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class DashboardDefaultSectionBasedLayoutConfiguration {
    CanvasSizeOptions: DashboardSectionBasedLayoutCanvasSizeOptions
}

/// 
open class DashboardRollingDateConfiguration {
    DataSetIdentifier: (String|Mapping)?
    Expression: String|Mapping
}

/// 
open class DashboardFieldSort {
    FieldId: String|Mapping
    Direction: DashboardSortDirection
}

/// 
open class DashboardNumberFormatConfiguration {
    FormatConfiguration: (DashboardNumericFormatConfiguration)?
}

/// 
open class DashboardNumericEqualityFilter {
    AggregationFunction: (DashboardAggregationFunction)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: DashboardFilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: DashboardColumnIdentifier
    Value: (Number|Mapping)?
    SelectAllOptions: (DashboardNumericFilterSelectAllOptions)?
    MatchOperator: DashboardNumericEqualityMatchOperator
}

/// 
open class DashboardSheet {
    Name: (String|Mapping)?
    SheetId: (String(matches(Regex(#"[\w\-]+"#)))|Mapping)?
}

/// 
open class DashboardAggregationSortConfiguration {
    Column: DashboardColumnIdentifier
    SortDirection: DashboardSortDirection
    AggregationFunction: (DashboardAggregationFunction)?
}

/// 
open class DashboardAssetOptions {
    Timezone: (String|Mapping)?
    WeekStart: (DashboardDayOfTheWeek)?
}

typealias DashboardConditionalFormattingIconSetType = String|Mapping


/// 
open class DashboardDataPathColor {
    TimeGranularity: (DashboardTimeGranularity)?
    Element: DashboardDataPathValue
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
}

/// 
open class DashboardFilledMapShapeConditionalFormatting {
    FieldId: String|Mapping
    Format: (DashboardShapeConditionalFormat)?
}

/// 
open class DashboardFilterListControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DashboardListControlDisplayOptions)?
    Type: (DashboardSheetControlListType)?
    SelectableValues: (DashboardFilterSelectableValues)?
    CascadingControlConfiguration: (DashboardCascadingControlConfiguration)?
}

/// 
open class DashboardPanelConfiguration {
    BackgroundVisibility: (DashboardVisibility)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    Title: (DashboardPanelTitleOptions)?
    BorderVisibility: (DashboardVisibility)?
    BorderStyle: (DashboardPanelBorderStyle)?
    GutterSpacing: (String|Mapping)?
    BorderThickness: (String|Mapping)?
    BorderColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    GutterVisibility: (DashboardVisibility)?
}

/// 
open class DashboardBarChartConfiguration {
    ValueAxis: (DashboardAxisDisplayOptions)?
    ColorLabelOptions: (DashboardChartAxisLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    ContributionAnalysisDefaults: (Listing<DashboardContributionAnalysisDefault>)?
    VisualPalette: (DashboardVisualPalette)?
    CategoryAxis: (DashboardAxisDisplayOptions)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    ValueLabelOptions: (DashboardChartAxisLabelOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    FieldWells: (DashboardBarChartFieldWells)?
    SortConfiguration: (DashboardBarChartSortConfiguration)?
    Orientation: (DashboardBarChartOrientation)?
    SmallMultiplesOptions: (DashboardSmallMultiplesOptions)?
    Legend: (DashboardLegendOptions)?
    BarsArrangement: (DashboardBarsArrangement)?
    ReferenceLines: (Listing<DashboardReferenceLine>)?
}

/// 
open class DashboardBarChartSortConfiguration {
    ColorSort: (Listing<DashboardFieldSortOptions>)?
    ColorItemsLimit: (DashboardItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<DashboardFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (DashboardItemsLimitConfiguration)?
    CategorySort: (Listing<DashboardFieldSortOptions>)?
    CategoryItemsLimit: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardDashboardVersionDefinition {
    ParameterDeclarations: (Listing<DashboardParameterDeclaration>)?
    FilterGroups: (Listing<DashboardFilterGroup>)?
    ColumnConfigurations: (Listing<DashboardColumnConfiguration>)?
    AnalysisDefaults: (DashboardAnalysisDefaults)?
    Options: (DashboardAssetOptions)?
    DataSetIdentifierDeclarations: Listing<DashboardDataSetIdentifierDeclaration>
    Sheets: (Listing<DashboardSheetDefinition>)?
    CalculatedFields: (Listing<DashboardCalculatedField>)?
}

/// 
open class DashboardDefaultInteractiveLayoutConfiguration {
    Grid: (DashboardDefaultGridLayoutConfiguration)?
    FreeForm: (DashboardDefaultFreeFormLayoutConfiguration)?
}

/// 
open class DashboardCustomFilterConfiguration {
    SelectAllOptions: (DashboardCategoryFilterSelectAllOptions)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: DashboardFilterNullOption
    MatchOperator: DashboardCategoryFilterMatchOperator
    CategoryValue: (String|Mapping)?
}

/// 
open class DashboardFilter {
    CategoryFilter: (DashboardCategoryFilter)?
    NumericRangeFilter: (DashboardNumericRangeFilter)?
    NumericEqualityFilter: (DashboardNumericEqualityFilter)?
    TimeEqualityFilter: (DashboardTimeEqualityFilter)?
    TimeRangeFilter: (DashboardTimeRangeFilter)?
    RelativeDatesFilter: (DashboardRelativeDatesFilter)?
    TopBottomFilter: (DashboardTopBottomFilter)?
}

/// 
open class DashboardSheetElementConfigurationOverrides {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardPeriodOverPeriodComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DashboardDimensionField)?
    Value: (DashboardMeasureField)?
}

/// 
open class DashboardReferenceLineDynamicDataConfiguration {
    Column: DashboardColumnIdentifier
    MeasureAggregationFunction: (DashboardAggregationFunction)?
    Calculation: DashboardNumericalAggregationFunction
}

/// 
open class DashboardStringFormatConfiguration {
    NullValueFormatConfiguration: (DashboardNullValueFormatConfiguration)?
    NumericFormatConfiguration: (DashboardNumericFormatConfiguration)?
}

/// 
open class DashboardMaximumLabelType {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardResourcePermission {
    Principal: String|Mapping
    Actions: Listing<String|Mapping>
}

/// 
open class DashboardCustomValuesConfiguration {
    IncludeNullValue: (Boolean|Mapping)?
    CustomValues: DashboardCustomParameterValues
}

/// 
open class DashboardIntegerDefaultValues {
    DynamicValue: (DashboardDynamicDefaultValue)?
    StaticValues: (Listing<Number|Mapping>)?
}

/// 
open class DashboardKPIVisualLayoutOptions {
    StandardLayout: (DashboardKPIVisualStandardLayout)?
}

/// 
open class DashboardLoadingAnimation {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardPivotTableFieldWells {
    PivotTableAggregatedFieldWells: (DashboardPivotTableAggregatedFieldWells)?
}

typealias DashboardWordCloudCloudLayout = String|Mapping


typealias DashboardFontStyle = String|Mapping


/// 
open class DashboardForecastComputation {
    PredictionInterval: (Number|Mapping)?
    CustomSeasonalityValue: (Number|Mapping)?
    Value: (DashboardMeasureField)?
    PeriodsForward: (Number|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
    Seasonality: (DashboardForecastComputationSeasonality)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DashboardDimensionField)?
}

/// 
open class DashboardParameterDropDownControl {
    CascadingControlConfiguration: (DashboardCascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DashboardDropDownControlDisplayOptions)?
    Type: (DashboardSheetControlListType)?
    SelectableValues: (DashboardParameterSelectableValues)?
}

/// 
open class DashboardPieChartFieldWells {
    PieChartAggregatedFieldWells: (DashboardPieChartAggregatedFieldWells)?
}

/// 
open class DashboardHeatMapSortConfiguration {
    HeatMapRowSort: (Listing<DashboardFieldSortOptions>)?
    HeatMapColumnSort: (Listing<DashboardFieldSortOptions>)?
    HeatMapRowItemsLimitConfiguration: (DashboardItemsLimitConfiguration)?
    HeatMapColumnItemsLimitConfiguration: (DashboardItemsLimitConfiguration)?
}

/// 
open class DashboardTopBottomRankedComputation {
    Category: (DashboardDimensionField)?
    Value: (DashboardMeasureField)?
    ResultSize: (Number|Mapping)?
    Type: DashboardTopBottomComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
}

typealias DashboardWordCloudWordScaling = String|Mapping


/// 
open class DashboardBoxPlotChartConfiguration {
    PrimaryYAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    PrimaryYAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    Legend: (DashboardLegendOptions)?
    Tooltip: (DashboardTooltipOptions)?
    FieldWells: (DashboardBoxPlotFieldWells)?
    SortConfiguration: (DashboardBoxPlotSortConfiguration)?
    CategoryAxis: (DashboardAxisDisplayOptions)?
    VisualPalette: (DashboardVisualPalette)?
    BoxPlotOptions: (DashboardBoxPlotOptions)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    ReferenceLines: (Listing<DashboardReferenceLine>)?
}

/// 
open class DashboardBoxPlotOptions {
    StyleOptions: (DashboardBoxPlotStyleOptions)?
    OutlierVisibility: (DashboardVisibility)?
    AllDataPointsVisibility: (DashboardVisibility)?
}

/// 
open class DashboardFilterControl {
    TextArea: (DashboardFilterTextAreaControl)?
    Slider: (DashboardFilterSliderControl)?
    RelativeDateTime: (DashboardFilterRelativeDateTimeControl)?
    DateTimePicker: (DashboardFilterDateTimePickerControl)?
    List: (DashboardFilterListControl)?
    Dropdown: (DashboardFilterDropDownControl)?
    TextField: (DashboardFilterTextFieldControl)?
}

typealias DashboardWordCloudWordCasing = String|Mapping


/// 
open class DashboardScatterPlotVisual {
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardScatterPlotConfiguration)?
}

typealias DashboardSortDirection = String|Mapping


/// 
open class DashboardAxisLogarithmicScale {
    Base: (Number|Mapping)?
}

typealias DashboardDataLabelOverlap = String|Mapping


/// 
open class DashboardFilterDateTimePickerControl {
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DashboardDateTimePickerControlDisplayOptions)?
    Type: (DashboardSheetControlDateTimePickerType)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

typealias DashboardIcon = String|Mapping


/// 
open class DashboardNumberDisplayFormatConfiguration {
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (DashboardNumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (DashboardDecimalPlacesConfiguration)?
    NumberScale: (DashboardNumberScale)?
    NegativeValueConfiguration: (DashboardNegativeValueConfiguration)?
    NullValueFormatConfiguration: (DashboardNullValueFormatConfiguration)?
}

/// 
open class DashboardBoxPlotVisual {
    ChartConfiguration: (DashboardBoxPlotChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
}

/// 
open class DashboardGeospatialHeatmapConfiguration {
    HeatmapColor: (DashboardGeospatialHeatmapColorScale)?
}

/// 
open class DashboardLinkSharingConfiguration {
    Permissions: (Listing<DashboardResourcePermission>)?
}

/// 
open class DashboardListControlSearchOptions {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardGaugeChartConfiguration {
    GaugeChartOptions: (DashboardGaugeChartOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    TooltipOptions: (DashboardTooltipOptions)?
    VisualPalette: (DashboardVisualPalette)?
    FieldWells: (DashboardGaugeChartFieldWells)?
}

typealias DashboardPanelBorderStyle = String|Mapping


typealias DashboardRadarChartShape = String|Mapping


/// 
open class DashboardSectionStyle {
    Height: (String|Mapping)?
    Padding: (DashboardSpacing)?
}

/// 
open class DashboardBoxPlotStyleOptions {
    FillStyle: (DashboardBoxPlotFillStyle)?
}

/// 
open class DashboardDropDownControlDisplayOptions {
    SelectAllOptions: (DashboardListControlSelectAllOptions)?
    TitleOptions: (DashboardLabelOptions)?
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
}

/// 
open class DashboardMissingDataConfiguration {
    TreatmentOption: (DashboardMissingDataTreatmentOption)?
}

/// 
open class DashboardRelativeDatesFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: DashboardColumnIdentifier
    TimeGranularity: DashboardTimeGranularity
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: DashboardFilterNullOption
    ExcludePeriodConfiguration: (DashboardExcludePeriodConfiguration)?
    AnchorDateConfiguration: DashboardAnchorDateConfiguration
    MinimumGranularity: (DashboardTimeGranularity)?
    RelativeDateType: DashboardRelativeDateType
    RelativeDateValue: (Number|Mapping)?
}

/// 
open class DashboardReferenceLineCustomLabelConfiguration {
    CustomLabel: String(matches(Regex(#".*\S.*"#)))|Mapping
}

/// 
open class DashboardScatterPlotFieldWells {
    ScatterPlotCategoricallyAggregatedFieldWells: (DashboardScatterPlotCategoricallyAggregatedFieldWells)?
    ScatterPlotUnaggregatedFieldWells: (DashboardScatterPlotUnaggregatedFieldWells)?
}

/// 
open class DashboardTableCellConditionalFormatting {
    FieldId: String|Mapping
    TextFormat: (DashboardTextConditionalFormat)?
}

/// 
open class DashboardWhatIfRangeScenario {
    StartDate: String|Mapping
    EndDate: String|Mapping
    Value: Number|Mapping
}

/// 
open class DashboardVisualPalette {
    ChartColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    ColorMap: (Listing<DashboardDataPathColor>)?
}

/// 
open class DashboardKPIActualValueConditionalFormatting {
    TextColor: (DashboardConditionalFormattingColor)?
    Icon: (DashboardConditionalFormattingIcon)?
}

/// 
open class DashboardKPIConfiguration {
    SortConfiguration: (DashboardKPISortConfiguration)?
    KPIOptions: (DashboardKPIOptions)?
    FieldWells: (DashboardKPIFieldWells)?
}

/// 
open class DashboardParameterSelectableValues {
    LinkToDataSetColumn: (DashboardColumnIdentifier)?
    Values: (Listing<String|Mapping>)?
}

/// 
open class DashboardTotalAggregationComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Value: (DashboardMeasureField)?
}

/// 
open class DashboardListControlDisplayOptions {
    SearchOptions: (DashboardListControlSearchOptions)?
    SelectAllOptions: (DashboardListControlSelectAllOptions)?
    TitleOptions: (DashboardLabelOptions)?
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
}

/// 
open class DashboardRangeEndsLabelType {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardTooltipOptions {
    TooltipVisibility: (DashboardVisibility)?
    SelectedTooltipType: (DashboardSelectedTooltipType)?
    FieldBasedTooltip: (DashboardFieldBasedTooltip)?
}

/// 
open class DashboardWordCloudSortConfiguration {
    CategoryItemsLimit: (DashboardItemsLimitConfiguration)?
    CategorySort: (Listing<DashboardFieldSortOptions>)?
}

/// 
open class DashboardAxisDataOptions {
    DateAxisOptions: (DashboardDateAxisOptions)?
    NumericAxisOptions: (DashboardNumericAxisOptions)?
}

/// 
open class DashboardFilterRelativeDateTimeControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DashboardRelativeDateTimeControlDisplayOptions)?
}

/// 
open class DashboardFilterSelectableValues {
    Values: (Listing<String|Mapping>)?
}

/// 
open class DashboardLayout {
    Configuration: DashboardLayoutConfiguration
}

/// 
open class DashboardGeospatialMapConfiguration {
    WindowOptions: (DashboardGeospatialWindowOptions)?
    MapStyleOptions: (DashboardGeospatialMapStyleOptions)?
    PointStyleOptions: (DashboardGeospatialPointStyleOptions)?
    VisualPalette: (DashboardVisualPalette)?
    FieldWells: (DashboardGeospatialMapFieldWells)?
    Legend: (DashboardLegendOptions)?
    Tooltip: (DashboardTooltipOptions)?
}

/// 
open class DashboardGeospatialMapFieldWells {
    GeospatialMapAggregatedFieldWells: (DashboardGeospatialMapAggregatedFieldWells)?
}

typealias DashboardSelectedTooltipType = String|Mapping


typealias DashboardConditionalFormattingIconDisplayOption = String|Mapping


/// 
open class DashboardFieldLabelType {
    FieldId: (String|Mapping)?
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardFilterTextAreaControl {
    Delimiter: (String|Mapping)?
    DisplayOptions: (DashboardTextAreaControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardFreeFormLayoutElementBorderStyle {
    Visibility: (DashboardVisibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class DashboardAxisLabelOptions {
    FontConfiguration: (DashboardFontConfiguration)?
    CustomLabel: (String|Mapping)?
    ApplyTo: (DashboardAxisLabelReferenceOptions)?
}

typealias DashboardNumericEqualityMatchOperator = String|Mapping


/// 
open class DashboardDestinationParameterValueConfiguration {
    SourceColumn: (DashboardColumnIdentifier)?
    CustomValuesConfiguration: (DashboardCustomValuesConfiguration)?
    SelectAllValueOptions: (DashboardSelectAllValueOptions)?
    SourceParameterName: (String|Mapping)?
    SourceField: (String|Mapping)?
}

/// 
open class DashboardSheetLayoutElementMaximizationOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardVisualSubtitleLabelOptions {
    Visibility: (DashboardVisibility)?
    FormatText: (DashboardLongFormatText)?
}

typealias DashboardPivotTableConditionalFormattingScopeRole = String|Mapping


/// 
open class DashboardScatterPlotConfiguration {
    FieldWells: (DashboardScatterPlotFieldWells)?
    VisualPalette: (DashboardVisualPalette)?
    XAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    XAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    YAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    YAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    Legend: (DashboardLegendOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
}

/// 
open class DashboardWordCloudChartConfiguration {
    FieldWells: (DashboardWordCloudFieldWells)?
    SortConfiguration: (DashboardWordCloudSortConfiguration)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    WordCloudOptions: (DashboardWordCloudOptions)?
}

/// 
open class DashboardTextConditionalFormat {
    Icon: (DashboardConditionalFormattingIcon)?
    BackgroundColor: (DashboardConditionalFormattingColor)?
    TextColor: (DashboardConditionalFormattingColor)?
}

typealias DashboardTimeGranularity = String|Mapping


/// 
open class DashboardTotalAggregationFunction {
    SimpleTotalAggregationFunction: (DashboardSimpleTotalAggregationFunction)?
}

typealias DashboardHistogramBinType = String|Mapping


typealias DashboardLineChartType = String|Mapping


/// 
open class DashboardLongFormatText {
    PlainText: (String|Mapping)?
    RichText: (String|Mapping)?
}

/// 
open class DashboardSankeyDiagramAggregatedFieldWells {
    Weight: (Listing<DashboardMeasureField>)?
    Source: (Listing<DashboardDimensionField>)?
    Destination: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardDateMeasureField {
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
    AggregationFunction: (DashboardDateAggregationFunction)?
    FormatConfiguration: (DashboardDateTimeFormatConfiguration)?
}

/// 
open class DashboardParameterDateTimePickerControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DashboardDateTimePickerControlDisplayOptions)?
}

/// 
open class DashboardPivotTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<DashboardPivotTableConditionalFormattingOption>)?
}

/// 
open class DashboardStringValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (DashboardValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

/// 
open class DashboardTotalAggregationOption {
    FieldId: String|Mapping
    TotalAggregationFunction: DashboardTotalAggregationFunction
}

/// 
open class DashboardDataColor {
    DataValue: (Number|Mapping)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardExportHiddenFieldsOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

/// 
open class DashboardReferenceLineStyleConfiguration {
    Pattern: (DashboardReferenceLinePatternType)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

typealias DashboardSmallMultiplesAxisPlacement = String|Mapping


/// 
open class DashboardReferenceLine {
    LabelConfiguration: (DashboardReferenceLineLabelConfiguration)?
    Status: (DashboardWidgetStatus)?
    DataConfiguration: DashboardReferenceLineDataConfiguration
    StyleConfiguration: (DashboardReferenceLineStyleConfiguration)?
}

/// 
open class DashboardColumnSort {
    SortBy: DashboardColumnIdentifier
    Direction: DashboardSortDirection
    AggregationFunction: (DashboardAggregationFunction)?
}

/// 
open class DashboardDataPathValue {
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
    DataPathType: (DashboardDataPathType)?
}

typealias DashboardGeospatialSelectedPointStyle = String|Mapping


typealias DashboardNumericFilterSelectAllOptions = String|Mapping


/// 
open class DashboardTreeMapConfiguration {
    ColorScale: (DashboardColorScale)?
    FieldWells: (DashboardTreeMapFieldWells)?
    SortConfiguration: (DashboardTreeMapSortConfiguration)?
    ColorLabelOptions: (DashboardChartAxisLabelOptions)?
    Legend: (DashboardLegendOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    GroupLabelOptions: (DashboardChartAxisLabelOptions)?
    SizeLabelOptions: (DashboardChartAxisLabelOptions)?
}

/// 
open class DashboardComparisonFormatConfiguration {
    PercentageDisplayFormatConfiguration: (DashboardPercentageDisplayFormatConfiguration)?
    NumberDisplayFormatConfiguration: (DashboardNumberDisplayFormatConfiguration)?
}

/// 
open class DashboardLineChartConfiguration {
    PrimaryYAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    DefaultSeriesSettings: (DashboardLineChartDefaultSeriesSettings)?
    Type: (DashboardLineChartType)?
    SecondaryYAxisDisplayOptions: (DashboardLineSeriesAxisDisplayOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    ContributionAnalysisDefaults: (Listing<DashboardContributionAnalysisDefault>)?
    VisualPalette: (DashboardVisualPalette)?
    SmallMultiplesOptions: (DashboardSmallMultiplesOptions)?
    Series: (Listing<DashboardSeriesItem>)?
    Legend: (DashboardLegendOptions)?
    FieldWells: (DashboardLineChartFieldWells)?
    ForecastConfigurations: (Listing<DashboardForecastConfiguration>)?
    XAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    XAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (DashboardLineSeriesAxisDisplayOptions)?
    SecondaryYAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    ReferenceLines: (Listing<DashboardReferenceLine>)?
    Tooltip: (DashboardTooltipOptions)?
    SortConfiguration: (DashboardLineChartSortConfiguration)?
}

/// 
open class DashboardMaximumMinimumComputation {
    Time: (DashboardDimensionField)?
    Value: (DashboardMeasureField)?
    Type: DashboardMaximumMinimumComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
}

/// 
open class DashboardNumericSeparatorConfiguration {
    DecimalSeparator: (DashboardNumericSeparatorSymbol)?
    ThousandsSeparator: (DashboardThousandSeparatorOptions)?
}

/// 
open class DashboardTimeBasedForecastProperties {
    PredictionInterval: (Number|Mapping)?
    Seasonality: (Number|Mapping)?
    PeriodsForward: (Number|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
}

/// 
open class DashboardColorsConfiguration {
    CustomColors: (Listing<DashboardCustomColor>)?
}

/// 
open class DashboardFilledMapAggregatedFieldWells {
    Geospatial: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardHistogramConfiguration {
    FieldWells: (DashboardHistogramFieldWells)?
    XAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    XAxisLabelOptions: (DashboardChartAxisLabelOptions)?
    YAxisDisplayOptions: (DashboardAxisDisplayOptions)?
    BinOptions: (DashboardHistogramBinOptions)?
    DataLabels: (DashboardDataLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    VisualPalette: (DashboardVisualPalette)?
}

typealias DashboardKPIVisualStandardLayoutType = String|Mapping


/// 
open class DashboardTableFieldLinkConfiguration {
    Target: DashboardURLTargetConfiguration
    Content: DashboardTableFieldLinkContentConfiguration
}

/// 
open class DashboardForecastScenario {
    WhatIfPointScenario: (DashboardWhatIfPointScenario)?
    WhatIfRangeScenario: (DashboardWhatIfRangeScenario)?
}

/// 
open class DashboardParameterListControl {
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DashboardListControlDisplayOptions)?
    Type: (DashboardSheetControlListType)?
    SelectableValues: (DashboardParameterSelectableValues)?
    CascadingControlConfiguration: (DashboardCascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
}

typealias DashboardSectionPageBreakStatus = String|Mapping


/// 
open class DashboardTableConditionalFormattingOption {
    Cell: (DashboardTableCellConditionalFormatting)?
    Row: (DashboardTableRowConditionalFormatting)?
}

typealias DashboardRelativeFontSize = String|Mapping


/// 
open class DashboardSheetTextBox {
    SheetTextBoxId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: (String|Mapping)?
}

/// 
open class DashboardCategoricalDimensionField {
    Column: DashboardColumnIdentifier
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (DashboardStringFormatConfiguration)?
    FieldId: String|Mapping
}

typealias DashboardDashboardErrorType = String|Mapping


/// 
open class DashboardDashboardVisualPublishOptions {
    ExportHiddenFieldsOption: (DashboardExportHiddenFieldsOption)?
}

/// 
open class DashboardKPIComparisonValueConditionalFormatting {
    TextColor: (DashboardConditionalFormattingColor)?
    Icon: (DashboardConditionalFormattingIcon)?
}

/// 
open class DashboardParameters {
    IntegerParameters: (Listing<DashboardIntegerParameter>)?
    DecimalParameters: (Listing<DashboardDecimalParameter>)?
    DateTimeParameters: (Listing<DashboardDateTimeParameter>)?
    StringParameters: (Listing<DashboardStringParameter>)?
}

/// 
open class DashboardSectionAfterPageBreak {
    Status: (DashboardSectionPageBreakStatus)?
}

/// 
open class DashboardShapeConditionalFormat {
    BackgroundColor: DashboardConditionalFormattingColor
}

typealias DashboardAxisDisplayDataDrivenRange = Dynamic


/// 
open class DashboardBoxPlotFieldWells {
    BoxPlotAggregatedFieldWells: (DashboardBoxPlotAggregatedFieldWells)?
}

/// 
open class DashboardGridLayoutScreenCanvasSizeOptions {
    ResizeOption: DashboardResizeOption
    OptimizedViewPortWidth: (String|Mapping)?
}

/// 
open class DashboardKPIOptions {
    ProgressBar: (DashboardProgressBarOptions)?
    TrendArrows: (DashboardTrendArrowOptions)?
    SecondaryValue: (DashboardSecondaryValueOptions)?
    PrimaryValueFontConfiguration: (DashboardFontConfiguration)?
    Sparkline: (DashboardKPISparklineOptions)?
    VisualLayoutOptions: (DashboardKPIVisualLayoutOptions)?
    Comparison: (DashboardComparisonConfiguration)?
    PrimaryValueDisplayType: (DashboardPrimaryValueDisplayType)?
    SecondaryValueFontConfiguration: (DashboardFontConfiguration)?
}

/// 
open class DashboardComparisonConfiguration {
    ComparisonMethod: (DashboardComparisonMethod)?
    ComparisonFormat: (DashboardComparisonFormatConfiguration)?
}

/// 
open class DashboardSliderControlDisplayOptions {
    TitleOptions: (DashboardLabelOptions)?
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
}

/// 
open class DashboardContributionAnalysisDefault {
    MeasureFieldId: String|Mapping
    ContributorDimensions: Listing<DashboardColumnIdentifier>
}

/// 
open class DashboardGeospatialWindowOptions {
    Bounds: (DashboardGeospatialCoordinateBounds)?
    MapZoomMode: (DashboardMapZoomMode)?
}

typealias DashboardMaximumMinimumComputationType = String|Mapping


typealias DashboardReferenceLineValueLabelRelativePosition = String|Mapping


/// 
open class DashboardConditionalFormattingColor {
    Gradient: (DashboardConditionalFormattingGradientColor)?
    Solid: (DashboardConditionalFormattingSolidColor)?
}

/// 
open class DashboardPivotTableSortBy {
    Field: (DashboardFieldSort)?
    Column: (DashboardColumnSort)?
    DataPath: (DashboardDataPathSort)?
}

/// 
open class DashboardUniqueValuesComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Category: (DashboardDimensionField)?
}

typealias DashboardBarsArrangement = String|Mapping


/// 
open class DashboardDashboardSourceTemplate {
    DataSetReferences: Listing<DashboardDataSetReference>
    Arn: String|Mapping
}

/// 
open class DashboardGaugeChartVisual {
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardGaugeChartConfiguration)?
    ConditionalFormatting: (DashboardGaugeChartConditionalFormatting)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class DashboardGeospatialPointStyleOptions {
    SelectedPointStyle: (DashboardGeospatialSelectedPointStyle)?
    ClusterMarkerConfiguration: (DashboardClusterMarkerConfiguration)?
    HeatmapConfiguration: (DashboardGeospatialHeatmapConfiguration)?
}

/// 
open class DashboardFunnelChartConfiguration {
    VisualPalette: (DashboardVisualPalette)?
    FieldWells: (DashboardFunnelChartFieldWells)?
    SortConfiguration: (DashboardFunnelChartSortConfiguration)?
    CategoryLabelOptions: (DashboardChartAxisLabelOptions)?
    ValueLabelOptions: (DashboardChartAxisLabelOptions)?
    Tooltip: (DashboardTooltipOptions)?
    DataLabelOptions: (DashboardFunnelChartDataLabelOptions)?
}

/// 
open class DashboardPivotTableSortConfiguration {
    FieldSortOptions: (Listing<DashboardPivotFieldSortOptions>)?
}

/// 
open class DashboardReferenceLineStaticDataConfiguration {
    Value: Number|Mapping
}

/// 
open class DashboardCustomActionFilterOperation {
    SelectedFieldsConfiguration: DashboardFilterOperationSelectedFieldsConfiguration
    TargetVisualsConfiguration: DashboardFilterOperationTargetVisualsConfiguration
}

/// 
open class DashboardFilledMapConfiguration {
    FieldWells: (DashboardFilledMapFieldWells)?
    SortConfiguration: (DashboardFilledMapSortConfiguration)?
    Legend: (DashboardLegendOptions)?
    Tooltip: (DashboardTooltipOptions)?
    WindowOptions: (DashboardGeospatialWindowOptions)?
    MapStyleOptions: (DashboardGeospatialMapStyleOptions)?
}

/// 
open class DashboardPivotTableConditionalFormattingOption {
    Cell: (DashboardPivotTableCellConditionalFormatting)?
}

/// 
open class DashboardVisualMenuOption {
    AvailabilityStatus: (DashboardDashboardBehavior)?
}

typealias DashboardCategoryFilterSelectAllOptions = String|Mapping


/// 
open class DashboardHeatMapFieldWells {
    HeatMapAggregatedFieldWells: (DashboardHeatMapAggregatedFieldWells)?
}

typealias DashboardReferenceLineLabelVerticalPosition = String|Mapping


/// 
open class DashboardSectionPageBreakConfiguration {
    After: (DashboardSectionAfterPageBreak)?
}

/// 
open class DashboardParameterTextFieldControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DashboardTextFieldControlDisplayOptions)?
}

/// 
open class DashboardChartAxisLabelOptions {
    Visibility: (DashboardVisibility)?
    SortIconVisibility: (DashboardVisibility)?
    AxisLabelOptions: (Listing<DashboardAxisLabelOptions>)?
}

/// 
open class DashboardDataPathSort {
    Direction: DashboardSortDirection
    SortPaths: Listing<DashboardDataPathValue>
}

typealias DashboardFilterVisualScope = String|Mapping


/// 
open class DashboardLineChartVisual {
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardLineChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
}

/// 
open class DashboardDataBarsOptions {
    NegativeColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    FieldId: String|Mapping
    PositiveColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class DashboardForecastConfiguration {
    ForecastProperties: (DashboardTimeBasedForecastProperties)?
    Scenario: (DashboardForecastScenario)?
}

/// 
open class DashboardHistogramAggregatedFieldWells {
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardSankeyDiagramVisual {
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardSankeyDiagramChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
}

/// 
open class DashboardDateTimePickerControlDisplayOptions {
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
    TitleOptions: (DashboardLabelOptions)?
    DateTimeFormat: (String|Mapping)?
}

/// 
open class DashboardRadarChartSeriesSettings {
    AreaStyleSettings: (DashboardRadarChartAreaStyleSettings)?
}

typealias DashboardTableTotalsPlacement = String|Mapping


/// 
open class DashboardWaterfallChartAggregatedFieldWells {
    Categories: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
    Breakdowns: (Listing<DashboardDimensionField>)?
}

typealias DashboardSelectedFieldOptions = String|Mapping


/// 
open class DashboardThousandSeparatorOptions {
    Symbol: (DashboardNumericSeparatorSymbol)?
    Visibility: (DashboardVisibility)?
}

typealias DashboardVisibility = String|Mapping


/// 
open class DashboardComputation {
    TopBottomMovers: (DashboardTopBottomMoversComputation)?
    PeriodToDate: (DashboardPeriodToDateComputation)?
    Forecast: (DashboardForecastComputation)?
    PeriodOverPeriod: (DashboardPeriodOverPeriodComputation)?
    GrowthRate: (DashboardGrowthRateComputation)?
    UniqueValues: (DashboardUniqueValuesComputation)?
    TopBottomRanked: (DashboardTopBottomRankedComputation)?
    TotalAggregation: (DashboardTotalAggregationComputation)?
    MaximumMinimum: (DashboardMaximumMinimumComputation)?
    MetricComparison: (DashboardMetricComparisonComputation)?
}

/// 
open class DashboardLineChartSeriesSettings {
    LineStyleSettings: (DashboardLineChartLineStyleSettings)?
    MarkerStyleSettings: (DashboardLineChartMarkerStyleSettings)?
}

/// 
open class DashboardPivotTablePaginatedReportOptions {
    VerticalOverflowVisibility: (DashboardVisibility)?
    OverflowColumnHeaderVisibility: (DashboardVisibility)?
}

/// 
open class DashboardRelativeDateTimeControlDisplayOptions {
    TitleOptions: (DashboardLabelOptions)?
    DateTimeFormat: (String|Mapping)?
    InfoIconLabelOptions: (DashboardSheetControlInfoIconLabelOptions)?
}

typealias DashboardWordCloudWordOrientation = String|Mapping


/// 
open class DashboardAxisTickLabelOptions {
    LabelOptions: (DashboardLabelOptions)?
    RotationAngle: (Number|Mapping)?
}

/// 
open class DashboardColumnTooltipItem {
    Visibility: (DashboardVisibility)?
    Aggregation: (DashboardAggregationFunction)?
    Column: DashboardColumnIdentifier
    Label: (String|Mapping)?
}

typealias DashboardResourceStatus = String|Mapping


/// 
open class DashboardTableFieldOption {
    URLStyling: (DashboardTableFieldURLConfiguration)?
    FieldId: String|Mapping
    Width: (String|Mapping)?
    CustomLabel: (String|Mapping)?
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardAxisScale {
    Linear: (DashboardAxisLinearScale)?
    Logarithmic: (DashboardAxisLogarithmicScale)?
}

/// 
open class DashboardFontSize {
    Relative: (DashboardRelativeFontSize)?
}

typealias DashboardPivotTableDataPathType = String|Mapping


/// 
open class DashboardCustomParameterValues {
    DateTimeValues: (Listing<String|Mapping>)?
    StringValues: (Listing<String|Mapping>)?
    IntegerValues: (Listing<Number|Mapping>)?
    DecimalValues: (Listing<Number|Mapping>)?
}

typealias DashboardDayOfTheWeek = String|Mapping


/// 
open class DashboardTableSideBorderOptions {
    Bottom: (DashboardTableBorderOptions)?
    InnerVertical: (DashboardTableBorderOptions)?
    InnerHorizontal: (DashboardTableBorderOptions)?
    Left: (DashboardTableBorderOptions)?
    Right: (DashboardTableBorderOptions)?
    Top: (DashboardTableBorderOptions)?
}

/// 
open class DashboardTreeMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardTreeMapConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
}

/// 
open class DashboardLineChartFieldWells {
    LineChartAggregatedFieldWells: (DashboardLineChartAggregatedFieldWells)?
}

/// 
open class DashboardStringParameterDeclaration {
    ParameterValueType: DashboardParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (DashboardStringDefaultValues)?
    ValueWhenUnset: (DashboardStringValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<DashboardMappedDataSetParameter>)?
}

/// 
open class DashboardTableBorderOptions {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Thickness: (Number|Mapping)?
    Style: (DashboardTableBorderStyle)?
}

/// 
open class DashboardTableCellStyle {
    TextWrap: (DashboardTextWrap)?
    HorizontalTextAlignment: (DashboardHorizontalTextAlignment)?
    VerticalTextAlignment: (DashboardVerticalTextAlignment)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Height: (Number|Mapping)?
    Border: (DashboardGlobalTableBorderOptions)?
    Visibility: (DashboardVisibility)?
    FontConfiguration: (DashboardFontConfiguration)?
}

/// 
open class DashboardDashboardError {
    Type: (DashboardDashboardErrorType)?
    Message: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
    ViolatedEntities: (Listing<DashboardEntity>)?
}

/// 
open class DashboardRowAlternateColorOptions {
    Status: (DashboardWidgetStatus)?
    RowAlternateColors: (Listing<String|Mapping>)?
    UsePrimaryBackgroundColor: (DashboardWidgetStatus)?
}

typealias DashboardSheetContentType = String|Mapping


/// 
open class DashboardSpacing {
    Top: (String|Mapping)?
    Bottom: (String|Mapping)?
    Left: (String|Mapping)?
    Right: (String|Mapping)?
}

typealias DashboardColumnRole = String|Mapping


/// 
open class DashboardCustomActionSetParametersOperation {
    ParameterValueConfigurations: Listing<DashboardSetParameterValueConfiguration>
}

/// 
open class DashboardDataSetReference {
    DataSetPlaceholder: String(matches(Regex(#".*\S.*"#)))|Mapping
    DataSetArn: String|Mapping
}

/// 
open class DashboardNumericalMeasureField {
    AggregationFunction: (DashboardNumericalAggregationFunction)?
    FormatConfiguration: (DashboardNumberFormatConfiguration)?
    FieldId: String|Mapping
    Column: DashboardColumnIdentifier
}

/// 
open class DashboardLineChartLineStyleSettings {
    LineVisibility: (DashboardVisibility)?
    LineInterpolation: (DashboardLineInterpolation)?
    LineStyle: (DashboardLineChartLineStyle)?
    LineWidth: (String|Mapping)?
}

/// 
open class DashboardPercentVisibleRange {
    To: (Number|Mapping)?
    From: (Number|Mapping)?
}

/// 
open class DashboardMinimumLabelType {
    Visibility: (DashboardVisibility)?
}

/// 
open class DashboardPivotTableVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardPivotTableConfiguration)?
    ConditionalFormatting: (DashboardPivotTableConditionalFormatting)?
    Actions: (Listing<DashboardVisualCustomAction>)?
}

/// 
open class DashboardWordCloudAggregatedFieldWells {
    Size: (Listing<DashboardMeasureField>)?
    GroupBy: (Listing<DashboardDimensionField>)?
}

/// 
open class DashboardPieChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardPieChartConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
    ColumnHierarchies: (Listing<DashboardColumnHierarchy>)?
}

/// 
open class DashboardAggregationFunction {
    NumericalAggregationFunction: (DashboardNumericalAggregationFunction)?
    CategoricalAggregationFunction: (DashboardCategoricalAggregationFunction)?
    DateAggregationFunction: (DashboardDateAggregationFunction)?
    AttributeAggregationFunction: (DashboardAttributeAggregationFunction)?
}

/// 
open class DashboardDataSetIdentifierDeclaration {
    DataSetArn: String|Mapping
    Identifier: String|Mapping
}

/// 
open class DashboardDecimalDefaultValues {
    StaticValues: (Listing<Number|Mapping>)?
    DynamicValue: (DashboardDynamicDefaultValue)?
}

/// 
open class DashboardFreeFormLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (DashboardFreeFormLayoutScreenCanvasSizeOptions)?
}

/// 
open class DashboardBoxPlotAggregatedFieldWells {
    GroupBy: (Listing<DashboardDimensionField>)?
    Values: (Listing<DashboardMeasureField>)?
}

/// 
open class DashboardCustomContentVisual {
    DataSetIdentifier: String|Mapping
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (DashboardVisualTitleLabelOptions)?
    Subtitle: (DashboardVisualSubtitleLabelOptions)?
    ChartConfiguration: (DashboardCustomContentConfiguration)?
    Actions: (Listing<DashboardVisualCustomAction>)?
}

typealias DashboardPrimaryValueDisplayType = String|Mapping


/// 
open class DashboardMappedDataSetParameter {
    DataSetIdentifier: String|Mapping
    DataSetParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class DashboardWaterfallChartOptions {
    TotalBarLabel: (String|Mapping)?
}

typealias DashboardBoxPlotFillStyle = String|Mapping


/// 
open class DashboardConditionalFormattingIconSet {
    IconSetType: (DashboardConditionalFormattingIconSetType)?
    Expression: String|Mapping
}

/// 
open class DashboardIntegerParameter {
    Name: String(matches(Regex(#".*\S.*"#)))|Mapping
    Values: Listing<Number|Mapping>
}

typealias DashboardLineChartMarkerShape = String|Mapping


typealias DashboardDataLabelContent = String|Mapping


/// 
open class DashboardPivotTableFieldCollapseStateOption {
    State: (DashboardPivotTableFieldCollapseState)?
    Target: DashboardPivotTableFieldCollapseStateTarget
}

/// 
open class DashboardTrendArrowOptions {
    Visibility: (DashboardVisibility)?
}

/// Definition of the AWS::QuickSight::Dashboard Resource Type.
open class Dashboard extends cloudformation.Resource {

    Type = "AWS::QuickSight::Dashboard"


    /// 
    hidden AwsAccountId: String(matches(Regex(#"^[0-9]{12}$"#)))|Mapping

    /// 
    hidden DashboardId: String(matches(Regex(#"[\w\-]+"#)))|Mapping

    /// 
    hidden DashboardPublishOptions: (DashboardDashboardPublishOptions)?

    /// 
    hidden Definition: (DashboardDashboardVersionDefinition)?

    /// 
    hidden LinkEntities: (Listing<String|Mapping>)?

    /// 
    hidden LinkSharingConfiguration: (DashboardLinkSharingConfiguration)?

    /// 
    hidden Name: String|Mapping

    /// 
    hidden Parameters: (DashboardParameters)?

    /// 
    hidden Permissions: (Listing<DashboardResourcePermission>)?

    /// 
    hidden SourceEntity: (DashboardDashboardSourceEntity)?

    /// 
    hidden Tags: (Listing<DashboardTag>)?

    /// 
    hidden ThemeArn: (String|Mapping)?

    /// 
    hidden ValidationStrategy: (DashboardValidationStrategy)?

    /// 
    hidden VersionDescription: (String|Mapping)?

    Properties {
        ["AwsAccountId"] = if (AwsAccountId == null) null else AwsAccountId
        ["DashboardId"] = if (DashboardId == null) null else DashboardId
        ["DashboardPublishOptions"] = if (DashboardPublishOptions == null) null else DashboardPublishOptions
        ["Definition"] = if (Definition == null) null else Definition
        ["LinkEntities"] = if (LinkEntities == null) null else LinkEntities
        ["LinkSharingConfiguration"] = if (LinkSharingConfiguration == null) null else LinkSharingConfiguration
        ["Name"] = if (Name == null) null else Name
        ["Parameters"] = if (Parameters == null) null else Parameters
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["SourceEntity"] = if (SourceEntity == null) null else SourceEntity
        ["Tags"] = if (Tags == null) null else Tags
        ["ThemeArn"] = if (ThemeArn == null) null else ThemeArn
        ["ValidationStrategy"] = if (ValidationStrategy == null) null else ValidationStrategy
        ["VersionDescription"] = if (VersionDescription == null) null else VersionDescription
    }

}
