/// AWS::QuickSight::Template
///
/// Generated by rain build --pkl-class AWS::QuickSight::Template
module aws.quicksight.template

import "../../cloudformation.pkl"

/// 
open class TemplateComparisonFormatConfiguration {
    NumberDisplayFormatConfiguration: (TemplateNumberDisplayFormatConfiguration)?
    PercentageDisplayFormatConfiguration: (TemplatePercentageDisplayFormatConfiguration)?
}

/// 
open class TemplateKPIPrimaryValueConditionalFormatting {
    TextColor: (TemplateConditionalFormattingColor)?
    Icon: (TemplateConditionalFormattingIcon)?
}

/// 
open class TemplateBoxPlotFieldWells {
    BoxPlotAggregatedFieldWells: (TemplateBoxPlotAggregatedFieldWells)?
}

/// 
open class TemplateFunnelChartSortConfiguration {
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    CategoryItemsLimit: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplateBoxPlotSortConfiguration {
    PaginationConfiguration: (TemplatePaginationConfiguration)?
    CategorySort: (Listing<TemplateFieldSortOptions>)?
}

/// 
open class TemplateTableFieldCustomIconContent {
    Icon: (TemplateTableFieldIconSetType)?
}

/// 
open class TemplateComboChartSortConfiguration {
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    CategoryItemsLimit: (TemplateItemsLimitConfiguration)?
    ColorSort: (Listing<TemplateFieldSortOptions>)?
    ColorItemsLimit: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplateFilledMapConfiguration {
    FieldWells: (TemplateFilledMapFieldWells)?
    SortConfiguration: (TemplateFilledMapSortConfiguration)?
    Legend: (TemplateLegendOptions)?
    Tooltip: (TemplateTooltipOptions)?
    WindowOptions: (TemplateGeospatialWindowOptions)?
    MapStyleOptions: (TemplateGeospatialMapStyleOptions)?
}

typealias TemplateReferenceLineSeriesType = String|Mapping


typealias TemplateLineChartType = String|Mapping


/// 
open class TemplateCascadingControlSource {
    SourceSheetControlId: (String|Mapping)?
    ColumnToMatch: (TemplateColumnIdentifier)?
}

/// 
open class TemplateTimeRangeFilterValue {
    StaticValue: (String|Mapping)?
    RollingDate: (TemplateRollingDateConfiguration)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

typealias TemplateSimpleNumericalAggregationFunction = String|Mapping


/// 
open class TemplateFunnelChartDataLabelOptions {
    Position: (TemplateDataLabelPosition)?
    LabelFontConfiguration: (TemplateFontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    MeasureDataLabelStyle: (TemplateFunnelChartMeasureDataLabelStyle)?
    Visibility: (TemplateVisibility)?
    CategoryLabelVisibility: (TemplateVisibility)?
    MeasureLabelVisibility: (TemplateVisibility)?
}

/// 
open class TemplateFilterOperationTargetVisualsConfiguration {
    SameSheetTargetVisualConfiguration: (TemplateSameSheetTargetVisualConfiguration)?
}

/// 
open class TemplateTooltipItem {
    FieldTooltipItem: (TemplateFieldTooltipItem)?
    ColumnTooltipItem: (TemplateColumnTooltipItem)?
}

typealias TemplateForecastComputationSeasonality = String|Mapping


/// 
open class TemplatePivotTableFieldOptions {
    SelectedFieldOptions: (Listing<TemplatePivotTableFieldOption>)?
    DataPathOptions: (Listing<TemplatePivotTableDataPathOption>)?
    CollapseStateOptions: (Listing<TemplatePivotTableFieldCollapseStateOption>)?
}

/// 
open class TemplateSankeyDiagramChartConfiguration {
    FieldWells: (TemplateSankeyDiagramFieldWells)?
    SortConfiguration: (TemplateSankeyDiagramSortConfiguration)?
    DataLabels: (TemplateDataLabelOptions)?
}

/// 
open class TemplateHistogramAggregatedFieldWells {
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateRelativeDateTimeControlDisplayOptions {
    DateTimeFormat: (String|Mapping)?
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
    TitleOptions: (TemplateLabelOptions)?
}

/// 
open class TemplatePeriodToDateComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (TemplateDimensionField)?
    Value: (TemplateMeasureField)?
    PeriodTimeGranularity: (TemplateTimeGranularity)?
}

/// 
open class TemplateFreeFormLayoutElementBackgroundStyle {
    Visibility: (TemplateVisibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class TemplateDataPathLabelType {
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateDateMeasureField {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    AggregationFunction: (TemplateDateAggregationFunction)?
    FormatConfiguration: (TemplateDateTimeFormatConfiguration)?
}

/// 
open class TemplateTreeMapFieldWells {
    TreeMapAggregatedFieldWells: (TemplateTreeMapAggregatedFieldWells)?
}

/// 
open class TemplateTablePinnedFieldOptions {
    PinnedLeftFields: (Listing<String|Mapping>)?
}

/// 
open class TemplateComboChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateComboChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
}

typealias TemplateLineChartMarkerShape = String|Mapping


/// 
open class TemplateLineChartSeriesSettings {
    LineStyleSettings: (TemplateLineChartLineStyleSettings)?
    MarkerStyleSettings: (TemplateLineChartMarkerStyleSettings)?
}

/// 
open class TemplateFilterDropDownControl {
    SelectableValues: (TemplateFilterSelectableValues)?
    CascadingControlConfiguration: (TemplateCascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (TemplateDropDownControlDisplayOptions)?
    Type: (TemplateSheetControlListType)?
}

typealias TemplateSimpleAttributeAggregationFunction = String|Mapping


typealias TemplateConditionalFormattingIconDisplayOption = String|Mapping


typealias TemplateReferenceLineLabelHorizontalPosition = String|Mapping


/// 
open class TemplateTableFieldCustomTextContent {
    Value: (String|Mapping)?
    FontConfiguration: TemplateFontConfiguration
}

/// 
open class TemplateConditionalFormattingColor {
    Solid: (TemplateConditionalFormattingSolidColor)?
    Gradient: (TemplateConditionalFormattingGradientColor)?
}

/// 
open class TemplateScatterPlotVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateScatterPlotConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
}

/// 
open class TemplateParameterTextFieldControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (TemplateTextFieldControlDisplayOptions)?
}

/// 
open class TemplateReferenceLineValueLabelConfiguration {
    RelativePosition: (TemplateReferenceLineValueLabelRelativePosition)?
    FormatConfiguration: (TemplateNumericFormatConfiguration)?
}

/// 
open class TemplateNumericSeparatorConfiguration {
    ThousandsSeparator: (TemplateThousandSeparatorOptions)?
    DecimalSeparator: (TemplateNumericSeparatorSymbol)?
}

/// 
open class TemplateGeospatialHeatmapDataColor {
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
}

/// 
open class TemplateSimpleClusterMarker {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class TemplatePivotTableConditionalFormattingScope {
    Role: (TemplatePivotTableConditionalFormattingScopeRole)?
}

/// 
open class TemplateSheetDefinition {
    ContentType: (TemplateSheetContentType)?
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Description: (String|Mapping)?
    ParameterControls: (Listing<TemplateParameterControl>)?
    FilterControls: (Listing<TemplateFilterControl>)?
    Layouts: (Listing<TemplateLayout>)?
    Title: (String|Mapping)?
    Name: (String|Mapping)?
    Visuals: (Listing<TemplateVisual>)?
    TextBoxes: (Listing<TemplateSheetTextBox>)?
    SheetControlLayouts: (Listing<TemplateSheetControlLayout>)?
}

typealias TemplateSmallMultiplesAxisScale = String|Mapping


/// 
open class TemplateTableRowConditionalFormatting {
    BackgroundColor: (TemplateConditionalFormattingColor)?
    TextColor: (TemplateConditionalFormattingColor)?
}

/// 
open class TemplateSheetControlLayout {
    Configuration: TemplateSheetControlLayoutConfiguration
}

/// 
open class TemplateColumnGroupSchema {
    Name: (String|Mapping)?
    ColumnGroupColumnSchemaList: (Listing<TemplateColumnGroupColumnSchema>)?
}

/// 
open class TemplateCategoryFilterConfiguration {
    CustomFilterListConfiguration: (TemplateCustomFilterListConfiguration)?
    CustomFilterConfiguration: (TemplateCustomFilterConfiguration)?
    FilterListConfiguration: (TemplateFilterListConfiguration)?
}

/// 
open class TemplateMaximumLabelType {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateVisualTitleLabelOptions {
    Visibility: (TemplateVisibility)?
    FormatText: (TemplateShortFormatText)?
}

/// 
open class TemplateSectionPageBreakConfiguration {
    After: (TemplateSectionAfterPageBreak)?
}

/// 
open class TemplateCustomFilterListConfiguration {
    MatchOperator: TemplateCategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
    SelectAllOptions: (TemplateCategoryFilterSelectAllOptions)?
    NullOption: TemplateFilterNullOption
}

/// 
open class TemplateAggregationFunction {
    NumericalAggregationFunction: (TemplateNumericalAggregationFunction)?
    CategoricalAggregationFunction: (TemplateCategoricalAggregationFunction)?
    DateAggregationFunction: (TemplateDateAggregationFunction)?
    AttributeAggregationFunction: (TemplateAttributeAggregationFunction)?
}

typealias TemplateMapZoomMode = String|Mapping


/// 
open class TemplateGaugeChartArcConditionalFormatting {
    ForegroundColor: (TemplateConditionalFormattingColor)?
}

/// 
open class TemplateKPIVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateKPIConfiguration)?
    ConditionalFormatting: (TemplateKPIConditionalFormatting)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
}

/// 
open class TemplateParameterTextAreaControl {
    DisplayOptions: (TemplateTextAreaControlDisplayOptions)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Delimiter: (String|Mapping)?
}

/// 
open class TemplateDefaultNewSheetConfiguration {
    InteractiveLayoutConfiguration: (TemplateDefaultInteractiveLayoutConfiguration)?
    PaginatedLayoutConfiguration: (TemplateDefaultPaginatedLayoutConfiguration)?
    SheetContentType: (TemplateSheetContentType)?
}

typealias TemplateVerticalTextAlignment = String|Mapping


typealias TemplateLineInterpolation = String|Mapping


/// 
open class TemplateArcAxisDisplayRange {
    Min: (Number|Mapping)?
    Max: (Number|Mapping)?
}

/// 
open class TemplateTableFieldOptions {
    SelectedFieldOptions: (Listing<TemplateTableFieldOption>)?
    Order: (Listing<String|Mapping>)?
    PinnedFieldOptions: (TemplateTablePinnedFieldOptions)?
}

typealias TemplatePivotTableFieldCollapseState = String|Mapping


typealias TemplateSelectAllValueOptions = String|Mapping


/// 
open class TemplateHeaderFooterSectionConfiguration {
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Layout: TemplateSectionLayoutConfiguration
    Style: (TemplateSectionStyle)?
}

/// 
open class TemplateVisualPalette {
    ColorMap: (Listing<TemplateDataPathColor>)?
    ChartColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

typealias TemplateSheetControlDateTimePickerType = String|Mapping


/// 
open class TemplateConditionalFormattingGradientColor {
    Expression: String|Mapping
    Color: TemplateGradientColor
}

/// 
open class TemplateMinimumLabelType {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateCategoryDrillDownFilter {
    Column: TemplateColumnIdentifier
    CategoryValues: Listing<String|Mapping>
}

/// 
open class TemplateTreeMapAggregatedFieldWells {
    Groups: (Listing<TemplateDimensionField>)?
    Sizes: (Listing<TemplateMeasureField>)?
    Colors: (Listing<TemplateMeasureField>)?
}

typealias TemplateReferenceLineValueLabelRelativePosition = String|Mapping


typealias TemplateBarsArrangement = String|Mapping


/// 
open class TemplateReferenceLineStaticDataConfiguration {
    Value: Number|Mapping
}

/// 
open class TemplateComboChartAggregatedFieldWells {
    Colors: (Listing<TemplateDimensionField>)?
    LineValues: (Listing<TemplateMeasureField>)?
    Category: (Listing<TemplateDimensionField>)?
    BarValues: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateTableInlineVisualization {
    DataBars: (TemplateDataBarsOptions)?
}

/// 
open class TemplateGrowthRateComputation {
    Value: (TemplateMeasureField)?
    PeriodSize: (Number|Mapping)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (TemplateDimensionField)?
}

typealias TemplateAxisDisplayDataDrivenRange = Dynamic


typealias TemplateSheetContentType = String|Mapping


/// 
open class TemplateParameterDeclaration {
    StringParameterDeclaration: (TemplateStringParameterDeclaration)?
    DecimalParameterDeclaration: (TemplateDecimalParameterDeclaration)?
    IntegerParameterDeclaration: (TemplateIntegerParameterDeclaration)?
    DateTimeParameterDeclaration: (TemplateDateTimeParameterDeclaration)?
}

typealias TemplateNumberScale = String|Mapping


/// 
open class TemplateGradientColor {
    Stops: (Listing<TemplateGradientStop>)?
}

/// 
open class TemplateAxisLogarithmicScale {
    Base: (Number|Mapping)?
}

typealias TemplateVisualCustomActionTrigger = String|Mapping


typealias TemplateBaseMapStyleType = String|Mapping


/// 
open class TemplateClusterMarkerConfiguration {
    ClusterMarker: (TemplateClusterMarker)?
}

/// 
open class TemplateTableSideBorderOptions {
    Left: (TemplateTableBorderOptions)?
    Right: (TemplateTableBorderOptions)?
    Top: (TemplateTableBorderOptions)?
    Bottom: (TemplateTableBorderOptions)?
    InnerVertical: (TemplateTableBorderOptions)?
    InnerHorizontal: (TemplateTableBorderOptions)?
}

/// 
open class TemplateTotalAggregationOption {
    FieldId: String|Mapping
    TotalAggregationFunction: TemplateTotalAggregationFunction
}

/// 
open class TemplateThousandSeparatorOptions {
    Symbol: (TemplateNumericSeparatorSymbol)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateFunnelChartConfiguration {
    FieldWells: (TemplateFunnelChartFieldWells)?
    SortConfiguration: (TemplateFunnelChartSortConfiguration)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    ValueLabelOptions: (TemplateChartAxisLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
    DataLabelOptions: (TemplateFunnelChartDataLabelOptions)?
    VisualPalette: (TemplateVisualPalette)?
}

/// 
open class TemplateDataSetConfiguration {
    DataSetSchema: (TemplateDataSetSchema)?
    ColumnGroupSchemaList: (Listing<TemplateColumnGroupSchema>)?
    Placeholder: (String|Mapping)?
}

/// 
open class TemplateLayoutConfiguration {
    GridLayout: (TemplateGridLayoutConfiguration)?
    FreeFormLayout: (TemplateFreeFormLayoutConfiguration)?
    SectionBasedLayout: (TemplateSectionBasedLayoutConfiguration)?
}

/// 
open class TemplateParameterSliderControl {
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (TemplateSliderControlDisplayOptions)?
    MaximumValue: Number|Mapping
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
}

/// 
open class TemplateTooltipOptions {
    SelectedTooltipType: (TemplateSelectedTooltipType)?
    FieldBasedTooltip: (TemplateFieldBasedTooltip)?
    TooltipVisibility: (TemplateVisibility)?
}

/// 
open class TemplateShapeConditionalFormat {
    BackgroundColor: TemplateConditionalFormattingColor
}

/// 
open class TemplateHeatMapConfiguration {
    FieldWells: (TemplateHeatMapFieldWells)?
    SortConfiguration: (TemplateHeatMapSortConfiguration)?
    RowLabelOptions: (TemplateChartAxisLabelOptions)?
    ColumnLabelOptions: (TemplateChartAxisLabelOptions)?
    ColorScale: (TemplateColorScale)?
    Legend: (TemplateLegendOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
}

/// 
open class TemplateKPIVisualLayoutOptions {
    StandardLayout: (TemplateKPIVisualStandardLayout)?
}

/// 
open class TemplateSectionAfterPageBreak {
    Status: (TemplateSectionPageBreakStatus)?
}

typealias TemplateCrossDatasetTypes = String|Mapping


/// 
open class TemplateSliderControlDisplayOptions {
    TitleOptions: (TemplateLabelOptions)?
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
}

/// 
open class TemplateKPIConditionalFormattingOption {
    PrimaryValue: (TemplateKPIPrimaryValueConditionalFormatting)?
    ProgressBar: (TemplateKPIProgressBarConditionalFormatting)?
    ActualValue: (TemplateKPIActualValueConditionalFormatting)?
    ComparisonValue: (TemplateKPIComparisonValueConditionalFormatting)?
}

/// 
open class TemplateVisibleRangeOptions {
    PercentRange: (TemplatePercentVisibleRange)?
}

/// 
open class TemplateColumnSort {
    Direction: TemplateSortDirection
    AggregationFunction: (TemplateAggregationFunction)?
    SortBy: TemplateColumnIdentifier
}

/// 
open class TemplateColumnSchema {
    Name: (String|Mapping)?
    DataType: (String|Mapping)?
    GeographicRole: (String|Mapping)?
}

/// 
open class TemplateFieldLabelType {
    Visibility: (TemplateVisibility)?
    FieldId: (String|Mapping)?
}

/// 
open class TemplateWordCloudChartConfiguration {
    FieldWells: (TemplateWordCloudFieldWells)?
    SortConfiguration: (TemplateWordCloudSortConfiguration)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    WordCloudOptions: (TemplateWordCloudOptions)?
}

/// 
open class TemplateTableStyleTarget {
    CellType: TemplateStyledCellType
}

/// 
open class TemplateIntegerValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (TemplateValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

/// 
open class TemplateListControlSelectAllOptions {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateWaterfallVisual {
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateWaterfallChartConfiguration)?
}

/// 
open class TemplateDataLabelOptions {
    CategoryLabelVisibility: (TemplateVisibility)?
    MeasureLabelVisibility: (TemplateVisibility)?
    DataLabelTypes: (Listing<TemplateDataLabelType>)?
    Position: (TemplateDataLabelPosition)?
    LabelFontConfiguration: (TemplateFontConfiguration)?
    Overlap: (TemplateDataLabelOverlap)?
    Visibility: (TemplateVisibility)?
    LabelContent: (TemplateDataLabelContent)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    TotalsVisibility: (TemplateVisibility)?
}

typealias TemplateSelectedTooltipType = String|Mapping


/// 
open class TemplateBinCountOptions {
    Value: (Number|Mapping)?
}

/// 
open class TemplateFunnelChartAggregatedFieldWells {
    Category: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateHistogramFieldWells {
    HistogramAggregatedFieldWells: (TemplateHistogramAggregatedFieldWells)?
}

/// 
open class TemplateBarChartAggregatedFieldWells {
    Colors: (Listing<TemplateDimensionField>)?
    SmallMultiples: (Listing<TemplateDimensionField>)?
    Category: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateDateTimeDefaultValues {
    DynamicValue: (TemplateDynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
    RollingDate: (TemplateRollingDateConfiguration)?
}

/// 
open class TemplatePivotTotalOptions {
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (TemplateTableCellStyle)?
    ValueCellStyle: (TemplateTableCellStyle)?
    MetricHeaderCellStyle: (TemplateTableCellStyle)?
    TotalsVisibility: (TemplateVisibility)?
    TotalAggregationOptions: (Listing<TemplateTotalAggregationOption>)?
    Placement: (TemplateTableTotalsPlacement)?
    ScrollStatus: (TemplateTableTotalsScrollStatus)?
}

/// 
open class TemplateKPISortConfiguration {
    TrendGroupSort: (Listing<TemplateFieldSortOptions>)?
}

/// 
open class TemplatePieChartConfiguration {
    DonutOptions: (TemplateDonutOptions)?
    SmallMultiplesOptions: (TemplateSmallMultiplesOptions)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
    VisualPalette: (TemplateVisualPalette)?
    ContributionAnalysisDefaults: (Listing<TemplateContributionAnalysisDefault>)?
    FieldWells: (TemplatePieChartFieldWells)?
    SortConfiguration: (TemplatePieChartSortConfiguration)?
    ValueLabelOptions: (TemplateChartAxisLabelOptions)?
    Legend: (TemplateLegendOptions)?
    DataLabels: (TemplateDataLabelOptions)?
}

/// 
open class TemplateWaterfallChartFieldWells {
    WaterfallChartAggregatedFieldWells: (TemplateWaterfallChartAggregatedFieldWells)?
}

/// 
open class TemplateExcludePeriodConfiguration {
    Granularity: TemplateTimeGranularity
    Status: (TemplateWidgetStatus)?
    Amount: Number|Mapping
}

/// 
open class TemplateFormatConfiguration {
    StringFormatConfiguration: (TemplateStringFormatConfiguration)?
    NumberFormatConfiguration: (TemplateNumberFormatConfiguration)?
    DateTimeFormatConfiguration: (TemplateDateTimeFormatConfiguration)?
}

/// 
open class TemplateDefaultSectionBasedLayoutConfiguration {
    CanvasSizeOptions: TemplateSectionBasedLayoutCanvasSizeOptions
}

typealias TemplateCategoryFilterSelectAllOptions = String|Mapping


/// 
open class TemplateDateTimeFormatConfiguration {
    DateTimeFormat: (String|Mapping)?
    NullValueFormatConfiguration: (TemplateNullValueFormatConfiguration)?
    NumericFormatConfiguration: (TemplateNumericFormatConfiguration)?
}

/// 
open class TemplateReferenceLineCustomLabelConfiguration {
    CustomLabel: String(matches(Regex(#".*\S.*"#)))|Mapping
}

/// 
open class TemplateTemplateSourceEntity {
    SourceAnalysis: (TemplateTemplateSourceAnalysis)?
    SourceTemplate: (TemplateTemplateSourceTemplate)?
}

/// 
open class TemplateFilledMapFieldWells {
    FilledMapAggregatedFieldWells: (TemplateFilledMapAggregatedFieldWells)?
}

typealias TemplateSectionPageBreakStatus = String|Mapping


/// 
open class TemplateLabelOptions {
    Visibility: (TemplateVisibility)?
    FontConfiguration: (TemplateFontConfiguration)?
    CustomLabel: (String|Mapping)?
}

typealias TemplateIcon = String|Mapping


/// 
open class TemplateFilterRelativeDateTimeControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (TemplateRelativeDateTimeControlDisplayOptions)?
}

/// 
open class TemplateRadarChartAggregatedFieldWells {
    Category: (Listing<TemplateDimensionField>)?
    Color: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateAssetOptions {
    Timezone: (String|Mapping)?
    WeekStart: (TemplateDayOfTheWeek)?
}

/// 
open class TemplateTableCellImageSizingConfiguration {
    TableCellImageScalingConfiguration: (TemplateTableCellImageScalingConfiguration)?
}

typealias TemplateMaximumMinimumComputationType = String|Mapping


/// 
open class TemplateBarChartSortConfiguration {
    ColorSort: (Listing<TemplateFieldSortOptions>)?
    ColorItemsLimit: (TemplateItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<TemplateFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (TemplateItemsLimitConfiguration)?
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    CategoryItemsLimit: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplateHeatMapAggregatedFieldWells {
    Columns: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
    Rows: (Listing<TemplateDimensionField>)?
}

/// 
open class TemplateCustomValuesConfiguration {
    IncludeNullValue: (Boolean|Mapping)?
    CustomValues: TemplateCustomParameterValues
}

/// 
open class TemplateDateTimeValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (TemplateValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

typealias TemplateComparisonMethod = String|Mapping


typealias TemplatePaperSize = String|Mapping


/// 
open class TemplateTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias TemplateDataLabelOverlap = String|Mapping


/// 
open class TemplateResourcePermission {
    Principal: String|Mapping
    Actions: Listing<String|Mapping>
}

/// 
open class TemplateDataSetReference {
    DataSetPlaceholder: String(matches(Regex(#".*\S.*"#)))|Mapping
    DataSetArn: String|Mapping
}

/// 
open class TemplateTextConditionalFormat {
    BackgroundColor: (TemplateConditionalFormattingColor)?
    TextColor: (TemplateConditionalFormattingColor)?
    Icon: (TemplateConditionalFormattingIcon)?
}

/// 
open class TemplateDataPathValue {
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
    DataPathType: (TemplateDataPathType)?
}

/// 
open class TemplateRowAlternateColorOptions {
    Status: (TemplateWidgetStatus)?
    RowAlternateColors: (Listing<String|Mapping>)?
    UsePrimaryBackgroundColor: (TemplateWidgetStatus)?
}

/// 
open class TemplateAxisDisplayRange {
    MinMax: (TemplateAxisDisplayMinMaxRange)?
    DataDriven: (TemplateAxisDisplayDataDrivenRange)?
}

typealias TemplateTargetVisualOptions = String|Mapping


/// 
open class TemplatePivotTableConditionalFormattingOption {
    Cell: (TemplatePivotTableCellConditionalFormatting)?
}

/// 
open class TemplateTopBottomMoversComputation {
    Category: (TemplateDimensionField)?
    Value: (TemplateMeasureField)?
    MoverSize: (Number|Mapping)?
    SortOrder: (TemplateTopBottomSortOrder)?
    Type: TemplateTopBottomComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (TemplateDimensionField)?
}

/// 
open class TemplateFilledMapConditionalFormattingOption {
    Shape: TemplateFilledMapShapeConditionalFormatting
}

/// 
open class TemplatePieChartVisual {
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplatePieChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
}

/// 
open class TemplateGaugeChartOptions {
    Arc: (TemplateArcConfiguration)?
    PrimaryValueFontConfiguration: (TemplateFontConfiguration)?
    PrimaryValueDisplayType: (TemplatePrimaryValueDisplayType)?
    Comparison: (TemplateComparisonConfiguration)?
    ArcAxis: (TemplateArcAxisConfiguration)?
}

/// 
open class TemplateRadarChartConfiguration {
    AlternateBandOddColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    VisualPalette: (TemplateVisualPalette)?
    AlternateBandEvenColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    StartAngle: (Number|Mapping)?
    Legend: (TemplateLegendOptions)?
    ColorAxis: (TemplateAxisDisplayOptions)?
    Shape: (TemplateRadarChartShape)?
    CategoryAxis: (TemplateAxisDisplayOptions)?
    BaseSeriesSettings: (TemplateRadarChartSeriesSettings)?
    AlternateBandColorsVisibility: (TemplateVisibility)?
    ColorLabelOptions: (TemplateChartAxisLabelOptions)?
    AxesRangeScale: (TemplateRadarChartAxesRangeScale)?
    FieldWells: (TemplateRadarChartFieldWells)?
    SortConfiguration: (TemplateRadarChartSortConfiguration)?
}

typealias TemplateRelativeDateType = String|Mapping


/// 
open class TemplateStringDefaultValues {
    DynamicValue: (TemplateDynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
}

typealias TemplateKPIVisualStandardLayoutType = String|Mapping


/// 
open class TemplateTableConfiguration {
    SortConfiguration: (TemplateTableSortConfiguration)?
    TableOptions: (TemplateTableOptions)?
    TotalOptions: (TemplateTotalOptions)?
    FieldOptions: (TemplateTableFieldOptions)?
    PaginatedReportOptions: (TemplateTablePaginatedReportOptions)?
    TableInlineVisualizations: (Listing<TemplateTableInlineVisualization>)?
    FieldWells: (TemplateTableFieldWells)?
}

/// 
open class TemplateSameSheetTargetVisualConfiguration {
    TargetVisuals: (Listing<String|Mapping>)?
    TargetVisualOptions: (TemplateTargetVisualOptions)?
}

/// 
open class TemplateContributionAnalysisDefault {
    MeasureFieldId: String|Mapping
    ContributorDimensions: Listing<TemplateColumnIdentifier>
}

/// 
open class TemplateRadarChartFieldWells {
    RadarChartAggregatedFieldWells: (TemplateRadarChartAggregatedFieldWells)?
}

typealias TemplateTableFieldIconSetType = String|Mapping


/// 
open class TemplateDataPathSort {
    Direction: TemplateSortDirection
    SortPaths: Listing<TemplateDataPathValue>
}

/// 
open class TemplateAnchorDateConfiguration {
    AnchorOption: (TemplateAnchorOption)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class TemplateFilterListControl {
    DisplayOptions: (TemplateListControlDisplayOptions)?
    Type: (TemplateSheetControlListType)?
    SelectableValues: (TemplateFilterSelectableValues)?
    CascadingControlConfiguration: (TemplateCascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class TemplateFilledMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateFilledMapConfiguration)?
    ConditionalFormatting: (TemplateFilledMapConditionalFormatting)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    Actions: (Listing<TemplateVisualCustomAction>)?
}

/// 
open class TemplateTemplateError {
    Type: (TemplateTemplateErrorType)?
    Message: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
    ViolatedEntities: (Listing<TemplateEntity>)?
}

/// 
open class TemplateVisualCustomAction {
    CustomActionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: String|Mapping
    Status: (TemplateWidgetStatus)?
    Trigger: TemplateVisualCustomActionTrigger
    ActionOperations: Listing<TemplateVisualCustomActionOperation>
}

typealias TemplateCustomContentType = String|Mapping


/// 
open class TemplateSmallMultiplesOptions {
    MaxVisibleRows: (Number|Mapping)?
    MaxVisibleColumns: (Number|Mapping)?
    PanelConfiguration: (TemplatePanelConfiguration)?
    XAxis: (TemplateSmallMultiplesAxisProperties)?
    YAxis: (TemplateSmallMultiplesAxisProperties)?
}

/// 
open class TemplateFilledMapAggregatedFieldWells {
    Geospatial: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateTemplateVersionDefinition {
    DataSetConfigurations: Listing<TemplateDataSetConfiguration>
    Sheets: (Listing<TemplateSheetDefinition>)?
    CalculatedFields: (Listing<TemplateCalculatedField>)?
    ParameterDeclarations: (Listing<TemplateParameterDeclaration>)?
    FilterGroups: (Listing<TemplateFilterGroup>)?
    ColumnConfigurations: (Listing<TemplateColumnConfiguration>)?
    AnalysisDefaults: (TemplateAnalysisDefaults)?
    Options: (TemplateAssetOptions)?
}

/// 
open class TemplateEntity {
    Path: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
}

/// 
open class TemplateListControlSearchOptions {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplatePivotTablePaginatedReportOptions {
    VerticalOverflowVisibility: (TemplateVisibility)?
    OverflowColumnHeaderVisibility: (TemplateVisibility)?
}

/// 
open class TemplateColumnIdentifier {
    DataSetIdentifier: String|Mapping
    ColumnName: String|Mapping
}

/// 
open class TemplateKPIOptions {
    Comparison: (TemplateComparisonConfiguration)?
    Sparkline: (TemplateKPISparklineOptions)?
    ProgressBar: (TemplateProgressBarOptions)?
    TrendArrows: (TemplateTrendArrowOptions)?
    SecondaryValue: (TemplateSecondaryValueOptions)?
    VisualLayoutOptions: (TemplateKPIVisualLayoutOptions)?
    PrimaryValueDisplayType: (TemplatePrimaryValueDisplayType)?
    PrimaryValueFontConfiguration: (TemplateFontConfiguration)?
    SecondaryValueFontConfiguration: (TemplateFontConfiguration)?
}

/// 
open class TemplateAxisDataOptions {
    NumericAxisOptions: (TemplateNumericAxisOptions)?
    DateAxisOptions: (TemplateDateAxisOptions)?
}

/// 
open class TemplateNumericEqualityDrillDownFilter {
    Column: TemplateColumnIdentifier
    Value: Number|Mapping
}

/// 
open class TemplateComparisonConfiguration {
    ComparisonMethod: (TemplateComparisonMethod)?
    ComparisonFormat: (TemplateComparisonFormatConfiguration)?
}

typealias TemplateTableOrientation = String|Mapping


typealias TemplateValidationStrategyMode = String|Mapping


/// 
open class TemplateTableFieldImageConfiguration {
    SizingOptions: (TemplateTableCellImageSizingConfiguration)?
}

typealias TemplateTimeGranularity = String|Mapping


/// 
open class TemplateGeospatialMapConfiguration {
    VisualPalette: (TemplateVisualPalette)?
    FieldWells: (TemplateGeospatialMapFieldWells)?
    Legend: (TemplateLegendOptions)?
    Tooltip: (TemplateTooltipOptions)?
    WindowOptions: (TemplateGeospatialWindowOptions)?
    MapStyleOptions: (TemplateGeospatialMapStyleOptions)?
    PointStyleOptions: (TemplateGeospatialPointStyleOptions)?
}

/// 
open class TemplatePivotTableDataPathOption {
    Width: (String|Mapping)?
    DataPathList: Listing<TemplateDataPathValue>
}

typealias TemplateStyledCellType = String|Mapping


typealias TemplateSmallMultiplesAxisPlacement = String|Mapping


/// 
open class TemplateParameterListControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (TemplateListControlDisplayOptions)?
    Type: (TemplateSheetControlListType)?
    SelectableValues: (TemplateParameterSelectableValues)?
    CascadingControlConfiguration: (TemplateCascadingControlConfiguration)?
}

/// 
open class TemplateDimensionField {
    NumericalDimensionField: (TemplateNumericalDimensionField)?
    CategoricalDimensionField: (TemplateCategoricalDimensionField)?
    DateDimensionField: (TemplateDateDimensionField)?
}

/// 
open class TemplateRadarChartSortConfiguration {
    ColorSort: (Listing<TemplateFieldSortOptions>)?
    ColorItemsLimit: (TemplateItemsLimitConfiguration)?
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    CategoryItemsLimit: (TemplateItemsLimitConfiguration)?
}

typealias TemplateDateAggregationFunction = String|Mapping


/// 
open class TemplateHeatMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateHeatMapConfiguration)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    Actions: (Listing<TemplateVisualCustomAction>)?
}

/// 
open class TemplateWhatIfPointScenario {
    Date: String|Mapping
    Value: Number|Mapping
}

/// 
open class TemplateHeatMapSortConfiguration {
    HeatMapRowSort: (Listing<TemplateFieldSortOptions>)?
    HeatMapColumnSort: (Listing<TemplateFieldSortOptions>)?
    HeatMapRowItemsLimitConfiguration: (TemplateItemsLimitConfiguration)?
    HeatMapColumnItemsLimitConfiguration: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplatePivotTableSortConfiguration {
    FieldSortOptions: (Listing<TemplatePivotFieldSortOptions>)?
}

/// 
open class TemplateHeatMapFieldWells {
    HeatMapAggregatedFieldWells: (TemplateHeatMapAggregatedFieldWells)?
}

/// 
open class TemplateSankeyDiagramVisual {
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateSankeyDiagramChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class TemplateNumericalMeasureField {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    AggregationFunction: (TemplateNumericalAggregationFunction)?
    FormatConfiguration: (TemplateNumberFormatConfiguration)?
}

/// 
open class TemplateTimeBasedForecastProperties {
    LowerBoundary: (Number|Mapping)?
    PredictionInterval: (Number|Mapping)?
    Seasonality: (Number|Mapping)?
    PeriodsForward: (Number|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
}

/// 
open class TemplateTopBottomRankedComputation {
    ResultSize: (Number|Mapping)?
    Type: TemplateTopBottomComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Category: (TemplateDimensionField)?
    Value: (TemplateMeasureField)?
}

/// 
open class TemplateDataBarsOptions {
    FieldId: String|Mapping
    PositiveColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    NegativeColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class TemplateGeospatialMapStyleOptions {
    BaseMapStyle: (TemplateBaseMapStyleType)?
}

/// 
open class TemplateFilterSliderControl {
    MaximumValue: Number|Mapping
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (TemplateSliderControlDisplayOptions)?
    Type: (TemplateSheetControlSliderType)?
}

/// 
open class TemplateNumericRangeFilter {
    Column: TemplateColumnIdentifier
    IncludeMinimum: (Boolean|Mapping)?
    IncludeMaximum: (Boolean|Mapping)?
    RangeMaximum: (TemplateNumericRangeFilterValue)?
    SelectAllOptions: (TemplateNumericFilterSelectAllOptions)?
    AggregationFunction: (TemplateAggregationFunction)?
    NullOption: TemplateFilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    RangeMinimum: (TemplateNumericRangeFilterValue)?
}

typealias TemplateDayOfTheWeek = String|Mapping


/// 
open class TemplateEmptyVisual {
    Actions: (Listing<TemplateVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DataSetIdentifier: String|Mapping
}

/// 
open class TemplateFunnelChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateFunnelChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
}

/// 
open class TemplateDateTimeHierarchy {
    HierarchyId: String|Mapping
    DrillDownFilters: (Listing<TemplateDrillDownFilter>)?
}

/// 
open class TemplateCurrencyDisplayFormatConfiguration {
    NegativeValueConfiguration: (TemplateNegativeValueConfiguration)?
    NullValueFormatConfiguration: (TemplateNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (TemplateNumericSeparatorConfiguration)?
    Symbol: (String(matches(Regex(#"[A-Z]{3}"#)))|Mapping)?
    DecimalPlacesConfiguration: (TemplateDecimalPlacesConfiguration)?
    NumberScale: (TemplateNumberScale)?
}

/// 
open class TemplateBinWidthOptions {
    Value: (Number|Mapping)?
    BinCountLimit: (Number|Mapping)?
}

/// 
open class TemplateFontConfiguration {
    FontSize: (TemplateFontSize)?
    FontDecoration: (TemplateFontDecoration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    FontWeight: (TemplateFontWeight)?
    FontStyle: (TemplateFontStyle)?
}

typealias TemplateSheetControlListType = String|Mapping


/// 
open class TemplateGeospatialCoordinateBounds {
    North: Number|Mapping
    South: Number|Mapping
    West: Number|Mapping
    East: Number|Mapping
}

/// 
open class TemplateKPIConditionalFormatting {
    ConditionalFormattingOptions: (Listing<TemplateKPIConditionalFormattingOption>)?
}

/// 
open class TemplateNumberDisplayFormatConfiguration {
    NegativeValueConfiguration: (TemplateNegativeValueConfiguration)?
    NullValueFormatConfiguration: (TemplateNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (TemplateNumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (TemplateDecimalPlacesConfiguration)?
    NumberScale: (TemplateNumberScale)?
}

/// 
open class TemplateProgressBarOptions {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateParameterDateTimePickerControl {
    DisplayOptions: (TemplateDateTimePickerControlDisplayOptions)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class TemplateGridLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (TemplateGridLayoutScreenCanvasSizeOptions)?
}

/// 
open class TemplateGradientStop {
    DataValue: (Number|Mapping)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    GradientOffset: Number|Mapping
}

/// 
open class TemplateCustomNarrativeOptions {
    Narrative: String|Mapping
}

/// 
open class TemplateDonutOptions {
    ArcOptions: (TemplateArcOptions)?
    DonutCenterOptions: (TemplateDonutCenterOptions)?
}

/// 
open class TemplatePanelTitleOptions {
    Visibility: (TemplateVisibility)?
    FontConfiguration: (TemplateFontConfiguration)?
    HorizontalTextAlignment: (TemplateHorizontalTextAlignment)?
}

/// 
open class TemplateTimeRangeFilter {
    Column: TemplateColumnIdentifier
    IncludeMinimum: (Boolean|Mapping)?
    IncludeMaximum: (Boolean|Mapping)?
    TimeGranularity: (TemplateTimeGranularity)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    RangeMaximumValue: (TemplateTimeRangeFilterValue)?
    NullOption: TemplateFilterNullOption
    ExcludePeriodConfiguration: (TemplateExcludePeriodConfiguration)?
    RangeMinimumValue: (TemplateTimeRangeFilterValue)?
}

/// 
open class TemplatePivotFieldSortOptions {
    FieldId: String|Mapping
    SortBy: TemplatePivotTableSortBy
}

typealias TemplateBoxPlotFillStyle = String|Mapping


typealias TemplateArcThicknessOptions = String|Mapping


/// 
open class TemplateConditionalFormattingCustomIconCondition {
    Expression: String|Mapping
    IconOptions: TemplateConditionalFormattingCustomIconOptions
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    DisplayConfiguration: (TemplateConditionalFormattingIconDisplayConfiguration)?
}

/// 
open class TemplateGaugeChartConfiguration {
    FieldWells: (TemplateGaugeChartFieldWells)?
    GaugeChartOptions: (TemplateGaugeChartOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    TooltipOptions: (TemplateTooltipOptions)?
    VisualPalette: (TemplateVisualPalette)?
}

/// 
open class TemplateTableCellConditionalFormatting {
    FieldId: String|Mapping
    TextFormat: (TemplateTextConditionalFormat)?
}

/// 
open class TemplateDataSetSchema {
    ColumnSchemaList: (Listing<TemplateColumnSchema>)?
}

/// 
open class TemplatePieChartFieldWells {
    PieChartAggregatedFieldWells: (TemplatePieChartAggregatedFieldWells)?
}

/// 
open class TemplateConditionalFormattingCustomIconOptions {
    Icon: (TemplateIcon)?
    UnicodeIcon: (String(matches(Regex(#"^[^\u0000-\u00FF]$"#)))|Mapping)?
}

/// 
open class TemplateDecimalValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (TemplateValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

typealias TemplateTopBottomSortOrder = String|Mapping


/// 
open class TemplateLongFormatText {
    PlainText: (String|Mapping)?
    RichText: (String|Mapping)?
}

/// 
open class TemplateFilterDateTimePickerControl {
    DisplayOptions: (TemplateDateTimePickerControlDisplayOptions)?
    Type: (TemplateSheetControlDateTimePickerType)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class TemplateTableUnaggregatedFieldWells {
    Values: (Listing<TemplateUnaggregatedField>)?
}

/// 
open class TemplateDefaultFreeFormLayoutConfiguration {
    CanvasSizeOptions: TemplateFreeFormLayoutCanvasSizeOptions
}

typealias TemplateHistogramBinType = String|Mapping


/// 
open class TemplateNumericEqualityFilter {
    AggregationFunction: (TemplateAggregationFunction)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: TemplateFilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: TemplateColumnIdentifier
    Value: (Number|Mapping)?
    SelectAllOptions: (TemplateNumericFilterSelectAllOptions)?
    MatchOperator: TemplateNumericEqualityMatchOperator
}

/// 
open class TemplateFontSize {
    Relative: (TemplateRelativeFontSize)?
}

/// 
open class TemplateKPIConfiguration {
    FieldWells: (TemplateKPIFieldWells)?
    SortConfiguration: (TemplateKPISortConfiguration)?
    KPIOptions: (TemplateKPIOptions)?
}

/// 
open class TemplateTemplateVersion {
    VersionNumber: (Number|Mapping)?
    SourceEntityArn: (String|Mapping)?
    ThemeArn: (String|Mapping)?
    Errors: (Listing<TemplateTemplateError>)?
    Status: (TemplateResourceStatus)?
    DataSetConfigurations: (Listing<TemplateDataSetConfiguration>)?
    Description: (String|Mapping)?
    Sheets: (Listing<TemplateSheet>)?
    CreatedTime: (String|Mapping)?
}

/// 
open class TemplateBoxPlotAggregatedFieldWells {
    GroupBy: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateDecimalDefaultValues {
    DynamicValue: (TemplateDynamicDefaultValue)?
    StaticValues: (Listing<Number|Mapping>)?
}

/// 
open class TemplateGaugeChartFieldWells {
    Values: (Listing<TemplateMeasureField>)?
    TargetValues: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplatePivotTableFieldCollapseStateOption {
    Target: TemplatePivotTableFieldCollapseStateTarget
    State: (TemplatePivotTableFieldCollapseState)?
}

/// 
open class TemplateCustomActionURLOperation {
    URLTemplate: String|Mapping
    URLTarget: TemplateURLTargetConfiguration
}

typealias TemplateFontStyle = String|Mapping


/// 
open class TemplateTextAreaControlDisplayOptions {
    TitleOptions: (TemplateLabelOptions)?
    PlaceholderOptions: (TemplateTextControlPlaceholderOptions)?
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
}

/// 
open class TemplateBarChartFieldWells {
    BarChartAggregatedFieldWells: (TemplateBarChartAggregatedFieldWells)?
}

/// 
open class TemplateGeospatialMapFieldWells {
    GeospatialMapAggregatedFieldWells: (TemplateGeospatialMapAggregatedFieldWells)?
}

/// 
open class TemplateParameterSelectableValues {
    LinkToDataSetColumn: (TemplateColumnIdentifier)?
    Values: (Listing<String|Mapping>)?
}

typealias TemplateLineChartLineStyle = String|Mapping


/// 
open class TemplateCategoricalDimensionField {
    FormatConfiguration: (TemplateStringFormatConfiguration)?
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    HierarchyId: (String|Mapping)?
}

/// 
open class TemplateRadarChartAreaStyleSettings {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateAnalysisDefaults {
    DefaultNewSheetConfiguration: TemplateDefaultNewSheetConfiguration
}

/// 
open class TemplateSectionBasedLayoutCanvasSizeOptions {
    PaperCanvasSizeOptions: (TemplateSectionBasedLayoutPaperCanvasSizeOptions)?
}

/// 
open class TemplateCustomActionFilterOperation {
    SelectedFieldsConfiguration: TemplateFilterOperationSelectedFieldsConfiguration
    TargetVisualsConfiguration: TemplateFilterOperationTargetVisualsConfiguration
}

/// 
open class TemplatePivotTableCellConditionalFormatting {
    Scopes: (Listing<TemplatePivotTableConditionalFormattingScope>)?
    FieldId: String|Mapping
    TextFormat: (TemplateTextConditionalFormat)?
    Scope: (TemplatePivotTableConditionalFormattingScope)?
}

/// 
open class TemplateCustomParameterValues {
    IntegerValues: (Listing<Number|Mapping>)?
    DecimalValues: (Listing<Number|Mapping>)?
    DateTimeValues: (Listing<String|Mapping>)?
    StringValues: (Listing<String|Mapping>)?
}

/// 
open class TemplateInsightVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    InsightConfiguration: (TemplateInsightConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    DataSetIdentifier: String|Mapping
}

typealias TemplateVisibility = String|Mapping


/// 
open class TemplateBodySectionConfiguration {
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: TemplateBodySectionContent
    Style: (TemplateSectionStyle)?
    PageBreakConfiguration: (TemplateSectionPageBreakConfiguration)?
}

/// 
open class TemplateBodySectionContent {
    Layout: (TemplateSectionLayoutConfiguration)?
}

/// 
open class TemplateGridLayoutScreenCanvasSizeOptions {
    ResizeOption: TemplateResizeOption
    OptimizedViewPortWidth: (String|Mapping)?
}

/// 
open class TemplateMeasureField {
    NumericalMeasureField: (TemplateNumericalMeasureField)?
    CategoricalMeasureField: (TemplateCategoricalMeasureField)?
    DateMeasureField: (TemplateDateMeasureField)?
    CalculatedMeasureField: (TemplateCalculatedMeasureField)?
}

/// 
open class TemplateGridLayoutElement {
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    ElementType: TemplateLayoutElementType
    ColumnIndex: (Number|Mapping)?
    ColumnSpan: Number|Mapping
    RowIndex: (Number|Mapping)?
    RowSpan: Number|Mapping
}

/// 
open class TemplatePieChartAggregatedFieldWells {
    SmallMultiples: (Listing<TemplateDimensionField>)?
    Category: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateTimeRangeDrillDownFilter {
    Column: TemplateColumnIdentifier
    RangeMinimum: String|Mapping
    RangeMaximum: String|Mapping
    TimeGranularity: TemplateTimeGranularity
}

/// 
open class TemplateFilterTextFieldControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (TemplateTextFieldControlDisplayOptions)?
}

/// 
open class TemplateAxisLabelOptions {
    ApplyTo: (TemplateAxisLabelReferenceOptions)?
    FontConfiguration: (TemplateFontConfiguration)?
    CustomLabel: (String|Mapping)?
}

/// 
open class TemplateColumnConfiguration {
    Column: TemplateColumnIdentifier
    FormatConfiguration: (TemplateFormatConfiguration)?
    Role: (TemplateColumnRole)?
    ColorsConfiguration: (TemplateColorsConfiguration)?
}

typealias TemplateTemplateErrorType = String|Mapping


/// 
open class TemplateWaterfallChartSortConfiguration {
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    BreakdownItemsLimit: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplateKPISparklineOptions {
    Visibility: (TemplateVisibility)?
    Type: TemplateKPISparklineType
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    TooltipVisibility: (TemplateVisibility)?
}

/// 
open class TemplateScatterPlotFieldWells {
    ScatterPlotCategoricallyAggregatedFieldWells: (TemplateScatterPlotCategoricallyAggregatedFieldWells)?
    ScatterPlotUnaggregatedFieldWells: (TemplateScatterPlotUnaggregatedFieldWells)?
}

/// 
open class TemplateDropDownControlDisplayOptions {
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
    SelectAllOptions: (TemplateListControlSelectAllOptions)?
    TitleOptions: (TemplateLabelOptions)?
}

/// 
open class TemplateExplicitHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<TemplateColumnIdentifier>
    DrillDownFilters: (Listing<TemplateDrillDownFilter>)?
}

/// 
open class TemplateDefaultGridLayoutConfiguration {
    CanvasSizeOptions: TemplateGridLayoutCanvasSizeOptions
}

typealias TemplatePivotTableConditionalFormattingScopeRole = String|Mapping


typealias TemplateTableTotalsPlacement = String|Mapping


/// 
open class TemplateConditionalFormattingSolidColor {
    Expression: String|Mapping
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class TemplateForecastScenario {
    WhatIfPointScenario: (TemplateWhatIfPointScenario)?
    WhatIfRangeScenario: (TemplateWhatIfRangeScenario)?
}

typealias TemplateFilterVisualScope = String|Mapping


/// 
open class TemplateHistogramConfiguration {
    XAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    XAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    YAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    BinOptions: (TemplateHistogramBinOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
    VisualPalette: (TemplateVisualPalette)?
    FieldWells: (TemplateHistogramFieldWells)?
}

/// 
open class TemplatePivotTableFieldCollapseStateTarget {
    FieldId: (String|Mapping)?
    FieldDataPathValues: (Listing<TemplateDataPathValue>)?
}

/// 
open class TemplateDateTimeParameterDeclaration {
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (TemplateDateTimeDefaultValues)?
    TimeGranularity: (TemplateTimeGranularity)?
    ValueWhenUnset: (TemplateDateTimeValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<TemplateMappedDataSetParameter>)?
}

/// 
open class TemplateArcOptions {
    ArcThickness: (TemplateArcThickness)?
}

/// 
open class TemplateAttributeAggregationFunction {
    SimpleAttributeAggregation: (TemplateSimpleAttributeAggregationFunction)?
    ValueForMultipleValues: (String|Mapping)?
}

/// 
open class TemplateFreeFormLayoutElement {
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    ElementType: TemplateLayoutElementType
    Width: String|Mapping
    SelectedBorderStyle: (TemplateFreeFormLayoutElementBorderStyle)?
    BackgroundStyle: (TemplateFreeFormLayoutElementBackgroundStyle)?
    LoadingAnimation: (TemplateLoadingAnimation)?
    XAxisLocation: String|Mapping
    YAxisLocation: String|Mapping
    Height: String|Mapping
    Visibility: (TemplateVisibility)?
    RenderingRules: (Listing<TemplateSheetElementRenderingRule>)?
    BorderStyle: (TemplateFreeFormLayoutElementBorderStyle)?
}

typealias TemplateArcThickness = String|Mapping


/// 
open class TemplateDefaultPaginatedLayoutConfiguration {
    SectionBased: (TemplateDefaultSectionBasedLayoutConfiguration)?
}

/// 
open class TemplateHistogramBinOptions {
    SelectedBinType: (TemplateHistogramBinType)?
    BinCount: (TemplateBinCountOptions)?
    BinWidth: (TemplateBinWidthOptions)?
    StartValue: (Number|Mapping)?
}

/// 
open class TemplateSectionBasedLayoutConfiguration {
    HeaderSections: Listing<TemplateHeaderFooterSectionConfiguration>
    BodySections: Listing<TemplateBodySectionConfiguration>
    FooterSections: Listing<TemplateHeaderFooterSectionConfiguration>
    CanvasSizeOptions: TemplateSectionBasedLayoutCanvasSizeOptions
}

/// 
open class TemplatePanelConfiguration {
    Title: (TemplatePanelTitleOptions)?
    BorderColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    GutterSpacing: (String|Mapping)?
    BorderVisibility: (TemplateVisibility)?
    BorderThickness: (String|Mapping)?
    BorderStyle: (TemplatePanelBorderStyle)?
    GutterVisibility: (TemplateVisibility)?
    BackgroundVisibility: (TemplateVisibility)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

typealias TemplateFontWeightName = String|Mapping


/// 
open class TemplateTimeEqualityFilter {
    Value: (String|Mapping)?
    RollingDate: (TemplateRollingDateConfiguration)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    TimeGranularity: (TemplateTimeGranularity)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: TemplateColumnIdentifier
}

/// 
open class TemplateFilterOperationSelectedFieldsConfiguration {
    SelectedFieldOptions: (TemplateSelectedFieldOptions)?
    SelectedColumns: (Listing<TemplateColumnIdentifier>)?
    SelectedFields: (Listing<String|Mapping>)?
}

/// 
open class TemplateSubtotalOptions {
    TotalsVisibility: (TemplateVisibility)?
    CustomLabel: (String|Mapping)?
    FieldLevel: (TemplatePivotTableSubtotalLevel)?
    FieldLevelOptions: (Listing<TemplatePivotTableFieldSubtotalOptions>)?
    TotalCellStyle: (TemplateTableCellStyle)?
    ValueCellStyle: (TemplateTableCellStyle)?
    MetricHeaderCellStyle: (TemplateTableCellStyle)?
    StyleTargets: (Listing<TemplateTableStyleTarget>)?
}

typealias TemplateReferenceLinePatternType = String|Mapping


/// 
open class TemplateNullValueFormatConfiguration {
    NullString: String|Mapping
}

/// 
open class TemplateConditionalFormattingIconDisplayConfiguration {
    IconDisplayOption: (TemplateConditionalFormattingIconDisplayOption)?
}

/// 
open class TemplateAggregationSortConfiguration {
    Column: TemplateColumnIdentifier
    SortDirection: TemplateSortDirection
    AggregationFunction: (TemplateAggregationFunction)?
}

/// 
open class TemplateLineChartLineStyleSettings {
    LineVisibility: (TemplateVisibility)?
    LineInterpolation: (TemplateLineInterpolation)?
    LineStyle: (TemplateLineChartLineStyle)?
    LineWidth: (String|Mapping)?
}

/// 
open class TemplateWordCloudFieldWells {
    WordCloudAggregatedFieldWells: (TemplateWordCloudAggregatedFieldWells)?
}

/// 
open class TemplateRadarChartVisual {
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateRadarChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
}

typealias TemplateValueWhenUnsetOption = String|Mapping


typealias TemplateAllSheetsFilterScopeConfiguration = Dynamic


/// 
open class TemplateTotalOptions {
    TotalsVisibility: (TemplateVisibility)?
    TotalAggregationOptions: (Listing<TemplateTotalAggregationOption>)?
    Placement: (TemplateTableTotalsPlacement)?
    ScrollStatus: (TemplateTableTotalsScrollStatus)?
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (TemplateTableCellStyle)?
}

/// 
open class TemplateMappedDataSetParameter {
    DataSetParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DataSetIdentifier: String|Mapping
}

/// 
open class TemplateLineChartMarkerStyleSettings {
    MarkerSize: (String|Mapping)?
    MarkerColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    MarkerVisibility: (TemplateVisibility)?
    MarkerShape: (TemplateLineChartMarkerShape)?
}

/// 
open class TemplateDecimalPlacesConfiguration {
    DecimalPlaces: Number|Mapping
}

typealias TemplateTooltipTitleType = String|Mapping


/// 
open class TemplateKPIProgressBarConditionalFormatting {
    ForegroundColor: (TemplateConditionalFormattingColor)?
}

/// 
open class TemplateIntegerParameterDeclaration {
    ParameterValueType: TemplateParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (TemplateIntegerDefaultValues)?
    ValueWhenUnset: (TemplateIntegerValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<TemplateMappedDataSetParameter>)?
}

/// 
open class TemplateFilterSelectableValues {
    Values: (Listing<String|Mapping>)?
}

/// 
open class TemplateTableConditionalFormattingOption {
    Cell: (TemplateTableCellConditionalFormatting)?
    Row: (TemplateTableRowConditionalFormatting)?
}

/// 
open class TemplatePivotTableConfiguration {
    FieldOptions: (TemplatePivotTableFieldOptions)?
    PaginatedReportOptions: (TemplatePivotTablePaginatedReportOptions)?
    FieldWells: (TemplatePivotTableFieldWells)?
    SortConfiguration: (TemplatePivotTableSortConfiguration)?
    TableOptions: (TemplatePivotTableOptions)?
    TotalOptions: (TemplatePivotTableTotalOptions)?
}

/// 
open class TemplatePivotTableFieldOption {
    FieldId: String|Mapping
    CustomLabel: (String|Mapping)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateSheetTextBox {
    SheetTextBoxId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: (String|Mapping)?
}

/// 
open class TemplateDataColor {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    DataValue: (Number|Mapping)?
}

/// 
open class TemplateDestinationParameterValueConfiguration {
    SourceField: (String|Mapping)?
    SourceColumn: (TemplateColumnIdentifier)?
    CustomValuesConfiguration: (TemplateCustomValuesConfiguration)?
    SelectAllValueOptions: (TemplateSelectAllValueOptions)?
    SourceParameterName: (String|Mapping)?
}

typealias TemplateParameterValueType = String|Mapping


/// 
open class TemplateLoadingAnimation {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateNumberFormatConfiguration {
    FormatConfiguration: (TemplateNumericFormatConfiguration)?
}

typealias TemplateNegativeValueDisplayMode = String|Mapping


/// 
open class TemplateSheetElementRenderingRule {
    Expression: String|Mapping
    ConfigurationOverrides: TemplateSheetElementConfigurationOverrides
}

/// 
open class TemplateGaugeChartPrimaryValueConditionalFormatting {
    TextColor: (TemplateConditionalFormattingColor)?
    Icon: (TemplateConditionalFormattingIcon)?
}

/// 
open class TemplateRollingDateConfiguration {
    DataSetIdentifier: (String|Mapping)?
    Expression: String|Mapping
}

/// 
open class TemplateHistogramVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateHistogramConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
}

typealias TemplateDataLabelContent = String|Mapping


/// 
open class TemplateArcConfiguration {
    ArcAngle: (Number|Mapping)?
    ArcThickness: (TemplateArcThicknessOptions)?
}

/// 
open class TemplateKPIComparisonValueConditionalFormatting {
    TextColor: (TemplateConditionalFormattingColor)?
    Icon: (TemplateConditionalFormattingIcon)?
}

/// 
open class TemplateTopBottomFilter {
    Limit: (Number|Mapping)?
    AggregationSortConfigurations: Listing<TemplateAggregationSortConfiguration>
    TimeGranularity: (TemplateTimeGranularity)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: TemplateColumnIdentifier
}

/// 
open class TemplateGeospatialPointStyleOptions {
    HeatmapConfiguration: (TemplateGeospatialHeatmapConfiguration)?
    SelectedPointStyle: (TemplateGeospatialSelectedPointStyle)?
    ClusterMarkerConfiguration: (TemplateClusterMarkerConfiguration)?
}

typealias TemplateRadarChartAxesRangeScale = String|Mapping


/// 
open class TemplateTableBorderOptions {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Thickness: (Number|Mapping)?
    Style: (TemplateTableBorderStyle)?
}

/// 
open class TemplateCategoryFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: TemplateColumnIdentifier
    Configuration: TemplateCategoryFilterConfiguration
}

/// 
open class TemplateDefaultInteractiveLayoutConfiguration {
    Grid: (TemplateDefaultGridLayoutConfiguration)?
    FreeForm: (TemplateDefaultFreeFormLayoutConfiguration)?
}

/// 
open class TemplateGeospatialMapAggregatedFieldWells {
    Colors: (Listing<TemplateDimensionField>)?
    Geospatial: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateLineChartVisual {
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateLineChartConfiguration)?
}

/// 
open class TemplateDrillDownFilter {
    NumericEqualityFilter: (TemplateNumericEqualityDrillDownFilter)?
    CategoryFilter: (TemplateCategoryDrillDownFilter)?
    TimeRangeFilter: (TemplateTimeRangeDrillDownFilter)?
}

/// 
open class TemplateSetParameterValueConfiguration {
    DestinationParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Value: TemplateDestinationParameterValueConfiguration
}

/// 
open class TemplateWordCloudAggregatedFieldWells {
    GroupBy: (Listing<TemplateDimensionField>)?
    Size: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateDecimalParameterDeclaration {
    ParameterValueType: TemplateParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (TemplateDecimalDefaultValues)?
    ValueWhenUnset: (TemplateDecimalValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<TemplateMappedDataSetParameter>)?
}

/// 
open class TemplateTableVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateTableConfiguration)?
    ConditionalFormatting: (TemplateTableConditionalFormatting)?
    Actions: (Listing<TemplateVisualCustomAction>)?
}

typealias TemplateWordCloudWordOrientation = String|Mapping


/// 
open class TemplateScatterPlotConfiguration {
    XAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    YAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    YAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    Legend: (TemplateLegendOptions)?
    VisualPalette: (TemplateVisualPalette)?
    FieldWells: (TemplateScatterPlotFieldWells)?
    XAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
}

/// 
open class TemplateCalculatedField {
    DataSetIdentifier: String|Mapping
    Name: String|Mapping
    Expression: String|Mapping
}

/// 
open class TemplatePivotTableRowsLabelOptions {
    Visibility: (TemplateVisibility)?
    CustomLabel: (String|Mapping)?
}

typealias TemplateCategoricalAggregationFunction = String|Mapping


/// 
open class TemplateColorScale {
    Colors: Listing<TemplateDataColor>
    ColorFillType: TemplateColorFillType
    NullValueColor: (TemplateDataColor)?
}

/// 
open class TemplateWaterfallChartOptions {
    TotalBarLabel: (String|Mapping)?
}

/// 
open class TemplateParameterControl {
    TextField: (TemplateParameterTextFieldControl)?
    TextArea: (TemplateParameterTextAreaControl)?
    Slider: (TemplateParameterSliderControl)?
    DateTimePicker: (TemplateParameterDateTimePickerControl)?
    List: (TemplateParameterListControl)?
    Dropdown: (TemplateParameterDropDownControl)?
}

typealias TemplatePaperOrientation = String|Mapping


/// 
open class TemplateBarChartConfiguration {
    ValueLabelOptions: (TemplateChartAxisLabelOptions)?
    ColorLabelOptions: (TemplateChartAxisLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
    FieldWells: (TemplateBarChartFieldWells)?
    BarsArrangement: (TemplateBarsArrangement)?
    SmallMultiplesOptions: (TemplateSmallMultiplesOptions)?
    CategoryAxis: (TemplateAxisDisplayOptions)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    ReferenceLines: (Listing<TemplateReferenceLine>)?
    ContributionAnalysisDefaults: (Listing<TemplateContributionAnalysisDefault>)?
    SortConfiguration: (TemplateBarChartSortConfiguration)?
    Orientation: (TemplateBarChartOrientation)?
    ValueAxis: (TemplateAxisDisplayOptions)?
    Legend: (TemplateLegendOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    VisualPalette: (TemplateVisualPalette)?
}

/// 
open class TemplateChartAxisLabelOptions {
    SortIconVisibility: (TemplateVisibility)?
    AxisLabelOptions: (Listing<TemplateAxisLabelOptions>)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateTableSortConfiguration {
    RowSort: (Listing<TemplateFieldSortOptions>)?
    PaginationConfiguration: (TemplatePaginationConfiguration)?
}

/// 
open class TemplateBoxPlotVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateBoxPlotChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
}

/// 
open class TemplateScatterPlotUnaggregatedFieldWells {
    Size: (Listing<TemplateMeasureField>)?
    Category: (Listing<TemplateDimensionField>)?
    Label: (Listing<TemplateDimensionField>)?
    XAxis: (Listing<TemplateDimensionField>)?
    YAxis: (Listing<TemplateDimensionField>)?
}

/// 
open class TemplateDateDimensionField {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    DateGranularity: (TemplateTimeGranularity)?
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (TemplateDateTimeFormatConfiguration)?
}

typealias TemplateWordCloudWordScaling = String|Mapping


/// 
open class TemplateLineChartConfiguration {
    PrimaryYAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    VisualPalette: (TemplateVisualPalette)?
    FieldWells: (TemplateLineChartFieldWells)?
    XAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    XAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    SecondaryYAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    DefaultSeriesSettings: (TemplateLineChartDefaultSeriesSettings)?
    Legend: (TemplateLegendOptions)?
    Type: (TemplateLineChartType)?
    ReferenceLines: (Listing<TemplateReferenceLine>)?
    SortConfiguration: (TemplateLineChartSortConfiguration)?
    SmallMultiplesOptions: (TemplateSmallMultiplesOptions)?
    PrimaryYAxisDisplayOptions: (TemplateLineSeriesAxisDisplayOptions)?
    SecondaryYAxisDisplayOptions: (TemplateLineSeriesAxisDisplayOptions)?
    Series: (Listing<TemplateSeriesItem>)?
    Tooltip: (TemplateTooltipOptions)?
    ContributionAnalysisDefaults: (Listing<TemplateContributionAnalysisDefault>)?
    ForecastConfigurations: (Listing<TemplateForecastConfiguration>)?
}

/// 
open class TemplateReferenceLineDataConfiguration {
    StaticConfiguration: (TemplateReferenceLineStaticDataConfiguration)?
    DynamicConfiguration: (TemplateReferenceLineDynamicDataConfiguration)?
    AxisBinding: (TemplateAxisBinding)?
    SeriesType: (TemplateReferenceLineSeriesType)?
}

/// 
open class TemplateClusterMarker {
    SimpleClusterMarker: (TemplateSimpleClusterMarker)?
}

/// 
open class TemplateKPIActualValueConditionalFormatting {
    Icon: (TemplateConditionalFormattingIcon)?
    TextColor: (TemplateConditionalFormattingColor)?
}

typealias TemplateTableTotalsScrollStatus = String|Mapping


/// 
open class TemplateMetricComparisonComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (TemplateDimensionField)?
    FromValue: (TemplateMeasureField)?
    TargetValue: (TemplateMeasureField)?
}

/// 
open class TemplateMaximumMinimumComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (TemplateDimensionField)?
    Value: (TemplateMeasureField)?
    Type: TemplateMaximumMinimumComputationType
}

typealias TemplateTableBorderStyle = String|Mapping


/// 
open class TemplateGridLayoutConfiguration {
    Elements: Listing<TemplateGridLayoutElement>
    CanvasSizeOptions: (TemplateGridLayoutCanvasSizeOptions)?
}

/// 
open class TemplateTreeMapVisual {
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateTreeMapConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
}

/// 
open class TemplateTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<TemplateTableConditionalFormattingOption>)?
}

typealias TemplateFontDecoration = String|Mapping


/// 
open class TemplatePivotTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<TemplatePivotTableConditionalFormattingOption>)?
}

/// 
open class TemplateTablePaginatedReportOptions {
    VerticalOverflowVisibility: (TemplateVisibility)?
    OverflowColumnHeaderVisibility: (TemplateVisibility)?
}

typealias TemplateWidgetStatus = String|Mapping


/// 
open class TemplateCustomColor {
    SpecialValue: (TemplateSpecialValue)?
    FieldValue: (String|Mapping)?
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
}

/// 
open class TemplateConditionalFormattingIcon {
    IconSet: (TemplateConditionalFormattingIconSet)?
    CustomCondition: (TemplateConditionalFormattingCustomIconCondition)?
}

/// 
open class TemplatePivotTableTotalOptions {
    RowTotalOptions: (TemplatePivotTotalOptions)?
    ColumnTotalOptions: (TemplatePivotTotalOptions)?
    RowSubtotalOptions: (TemplateSubtotalOptions)?
    ColumnSubtotalOptions: (TemplateSubtotalOptions)?
}

/// 
open class TemplatePivotTableSortBy {
    Column: (TemplateColumnSort)?
    DataPath: (TemplateDataPathSort)?
    Field: (TemplateFieldSort)?
}

typealias TemplateNumericSeparatorSymbol = String|Mapping


/// 
open class TemplateGaugeChartConditionalFormatting {
    ConditionalFormattingOptions: (Listing<TemplateGaugeChartConditionalFormattingOption>)?
}

/// 
open class TemplateSectionBasedLayoutPaperCanvasSizeOptions {
    PaperSize: (TemplatePaperSize)?
    PaperOrientation: (TemplatePaperOrientation)?
    PaperMargin: (TemplateSpacing)?
}

/// 
open class TemplateTemplateSourceAnalysis {
    Arn: String|Mapping
    DataSetReferences: Listing<TemplateDataSetReference>
}

typealias TemplateSpecialValue = String|Mapping


/// 
open class TemplateScrollBarOptions {
    VisibleRange: (TemplateVisibleRangeOptions)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateReferenceLineLabelConfiguration {
    FontConfiguration: (TemplateFontConfiguration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    HorizontalPosition: (TemplateReferenceLineLabelHorizontalPosition)?
    VerticalPosition: (TemplateReferenceLineLabelVerticalPosition)?
    ValueLabelConfiguration: (TemplateReferenceLineValueLabelConfiguration)?
    CustomLabelConfiguration: (TemplateReferenceLineCustomLabelConfiguration)?
}

/// 
open class TemplateSankeyDiagramFieldWells {
    SankeyDiagramAggregatedFieldWells: (TemplateSankeyDiagramAggregatedFieldWells)?
}

/// 
open class TemplateDataPathType {
    PivotTableDataPathType: (TemplatePivotTableDataPathType)?
}

typealias TemplateWordCloudWordPadding = String|Mapping


/// 
open class TemplateSheetControlInfoIconLabelOptions {
    Visibility: (TemplateVisibility)?
    InfoIconText: (String|Mapping)?
}

typealias TemplateSimpleTotalAggregationFunction = String|Mapping


/// 
open class TemplateListControlDisplayOptions {
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
    SearchOptions: (TemplateListControlSearchOptions)?
    SelectAllOptions: (TemplateListControlSelectAllOptions)?
    TitleOptions: (TemplateLabelOptions)?
}

typealias TemplateNumericEqualityMatchOperator = String|Mapping


/// 
open class TemplateGeospatialWindowOptions {
    Bounds: (TemplateGeospatialCoordinateBounds)?
    MapZoomMode: (TemplateMapZoomMode)?
}

/// 
open class TemplateIntegerDefaultValues {
    DynamicValue: (TemplateDynamicDefaultValue)?
    StaticValues: (Listing<Number|Mapping>)?
}

/// 
open class TemplatePercentVisibleRange {
    From: (Number|Mapping)?
    To: (Number|Mapping)?
}

/// 
open class TemplateWordCloudOptions {
    WordOrientation: (TemplateWordCloudWordOrientation)?
    WordScaling: (TemplateWordCloudWordScaling)?
    CloudLayout: (TemplateWordCloudCloudLayout)?
    WordCasing: (TemplateWordCloudWordCasing)?
    WordPadding: (TemplateWordCloudWordPadding)?
    MaximumStringLength: (Number|Mapping)?
}

/// 
open class TemplateLineSeriesAxisDisplayOptions {
    AxisOptions: (TemplateAxisDisplayOptions)?
    MissingDataConfigurations: (Listing<TemplateMissingDataConfiguration>)?
}

/// 
open class TemplateWordCloudVisual {
    ChartConfiguration: (TemplateWordCloudChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
}

/// 
open class TemplateLocalNavigationConfiguration {
    TargetSheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class TemplateSelectedSheetsFilterScopeConfiguration {
    SheetVisualScopingConfigurations: (Listing<TemplateSheetVisualScopingConfiguration>)?
}

/// 
open class TemplateSpacing {
    Right: (String|Mapping)?
    Top: (String|Mapping)?
    Bottom: (String|Mapping)?
    Left: (String|Mapping)?
}

typealias TemplateAxisBinding = String|Mapping


/// 
open class TemplateTableOptions {
    HeaderStyle: (TemplateTableCellStyle)?
    CellStyle: (TemplateTableCellStyle)?
    RowAlternateColorOptions: (TemplateRowAlternateColorOptions)?
    Orientation: (TemplateTableOrientation)?
}

/// 
open class TemplateArcAxisConfiguration {
    Range: (TemplateArcAxisDisplayRange)?
    ReserveRange: (Number|Mapping)?
}

/// 
open class TemplateRelativeDatesFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    RelativeDateValue: (Number|Mapping)?
    NullOption: TemplateFilterNullOption
    ExcludePeriodConfiguration: (TemplateExcludePeriodConfiguration)?
    RelativeDateType: TemplateRelativeDateType
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    Column: TemplateColumnIdentifier
    AnchorDateConfiguration: TemplateAnchorDateConfiguration
    MinimumGranularity: (TemplateTimeGranularity)?
    TimeGranularity: TemplateTimeGranularity
}

/// 
open class TemplateNegativeValueConfiguration {
    DisplayMode: TemplateNegativeValueDisplayMode
}

/// 
open class TemplateParameterDropDownControl {
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (TemplateDropDownControlDisplayOptions)?
    Type: (TemplateSheetControlListType)?
    SelectableValues: (TemplateParameterSelectableValues)?
    CascadingControlConfiguration: (TemplateCascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
}

/// 
open class TemplateFreeFormSectionLayoutConfiguration {
    Elements: Listing<TemplateFreeFormLayoutElement>
}

/// 
open class TemplateFontWeight {
    Name: (TemplateFontWeightName)?
}

/// 
open class TemplateTextControlPlaceholderOptions {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateSankeyDiagramAggregatedFieldWells {
    Source: (Listing<TemplateDimensionField>)?
    Destination: (Listing<TemplateDimensionField>)?
    Weight: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplatePaginationConfiguration {
    PageSize: Number|Mapping
    PageNumber: Number|Mapping
}

/// 
open class TemplateTableFieldLinkConfiguration {
    Target: TemplateURLTargetConfiguration
    Content: TemplateTableFieldLinkContentConfiguration
}

/// 
open class TemplateDonutCenterOptions {
    LabelVisibility: (TemplateVisibility)?
}

/// 
open class TemplateWaterfallChartAggregatedFieldWells {
    Categories: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
    Breakdowns: (Listing<TemplateDimensionField>)?
}

typealias TemplateReferenceLineLabelVerticalPosition = String|Mapping


typealias TemplateFunnelChartMeasureDataLabelStyle = String|Mapping


/// 
open class TemplateColorsConfiguration {
    CustomColors: (Listing<TemplateCustomColor>)?
}

/// 
open class TemplateComboChartConfiguration {
    ReferenceLines: (Listing<TemplateReferenceLine>)?
    VisualPalette: (TemplateVisualPalette)?
    BarsArrangement: (TemplateBarsArrangement)?
    CategoryAxis: (TemplateAxisDisplayOptions)?
    PrimaryYAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    LineDataLabels: (TemplateDataLabelOptions)?
    Tooltip: (TemplateTooltipOptions)?
    FieldWells: (TemplateComboChartFieldWells)?
    BarDataLabels: (TemplateDataLabelOptions)?
    Legend: (TemplateLegendOptions)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    PrimaryYAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    SecondaryYAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    SecondaryYAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    ColorLabelOptions: (TemplateChartAxisLabelOptions)?
    SortConfiguration: (TemplateComboChartSortConfiguration)?
}

typealias TemplateResourceStatus = String|Mapping


/// 
open class TemplateDynamicDefaultValue {
    DefaultValueColumn: TemplateColumnIdentifier
    UserNameColumn: (TemplateColumnIdentifier)?
    GroupNameColumn: (TemplateColumnIdentifier)?
}

/// 
open class TemplateSheet {
    Name: (String|Mapping)?
    SheetId: (String(matches(Regex(#"[\w\-]+"#)))|Mapping)?
}

/// 
open class TemplateComputation {
    UniqueValues: (TemplateUniqueValuesComputation)?
    Forecast: (TemplateForecastComputation)?
    TopBottomMovers: (TemplateTopBottomMoversComputation)?
    MetricComparison: (TemplateMetricComparisonComputation)?
    PeriodOverPeriod: (TemplatePeriodOverPeriodComputation)?
    GrowthRate: (TemplateGrowthRateComputation)?
    TopBottomRanked: (TemplateTopBottomRankedComputation)?
    TotalAggregation: (TemplateTotalAggregationComputation)?
    MaximumMinimum: (TemplateMaximumMinimumComputation)?
    PeriodToDate: (TemplatePeriodToDateComputation)?
}

/// 
open class TemplateAxisLabelReferenceOptions {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
}

/// 
open class TemplateGeospatialHeatmapColorScale {
    Colors: (Listing<TemplateGeospatialHeatmapDataColor>)?
}

/// 
open class TemplateStringParameterDeclaration {
    MappedDataSetParameters: (Listing<TemplateMappedDataSetParameter>)?
    ParameterValueType: TemplateParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (TemplateStringDefaultValues)?
    ValueWhenUnset: (TemplateStringValueWhenUnsetConfiguration)?
}

/// 
open class TemplateVisualSubtitleLabelOptions {
    Visibility: (TemplateVisibility)?
    FormatText: (TemplateLongFormatText)?
}

/// 
open class TemplateTrendArrowOptions {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateReferenceLine {
    Status: (TemplateWidgetStatus)?
    DataConfiguration: TemplateReferenceLineDataConfiguration
    StyleConfiguration: (TemplateReferenceLineStyleConfiguration)?
    LabelConfiguration: (TemplateReferenceLineLabelConfiguration)?
}

/// 
open class TemplateComboChartFieldWells {
    ComboChartAggregatedFieldWells: (TemplateComboChartAggregatedFieldWells)?
}

/// 
open class TemplateColumnTooltipItem {
    Column: TemplateColumnIdentifier
    Label: (String|Mapping)?
    Visibility: (TemplateVisibility)?
    Aggregation: (TemplateAggregationFunction)?
}

/// 
open class TemplateStringValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (TemplateValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

typealias TemplateSortDirection = String|Mapping


/// 
open class TemplatePivotTableFieldSubtotalOptions {
    FieldId: (String|Mapping)?
}

/// 
open class TemplateNumericalAggregationFunction {
    SimpleNumericalAggregation: (TemplateSimpleNumericalAggregationFunction)?
    PercentileAggregation: (TemplatePercentileAggregation)?
}

/// 
open class TemplateAxisDisplayMinMaxRange {
    Minimum: (Number|Mapping)?
    Maximum: (Number|Mapping)?
}

typealias TemplateAnchorOption = String|Mapping


/// 
open class TemplateNumericFormatConfiguration {
    CurrencyDisplayFormatConfiguration: (TemplateCurrencyDisplayFormatConfiguration)?
    PercentageDisplayFormatConfiguration: (TemplatePercentageDisplayFormatConfiguration)?
    NumberDisplayFormatConfiguration: (TemplateNumberDisplayFormatConfiguration)?
}

/// 
open class TemplateFilterControl {
    Dropdown: (TemplateFilterDropDownControl)?
    TextField: (TemplateFilterTextFieldControl)?
    TextArea: (TemplateFilterTextAreaControl)?
    Slider: (TemplateFilterSliderControl)?
    RelativeDateTime: (TemplateFilterRelativeDateTimeControl)?
    DateTimePicker: (TemplateFilterDateTimePickerControl)?
    List: (TemplateFilterListControl)?
}

/// 
open class TemplateNumericAxisOptions {
    Scale: (TemplateAxisScale)?
    Range: (TemplateAxisDisplayRange)?
}

/// 
open class TemplateCalculatedMeasureField {
    Expression: String|Mapping
    FieldId: String|Mapping
}

/// 
open class TemplateFilledMapShapeConditionalFormatting {
    Format: (TemplateShapeConditionalFormat)?
    FieldId: String|Mapping
}

/// 
open class TemplateSankeyDiagramSortConfiguration {
    WeightSort: (Listing<TemplateFieldSortOptions>)?
    SourceItemsLimit: (TemplateItemsLimitConfiguration)?
    DestinationItemsLimit: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplateTableFieldURLConfiguration {
    LinkConfiguration: (TemplateTableFieldLinkConfiguration)?
    ImageConfiguration: (TemplateTableFieldImageConfiguration)?
}

/// 
open class TemplateFieldSortOptions {
    FieldSort: (TemplateFieldSort)?
    ColumnSort: (TemplateColumnSort)?
}

/// 
open class TemplateSectionStyle {
    Height: (String|Mapping)?
    Padding: (TemplateSpacing)?
}

/// 
open class TemplateTableFieldOption {
    Width: (String|Mapping)?
    CustomLabel: (String|Mapping)?
    Visibility: (TemplateVisibility)?
    URLStyling: (TemplateTableFieldURLConfiguration)?
    FieldId: String|Mapping
}

typealias TemplatePanelBorderStyle = String|Mapping


/// 
open class TemplateLegendOptions {
    Title: (TemplateLabelOptions)?
    Position: (TemplateLegendPosition)?
    Width: (String|Mapping)?
    Height: (String|Mapping)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateCustomFilterConfiguration {
    MatchOperator: TemplateCategoryFilterMatchOperator
    CategoryValue: (String|Mapping)?
    SelectAllOptions: (TemplateCategoryFilterSelectAllOptions)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: TemplateFilterNullOption
}

typealias TemplateWordCloudCloudLayout = String|Mapping


/// 
open class TemplateBarChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateBarChartConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
}

/// 
open class TemplateFilterTextAreaControl {
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Delimiter: (String|Mapping)?
    DisplayOptions: (TemplateTextAreaControlDisplayOptions)?
}

/// 
open class TemplatePeriodOverPeriodComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (TemplateDimensionField)?
    Value: (TemplateMeasureField)?
}

typealias TemplatePivotTableMetricPlacement = String|Mapping


/// 
open class TemplateScatterPlotCategoricallyAggregatedFieldWells {
    XAxis: (Listing<TemplateMeasureField>)?
    YAxis: (Listing<TemplateMeasureField>)?
    Category: (Listing<TemplateDimensionField>)?
    Size: (Listing<TemplateMeasureField>)?
    Label: (Listing<TemplateDimensionField>)?
}

/// 
open class TemplateFieldTooltipItem {
    FieldId: String|Mapping
    Label: (String|Mapping)?
    Visibility: (TemplateVisibility)?
}

typealias TemplateMissingDataTreatmentOption = String|Mapping


/// 
open class TemplateReferenceLineDynamicDataConfiguration {
    Calculation: TemplateNumericalAggregationFunction
    Column: TemplateColumnIdentifier
    MeasureAggregationFunction: (TemplateAggregationFunction)?
}

/// 
open class TemplateUnaggregatedField {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    FormatConfiguration: (TemplateFormatConfiguration)?
}

/// 
open class TemplateFreeFormLayoutElementBorderStyle {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateGaugeChartVisual {
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateGaugeChartConfiguration)?
    ConditionalFormatting: (TemplateGaugeChartConditionalFormatting)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
}

/// 
open class TemplateInsightConfiguration {
    CustomNarrative: (TemplateCustomNarrativeOptions)?
    Computations: (Listing<TemplateComputation>)?
}

/// 
open class TemplatePieChartSortConfiguration {
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    CategoryItemsLimit: (TemplateItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<TemplateFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplateDataPathColor {
    Element: TemplateDataPathValue
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
    TimeGranularity: (TemplateTimeGranularity)?
}

/// 
open class TemplateKPIFieldWells {
    Values: (Listing<TemplateMeasureField>)?
    TargetValues: (Listing<TemplateMeasureField>)?
    TrendGroups: (Listing<TemplateDimensionField>)?
}

/// 
open class TemplateDataLabelType {
    DataPathLabelType: (TemplateDataPathLabelType)?
    RangeEndsLabelType: (TemplateRangeEndsLabelType)?
    MinimumLabelType: (TemplateMinimumLabelType)?
    MaximumLabelType: (TemplateMaximumLabelType)?
    FieldLabelType: (TemplateFieldLabelType)?
}

/// 
open class TemplateTreeMapSortConfiguration {
    TreeMapGroupItemsLimitConfiguration: (TemplateItemsLimitConfiguration)?
    TreeMapSort: (Listing<TemplateFieldSortOptions>)?
}

/// 
open class TemplateShortFormatText {
    PlainText: (String|Mapping)?
    RichText: (String|Mapping)?
}

/// 
open class TemplateTotalAggregationComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Value: (TemplateMeasureField)?
}

/// 
open class TemplateRangeEndsLabelType {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateTableAggregatedFieldWells {
    GroupBy: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
}

/// 
open class TemplateForecastConfiguration {
    ForecastProperties: (TemplateTimeBasedForecastProperties)?
    Scenario: (TemplateForecastScenario)?
}

/// 
open class TemplateAxisScale {
    Linear: (TemplateAxisLinearScale)?
    Logarithmic: (TemplateAxisLogarithmicScale)?
}

/// 
open class TemplateCustomActionNavigationOperation {
    LocalNavigationConfiguration: (TemplateLocalNavigationConfiguration)?
}

/// 
open class TemplateFilterListConfiguration {
    CategoryValues: (Listing<String|Mapping>)?
    SelectAllOptions: (TemplateCategoryFilterSelectAllOptions)?
    NullOption: (TemplateFilterNullOption)?
    MatchOperator: TemplateCategoryFilterMatchOperator
}

/// 
open class TemplateGeospatialMapVisual {
    ColumnHierarchies: (Listing<TemplateColumnHierarchy>)?
    Actions: (Listing<TemplateVisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateGeospatialMapConfiguration)?
}

/// 
open class TemplateLineChartFieldWells {
    LineChartAggregatedFieldWells: (TemplateLineChartAggregatedFieldWells)?
}

/// 
open class TemplateWordCloudSortConfiguration {
    CategoryItemsLimit: (TemplateItemsLimitConfiguration)?
    CategorySort: (Listing<TemplateFieldSortOptions>)?
}

/// 
open class TemplateBoxPlotChartConfiguration {
    SortConfiguration: (TemplateBoxPlotSortConfiguration)?
    BoxPlotOptions: (TemplateBoxPlotOptions)?
    CategoryLabelOptions: (TemplateChartAxisLabelOptions)?
    PrimaryYAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    Legend: (TemplateLegendOptions)?
    ReferenceLines: (Listing<TemplateReferenceLine>)?
    FieldWells: (TemplateBoxPlotFieldWells)?
    CategoryAxis: (TemplateAxisDisplayOptions)?
    PrimaryYAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    Tooltip: (TemplateTooltipOptions)?
    VisualPalette: (TemplateVisualPalette)?
}

typealias TemplatePrimaryValueDisplayType = String|Mapping


/// 
open class TemplateTreeMapConfiguration {
    SortConfiguration: (TemplateTreeMapSortConfiguration)?
    GroupLabelOptions: (TemplateChartAxisLabelOptions)?
    Legend: (TemplateLegendOptions)?
    Tooltip: (TemplateTooltipOptions)?
    FieldWells: (TemplateTreeMapFieldWells)?
    SizeLabelOptions: (TemplateChartAxisLabelOptions)?
    ColorLabelOptions: (TemplateChartAxisLabelOptions)?
    ColorScale: (TemplateColorScale)?
    DataLabels: (TemplateDataLabelOptions)?
}

/// 
open class TemplateCustomContentConfiguration {
    ContentUrl: (String|Mapping)?
    ContentType: (TemplateCustomContentType)?
    ImageScaling: (TemplateCustomContentImageScalingConfiguration)?
}

/// 
open class TemplateDateAxisOptions {
    MissingDateVisibility: (TemplateVisibility)?
}

/// 
open class TemplateReferenceLineStyleConfiguration {
    Pattern: (TemplateReferenceLinePatternType)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class TemplateDateTimePickerControlDisplayOptions {
    TitleOptions: (TemplateLabelOptions)?
    DateTimeFormat: (String|Mapping)?
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
}

/// 
open class TemplatePivotTableFieldWells {
    PivotTableAggregatedFieldWells: (TemplatePivotTableAggregatedFieldWells)?
}

typealias TemplateOtherCategories = String|Mapping


typealias TemplateRadarChartShape = String|Mapping


/// 
open class TemplateFieldBasedTooltip {
    AggregationVisibility: (TemplateVisibility)?
    TooltipTitleType: (TemplateTooltipTitleType)?
    TooltipFields: (Listing<TemplateTooltipItem>)?
}

/// 
open class TemplateRadarChartSeriesSettings {
    AreaStyleSettings: (TemplateRadarChartAreaStyleSettings)?
}

typealias TemplateResizeOption = String|Mapping


typealias TemplateDataLabelPosition = String|Mapping


/// 
open class TemplateLayout {
    Configuration: TemplateLayoutConfiguration
}

/// 
open class TemplateConditionalFormattingIconSet {
    Expression: String|Mapping
    IconSetType: (TemplateConditionalFormattingIconSetType)?
}

typealias TemplateLegendPosition = String|Mapping


/// 
open class TemplateColumnGroupColumnSchema {
    Name: (String|Mapping)?
}

/// 
open class TemplateKPIVisualStandardLayout {
    Type: TemplateKPIVisualStandardLayoutType
}

/// 
open class TemplateWhatIfRangeScenario {
    StartDate: String|Mapping
    EndDate: String|Mapping
    Value: Number|Mapping
}

/// 
open class TemplateNumericRangeFilterValue {
    StaticValue: (Number|Mapping)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class TemplateStringFormatConfiguration {
    NumericFormatConfiguration: (TemplateNumericFormatConfiguration)?
    NullValueFormatConfiguration: (TemplateNullValueFormatConfiguration)?
}

typealias TemplateTopBottomComputationType = String|Mapping


typealias TemplateLayoutElementType = String|Mapping


/// 
open class TemplateBoxPlotOptions {
    StyleOptions: (TemplateBoxPlotStyleOptions)?
    OutlierVisibility: (TemplateVisibility)?
    AllDataPointsVisibility: (TemplateVisibility)?
}

/// 
open class TemplateTableFieldWells {
    TableAggregatedFieldWells: (TemplateTableAggregatedFieldWells)?
    TableUnaggregatedFieldWells: (TemplateTableUnaggregatedFieldWells)?
}

/// 
open class TemplateGeospatialHeatmapConfiguration {
    HeatmapColor: (TemplateGeospatialHeatmapColorScale)?
}

/// 
open class TemplateFilter {
    TopBottomFilter: (TemplateTopBottomFilter)?
    CategoryFilter: (TemplateCategoryFilter)?
    NumericRangeFilter: (TemplateNumericRangeFilter)?
    NumericEqualityFilter: (TemplateNumericEqualityFilter)?
    TimeEqualityFilter: (TemplateTimeEqualityFilter)?
    TimeRangeFilter: (TemplateTimeRangeFilter)?
    RelativeDatesFilter: (TemplateRelativeDatesFilter)?
}

/// 
open class TemplateSheetControlLayoutConfiguration {
    GridLayout: (TemplateGridLayoutConfiguration)?
}

typealias TemplatePivotTableRowsLayout = String|Mapping


/// 
open class TemplatePivotTableVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplatePivotTableConfiguration)?
    ConditionalFormatting: (TemplatePivotTableConditionalFormatting)?
    Actions: (Listing<TemplateVisualCustomAction>)?
}

/// 
open class TemplateAxisLinearScale {
    StepCount: (Number|Mapping)?
    StepSize: (Number|Mapping)?
}

/// 
open class TemplateSmallMultiplesAxisProperties {
    Scale: (TemplateSmallMultiplesAxisScale)?
    Placement: (TemplateSmallMultiplesAxisPlacement)?
}

/// 
open class TemplateSheetVisualScopingConfiguration {
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Scope: TemplateFilterVisualScope
    VisualIds: (Listing<String|Mapping>)?
}

typealias TemplateSelectedFieldOptions = String|Mapping


/// 
open class TemplateDataFieldSeriesItem {
    FieldValue: (String|Mapping)?
    AxisBinding: TemplateAxisBinding
    Settings: (TemplateLineChartSeriesSettings)?
    FieldId: String|Mapping
}

/// 
open class TemplateGlobalTableBorderOptions {
    UniformBorder: (TemplateTableBorderOptions)?
    SideSpecificBorder: (TemplateTableSideBorderOptions)?
}

/// 
open class TemplatePredefinedHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<TemplateColumnIdentifier>
    DrillDownFilters: (Listing<TemplateDrillDownFilter>)?
}

typealias TemplateGeospatialSelectedPointStyle = String|Mapping


typealias TemplateBarChartOrientation = String|Mapping


/// 
open class TemplateTableFieldLinkContentConfiguration {
    CustomTextContent: (TemplateTableFieldCustomTextContent)?
    CustomIconContent: (TemplateTableFieldCustomIconContent)?
}

typealias TemplateURLTargetConfiguration = String|Mapping


/// 
open class TemplateItemsLimitConfiguration {
    ItemsLimit: (Number|Mapping)?
    OtherCategories: (TemplateOtherCategories)?
}

/// 
open class TemplatePivotTableAggregatedFieldWells {
    Values: (Listing<TemplateMeasureField>)?
    Rows: (Listing<TemplateDimensionField>)?
    Columns: (Listing<TemplateDimensionField>)?
}

/// 
open class TemplateTableCellStyle {
    Border: (TemplateGlobalTableBorderOptions)?
    Visibility: (TemplateVisibility)?
    FontConfiguration: (TemplateFontConfiguration)?
    TextWrap: (TemplateTextWrap)?
    HorizontalTextAlignment: (TemplateHorizontalTextAlignment)?
    VerticalTextAlignment: (TemplateVerticalTextAlignment)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Height: (Number|Mapping)?
}

/// 
open class TemplateNumericalDimensionField {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (TemplateNumberFormatConfiguration)?
}

typealias TemplateSheetControlSliderType = String|Mapping


/// 
open class TemplateAxisDisplayOptions {
    DataOptions: (TemplateAxisDataOptions)?
    ScrollbarOptions: (TemplateScrollBarOptions)?
    AxisOffset: (String|Mapping)?
    TickLabelOptions: (TemplateAxisTickLabelOptions)?
    AxisLineVisibility: (TemplateVisibility)?
    GridLineVisibility: (TemplateVisibility)?
}

/// 
open class TemplateFilterScopeConfiguration {
    SelectedSheets: (TemplateSelectedSheetsFilterScopeConfiguration)?
    AllSheets: (TemplateAllSheetsFilterScopeConfiguration)?
}

/// 
open class TemplateFunnelChartFieldWells {
    FunnelChartAggregatedFieldWells: (TemplateFunnelChartAggregatedFieldWells)?
}

typealias TemplatePivotTableSubtotalLevel = String|Mapping


/// 
open class TemplateTemplateSourceTemplate {
    Arn: String|Mapping
}

/// 
open class TemplateFilledMapSortConfiguration {
    CategorySort: (Listing<TemplateFieldSortOptions>)?
}

/// 
open class TemplateBoxPlotStyleOptions {
    FillStyle: (TemplateBoxPlotFillStyle)?
}

/// 
open class TemplateSeriesItem {
    FieldSeriesItem: (TemplateFieldSeriesItem)?
    DataFieldSeriesItem: (TemplateDataFieldSeriesItem)?
}

/// 
open class TemplateVisual {
    TableVisual: (TemplateTableVisual)?
    PieChartVisual: (TemplatePieChartVisual)?
    LineChartVisual: (TemplateLineChartVisual)?
    FunnelChartVisual: (TemplateFunnelChartVisual)?
    BoxPlotVisual: (TemplateBoxPlotVisual)?
    ScatterPlotVisual: (TemplateScatterPlotVisual)?
    WaterfallVisual: (TemplateWaterfallVisual)?
    EmptyVisual: (TemplateEmptyVisual)?
    PivotTableVisual: (TemplatePivotTableVisual)?
    HeatMapVisual: (TemplateHeatMapVisual)?
    TreeMapVisual: (TemplateTreeMapVisual)?
    GeospatialMapVisual: (TemplateGeospatialMapVisual)?
    FilledMapVisual: (TemplateFilledMapVisual)?
    RadarChartVisual: (TemplateRadarChartVisual)?
    SankeyDiagramVisual: (TemplateSankeyDiagramVisual)?
    CustomContentVisual: (TemplateCustomContentVisual)?
    BarChartVisual: (TemplateBarChartVisual)?
    KPIVisual: (TemplateKPIVisual)?
    ComboChartVisual: (TemplateComboChartVisual)?
    HistogramVisual: (TemplateHistogramVisual)?
    WordCloudVisual: (TemplateWordCloudVisual)?
    GaugeChartVisual: (TemplateGaugeChartVisual)?
    InsightVisual: (TemplateInsightVisual)?
}

/// 
open class TemplateColumnHierarchy {
    ExplicitHierarchy: (TemplateExplicitHierarchy)?
    DateTimeHierarchy: (TemplateDateTimeHierarchy)?
    PredefinedHierarchy: (TemplatePredefinedHierarchy)?
}

/// 
open class TemplateFilledMapConditionalFormatting {
    ConditionalFormattingOptions: Listing<TemplateFilledMapConditionalFormattingOption>
}

/// 
open class TemplateCascadingControlConfiguration {
    SourceControls: (Listing<TemplateCascadingControlSource>)?
}

typealias TemplateCategoryFilterMatchOperator = String|Mapping


typealias TemplateColorFillType = String|Mapping


/// 
open class TemplateTotalAggregationFunction {
    SimpleTotalAggregationFunction: (TemplateSimpleTotalAggregationFunction)?
}

typealias TemplateNumericFilterSelectAllOptions = String|Mapping


typealias TemplateRelativeFontSize = String|Mapping


/// 
open class TemplateFieldSeriesItem {
    FieldId: String|Mapping
    AxisBinding: TemplateAxisBinding
    Settings: (TemplateLineChartSeriesSettings)?
}

typealias TemplateTableCellImageScalingConfiguration = String|Mapping


/// 
open class TemplateSheetElementConfigurationOverrides {
    Visibility: (TemplateVisibility)?
}

/// 
open class TemplateWaterfallChartConfiguration {
    WaterfallChartOptions: (TemplateWaterfallChartOptions)?
    PrimaryYAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    Legend: (TemplateLegendOptions)?
    FieldWells: (TemplateWaterfallChartFieldWells)?
    SortConfiguration: (TemplateWaterfallChartSortConfiguration)?
    CategoryAxisLabelOptions: (TemplateChartAxisLabelOptions)?
    CategoryAxisDisplayOptions: (TemplateAxisDisplayOptions)?
    DataLabels: (TemplateDataLabelOptions)?
    VisualPalette: (TemplateVisualPalette)?
}

/// 
open class TemplateFilterGroup {
    FilterGroupId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Filters: Listing<TemplateFilter>
    ScopeConfiguration: TemplateFilterScopeConfiguration
    Status: (TemplateWidgetStatus)?
    CrossDataset: TemplateCrossDatasetTypes
}

typealias TemplateTextWrap = String|Mapping


/// 
open class TemplateLineChartAggregatedFieldWells {
    Category: (Listing<TemplateDimensionField>)?
    Values: (Listing<TemplateMeasureField>)?
    Colors: (Listing<TemplateDimensionField>)?
    SmallMultiples: (Listing<TemplateDimensionField>)?
}

/// 
open class TemplateAxisTickLabelOptions {
    LabelOptions: (TemplateLabelOptions)?
    RotationAngle: (Number|Mapping)?
}

/// 
open class TemplateFreeFormLayoutConfiguration {
    Elements: Listing<TemplateFreeFormLayoutElement>
    CanvasSizeOptions: (TemplateFreeFormLayoutCanvasSizeOptions)?
}

/// 
open class TemplateGaugeChartConditionalFormattingOption {
    PrimaryValue: (TemplateGaugeChartPrimaryValueConditionalFormatting)?
    Arc: (TemplateGaugeChartArcConditionalFormatting)?
}

/// 
open class TemplateForecastComputation {
    Time: (TemplateDimensionField)?
    Value: (TemplateMeasureField)?
    PeriodsBackward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Seasonality: (TemplateForecastComputationSeasonality)?
    CustomSeasonalityValue: (Number|Mapping)?
    PeriodsForward: (Number|Mapping)?
    PredictionInterval: (Number|Mapping)?
}

typealias TemplatePivotTableDataPathType = String|Mapping


/// 
open class TemplateLineChartSortConfiguration {
    CategorySort: (Listing<TemplateFieldSortOptions>)?
    CategoryItemsLimitConfiguration: (TemplateItemsLimitConfiguration)?
    ColorItemsLimitConfiguration: (TemplateItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<TemplateFieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (TemplateItemsLimitConfiguration)?
}

/// 
open class TemplatePercentageDisplayFormatConfiguration {
    SeparatorConfiguration: (TemplateNumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (TemplateDecimalPlacesConfiguration)?
    NegativeValueConfiguration: (TemplateNegativeValueConfiguration)?
    NullValueFormatConfiguration: (TemplateNullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
}

/// 
open class TemplateCustomContentVisual {
    DataSetIdentifier: String|Mapping
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (TemplateVisualTitleLabelOptions)?
    Subtitle: (TemplateVisualSubtitleLabelOptions)?
    ChartConfiguration: (TemplateCustomContentConfiguration)?
    Actions: (Listing<TemplateVisualCustomAction>)?
}

typealias TemplateConditionalFormattingIconSetType = String|Mapping


typealias TemplateColumnRole = String|Mapping


/// 
open class TemplateSecondaryValueOptions {
    Visibility: (TemplateVisibility)?
}

typealias TemplateFilterNullOption = String|Mapping


/// 
open class TemplateSectionLayoutConfiguration {
    FreeFormLayout: TemplateFreeFormSectionLayoutConfiguration
}

/// 
open class TemplateValidationStrategy {
    Mode: TemplateValidationStrategyMode
}

/// 
open class TemplateCategoricalMeasureField {
    FieldId: String|Mapping
    Column: TemplateColumnIdentifier
    AggregationFunction: (TemplateCategoricalAggregationFunction)?
    FormatConfiguration: (TemplateStringFormatConfiguration)?
}

typealias TemplateHorizontalTextAlignment = String|Mapping


/// 
open class TemplateFieldSort {
    FieldId: String|Mapping
    Direction: TemplateSortDirection
}

/// 
open class TemplateTextFieldControlDisplayOptions {
    TitleOptions: (TemplateLabelOptions)?
    PlaceholderOptions: (TemplateTextControlPlaceholderOptions)?
    InfoIconLabelOptions: (TemplateSheetControlInfoIconLabelOptions)?
}

/// 
open class TemplateCustomActionSetParametersOperation {
    ParameterValueConfigurations: Listing<TemplateSetParameterValueConfiguration>
}

/// 
open class TemplateUniqueValuesComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Category: (TemplateDimensionField)?
}

/// 
open class TemplateVisualCustomActionOperation {
    FilterOperation: (TemplateCustomActionFilterOperation)?
    NavigationOperation: (TemplateCustomActionNavigationOperation)?
    URLOperation: (TemplateCustomActionURLOperation)?
    SetParametersOperation: (TemplateCustomActionSetParametersOperation)?
}

/// 
open class TemplateFreeFormLayoutScreenCanvasSizeOptions {
    OptimizedViewPortWidth: String|Mapping
}

/// 
open class TemplateFreeFormLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (TemplateFreeFormLayoutScreenCanvasSizeOptions)?
}

/// 
open class TemplatePercentileAggregation {
    PercentileValue: (Number|Mapping)?
}

typealias TemplateCustomContentImageScalingConfiguration = String|Mapping


typealias TemplateWordCloudWordCasing = String|Mapping


typealias TemplateKPISparklineType = String|Mapping


/// 
open class TemplateMissingDataConfiguration {
    TreatmentOption: (TemplateMissingDataTreatmentOption)?
}

/// 
open class TemplatePivotTableOptions {
    ToggleButtonsVisibility: (TemplateVisibility)?
    ColumnHeaderStyle: (TemplateTableCellStyle)?
    RowAlternateColorOptions: (TemplateRowAlternateColorOptions)?
    RowsLabelOptions: (TemplatePivotTableRowsLabelOptions)?
    MetricPlacement: (TemplatePivotTableMetricPlacement)?
    SingleMetricVisibility: (TemplateVisibility)?
    RowHeaderStyle: (TemplateTableCellStyle)?
    ColumnNamesVisibility: (TemplateVisibility)?
    CellStyle: (TemplateTableCellStyle)?
    RowFieldNamesStyle: (TemplateTableCellStyle)?
    CollapsedRowDimensionsVisibility: (TemplateVisibility)?
    RowsLayout: (TemplatePivotTableRowsLayout)?
    DefaultCellWidth: (String|Mapping)?
}

/// 
open class TemplateLineChartDefaultSeriesSettings {
    AxisBinding: (TemplateAxisBinding)?
    LineStyleSettings: (TemplateLineChartLineStyleSettings)?
    MarkerStyleSettings: (TemplateLineChartMarkerStyleSettings)?
}

/// Definition of the AWS::QuickSight::Template Resource Type.
open class Template extends cloudformation.Resource {

    Type = "AWS::QuickSight::Template"


    /// 
    hidden SourceEntity: (TemplateTemplateSourceEntity)?

    /// 
    hidden ValidationStrategy: (TemplateValidationStrategy)?

    /// 
    hidden Definition: (TemplateTemplateVersionDefinition)?

    /// 
    hidden Tags: (Listing<TemplateTag>)?

    /// 
    hidden Name: (String|Mapping)?

    /// 
    hidden Permissions: (Listing<TemplateResourcePermission>)?

    /// 
    hidden AwsAccountId: String(matches(Regex(#"^[0-9]{12}$"#)))|Mapping

    /// 
    hidden TemplateId: String(matches(Regex(#"[\w\-]+"#)))|Mapping

    /// 
    hidden VersionDescription: (String|Mapping)?

    Properties {
        ["SourceEntity"] = if (SourceEntity == null) null else SourceEntity
        ["ValidationStrategy"] = if (ValidationStrategy == null) null else ValidationStrategy
        ["Definition"] = if (Definition == null) null else Definition
        ["Tags"] = if (Tags == null) null else Tags
        ["Name"] = if (Name == null) null else Name
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["AwsAccountId"] = if (AwsAccountId == null) null else AwsAccountId
        ["TemplateId"] = if (TemplateId == null) null else TemplateId
        ["VersionDescription"] = if (VersionDescription == null) null else VersionDescription
    }

}
