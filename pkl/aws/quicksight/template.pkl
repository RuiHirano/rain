/// AWS::QuickSight::Template
///
/// Generated by rain build --pkl-class AWS::QuickSight::Template
module aws.quicksight.template

import "../../cloudformation.pkl"

/// 
open class ArcAxisConfiguration {
    Range: (ArcAxisDisplayRange)?
    ReserveRange: (Number|Mapping)?
}

/// 
open class AssetOptions {
    Timezone: (String|Mapping)?
    WeekStart: (DayOfTheWeek)?
}

/// 
open class HistogramVisual {
    ChartConfiguration: (HistogramConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
}

/// 
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// 
open class TreeMapSortConfiguration {
    TreeMapSort: (Listing<FieldSortOptions>)?
    TreeMapGroupItemsLimitConfiguration: (ItemsLimitConfiguration)?
}

/// 
open class ConditionalFormattingColor {
    Solid: (ConditionalFormattingSolidColor)?
    Gradient: (ConditionalFormattingGradientColor)?
}

/// 
open class HeatMapFieldWells {
    HeatMapAggregatedFieldWells: (HeatMapAggregatedFieldWells)?
}

/// 
open class IntegerDefaultValues {
    DynamicValue: (DynamicDefaultValue)?
    StaticValues: (Listing<Number|Mapping>)?
}

/// 
open class ListControlDisplayOptions {
    TitleOptions: (LabelOptions)?
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
    SearchOptions: (ListControlSearchOptions)?
    SelectAllOptions: (ListControlSelectAllOptions)?
}

/// 
open class ScatterPlotConfiguration {
    XAxisDisplayOptions: (AxisDisplayOptions)?
    YAxisLabelOptions: (ChartAxisLabelOptions)?
    Legend: (LegendOptions)?
    Tooltip: (TooltipOptions)?
    FieldWells: (ScatterPlotFieldWells)?
    XAxisLabelOptions: (ChartAxisLabelOptions)?
    YAxisDisplayOptions: (AxisDisplayOptions)?
    DataLabels: (DataLabelOptions)?
    VisualPalette: (VisualPalette)?
}

/// 
open class VisualCustomAction {
    Status: (WidgetStatus)?
    Trigger: VisualCustomActionTrigger
    ActionOperations: Listing<VisualCustomActionOperation>
    CustomActionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: String|Mapping
}

/// 
open class ComboChartFieldWells {
    ComboChartAggregatedFieldWells: (ComboChartAggregatedFieldWells)?
}

/// 
open class DrillDownFilter {
    NumericEqualityFilter: (NumericEqualityDrillDownFilter)?
    CategoryFilter: (CategoryDrillDownFilter)?
    TimeRangeFilter: (TimeRangeDrillDownFilter)?
}

/// 
open class FilterListConfiguration {
    SelectAllOptions: (CategoryFilterSelectAllOptions)?
    NullOption: (FilterNullOption)?
    MatchOperator: CategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
}

/// 
open class NumericalMeasureField {
    Column: ColumnIdentifier
    AggregationFunction: (NumericalAggregationFunction)?
    FormatConfiguration: (NumberFormatConfiguration)?
    FieldId: String|Mapping
}

/// 
open class RelativeDateType {
}

/// 
open class CalculatedMeasureField {
    FieldId: String|Mapping
    Expression: String|Mapping
}

/// 
open class FieldSort {
    Direction: SortDirection
    FieldId: String|Mapping
}

/// 
open class StringDefaultValues {
    DynamicValue: (DynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
}

/// 
open class VisualTitleLabelOptions {
    Visibility: (Visibility)?
    FormatText: (ShortFormatText)?
}

/// 
open class ColumnRole {
}

/// 
open class HistogramBinOptions {
    SelectedBinType: (HistogramBinType)?
    BinCount: (BinCountOptions)?
    BinWidth: (BinWidthOptions)?
    StartValue: (Number|Mapping)?
}

/// 
open class PivotTableFieldWells {
    PivotTableAggregatedFieldWells: (PivotTableAggregatedFieldWells)?
}

/// 
open class ScatterPlotUnaggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    Label: (Listing<DimensionField>)?
    XAxis: (Listing<DimensionField>)?
    YAxis: (Listing<DimensionField>)?
    Size: (Listing<MeasureField>)?
}

/// 
open class TableStyleTarget {
    CellType: StyledCellType
}

/// 
open class ComparisonFormatConfiguration {
    NumberDisplayFormatConfiguration: (NumberDisplayFormatConfiguration)?
    PercentageDisplayFormatConfiguration: (PercentageDisplayFormatConfiguration)?
}

/// 
open class PivotTableConditionalFormattingScope {
    Role: (PivotTableConditionalFormattingScopeRole)?
}

/// 
open class ValidationStrategy {
    Mode: ValidationStrategyMode
}

/// 
open class DateTimeValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (ValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

/// 
open class FreeFormLayoutConfiguration {
    Elements: Listing<FreeFormLayoutElement>
    CanvasSizeOptions: (FreeFormLayoutCanvasSizeOptions)?
}

/// 
open class GeospatialPointStyleOptions {
    SelectedPointStyle: (GeospatialSelectedPointStyle)?
    ClusterMarkerConfiguration: (ClusterMarkerConfiguration)?
    HeatmapConfiguration: (GeospatialHeatmapConfiguration)?
}

/// 
open class GeospatialWindowOptions {
    Bounds: (GeospatialCoordinateBounds)?
    MapZoomMode: (MapZoomMode)?
}

/// 
open class KPIProgressBarConditionalFormatting {
    ForegroundColor: (ConditionalFormattingColor)?
}

/// 
open class StyledCellType {
}

/// 
open class AxisBinding {
}

/// 
open class DataSetSchema {
    ColumnSchemaList: (Listing<ColumnSchema>)?
}

/// 
open class FilterRelativeDateTimeControl {
    DisplayOptions: (RelativeDateTimeControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class HeatMapAggregatedFieldWells {
    Rows: (Listing<DimensionField>)?
    Columns: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class PivotTableDataPathType {
}

/// 
open class DataPathLabelType {
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
    Visibility: (Visibility)?
}

/// 
open class EmptyVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DataSetIdentifier: String|Mapping
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class FontConfiguration {
    FontWeight: (FontWeight)?
    FontStyle: (FontStyle)?
    FontSize: (FontSize)?
    FontDecoration: (FontDecoration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class KPIOptions {
    TrendArrows: (TrendArrowOptions)?
    SecondaryValue: (SecondaryValueOptions)?
    PrimaryValueFontConfiguration: (FontConfiguration)?
    VisualLayoutOptions: (KPIVisualLayoutOptions)?
    ProgressBar: (ProgressBarOptions)?
    PrimaryValueDisplayType: (PrimaryValueDisplayType)?
    SecondaryValueFontConfiguration: (FontConfiguration)?
    Sparkline: (KPISparklineOptions)?
    Comparison: (ComparisonConfiguration)?
}

/// 
open class SimpleNumericalAggregationFunction {
}

/// 
open class TooltipOptions {
    FieldBasedTooltip: (FieldBasedTooltip)?
    TooltipVisibility: (Visibility)?
    SelectedTooltipType: (SelectedTooltipType)?
}

/// 
open class ArcConfiguration {
    ArcAngle: (Number|Mapping)?
    ArcThickness: (ArcThicknessOptions)?
}

/// 
open class DateTimeDefaultValues {
    DynamicValue: (DynamicDefaultValue)?
    StaticValues: (Listing<String|Mapping>)?
    RollingDate: (RollingDateConfiguration)?
}

/// 
open class DimensionField {
    NumericalDimensionField: (NumericalDimensionField)?
    CategoricalDimensionField: (CategoricalDimensionField)?
    DateDimensionField: (DateDimensionField)?
}

/// 
open class BoxPlotVisual {
    ChartConfiguration: (BoxPlotChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
}

/// 
open class DateTimeParameterDeclaration {
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (DateTimeDefaultValues)?
    TimeGranularity: (TimeGranularity)?
    ValueWhenUnset: (DateTimeValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<MappedDataSetParameter>)?
}

/// 
open class FunnelChartSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
    CategoryItemsLimit: (ItemsLimitConfiguration)?
}

/// 
open class Icon {
}

/// 
open class ParameterListControl {
    DisplayOptions: (ListControlDisplayOptions)?
    Type: (SheetControlListType)?
    SelectableValues: (ParameterSelectableValues)?
    CascadingControlConfiguration: (CascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class PieChartConfiguration {
    ContributionAnalysisDefaults: (Listing<ContributionAnalysisDefault>)?
    DonutOptions: (DonutOptions)?
    SmallMultiplesOptions: (SmallMultiplesOptions)?
    Legend: (LegendOptions)?
    ValueLabelOptions: (ChartAxisLabelOptions)?
    DataLabels: (DataLabelOptions)?
    Tooltip: (TooltipOptions)?
    VisualPalette: (VisualPalette)?
    FieldWells: (PieChartFieldWells)?
    SortConfiguration: (PieChartSortConfiguration)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
}

/// 
open class PieChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (PieChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class SheetControlLayoutConfiguration {
    GridLayout: (GridLayoutConfiguration)?
}

/// 
open class ArcThicknessOptions {
}

/// 
open class CrossDatasetTypes {
}

/// 
open class DataLabelType {
    DataPathLabelType: (DataPathLabelType)?
    RangeEndsLabelType: (RangeEndsLabelType)?
    MinimumLabelType: (MinimumLabelType)?
    MaximumLabelType: (MaximumLabelType)?
    FieldLabelType: (FieldLabelType)?
}

/// 
open class FormatConfiguration {
    StringFormatConfiguration: (StringFormatConfiguration)?
    NumberFormatConfiguration: (NumberFormatConfiguration)?
    DateTimeFormatConfiguration: (DateTimeFormatConfiguration)?
}

/// 
open class RadarChartAreaStyleSettings {
    Visibility: (Visibility)?
}

/// 
open class RadarChartSeriesSettings {
    AreaStyleSettings: (RadarChartAreaStyleSettings)?
}

/// 
open class SelectAllValueOptions {
}

/// 
open class SpecialValue {
}

/// 
open class WhatIfRangeScenario {
    StartDate: String|Mapping
    EndDate: String|Mapping
    Value: Number|Mapping
}

/// 
open class FieldBasedTooltip {
    AggregationVisibility: (Visibility)?
    TooltipTitleType: (TooltipTitleType)?
    TooltipFields: (Listing<TooltipItem>)?
}

/// 
open class FilterListControl {
    DisplayOptions: (ListControlDisplayOptions)?
    Type: (SheetControlListType)?
    SelectableValues: (FilterSelectableValues)?
    CascadingControlConfiguration: (CascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class LongFormatText {
    PlainText: (String|Mapping)?
    RichText: (String|Mapping)?
}

/// 
open class PivotTableFieldOptions {
    SelectedFieldOptions: (Listing<PivotTableFieldOption>)?
    DataPathOptions: (Listing<PivotTableDataPathOption>)?
    CollapseStateOptions: (Listing<PivotTableFieldCollapseStateOption>)?
}

/// 
open class TableUnaggregatedFieldWells {
    Values: (Listing<UnaggregatedField>)?
}

/// 
open class TooltipTitleType {
}

/// 
open class HorizontalTextAlignment {
}

/// 
open class KPIConditionalFormattingOption {
    PrimaryValue: (KPIPrimaryValueConditionalFormatting)?
    ProgressBar: (KPIProgressBarConditionalFormatting)?
    ActualValue: (KPIActualValueConditionalFormatting)?
    ComparisonValue: (KPIComparisonValueConditionalFormatting)?
}

/// 
open class ParameterValueType {
}

/// 
open class RollingDateConfiguration {
    DataSetIdentifier: (String|Mapping)?
    Expression: String|Mapping
}

/// 
open class TopBottomFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: ColumnIdentifier
    Limit: (Number|Mapping)?
    AggregationSortConfigurations: Listing<AggregationSortConfiguration>
    TimeGranularity: (TimeGranularity)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class WordCloudWordPadding {
}

/// 
open class CustomParameterValues {
    StringValues: (Listing<String|Mapping>)?
    IntegerValues: (Listing<Number|Mapping>)?
    DecimalValues: (Listing<Number|Mapping>)?
    DateTimeValues: (Listing<String|Mapping>)?
}

/// 
open class GaugeChartFieldWells {
    Values: (Listing<MeasureField>)?
    TargetValues: (Listing<MeasureField>)?
}

/// 
open class GeospatialCoordinateBounds {
    North: Number|Mapping
    South: Number|Mapping
    West: Number|Mapping
    East: Number|Mapping
}

/// 
open class TableCellImageSizingConfiguration {
    TableCellImageScalingConfiguration: (TableCellImageScalingConfiguration)?
}

/// 
open class AxisLinearScale {
    StepCount: (Number|Mapping)?
    StepSize: (Number|Mapping)?
}

/// 
open class ConditionalFormattingIconSetType {
}

/// 
open class LineChartMarkerStyleSettings {
    MarkerVisibility: (Visibility)?
    MarkerShape: (LineChartMarkerShape)?
    MarkerSize: (String|Mapping)?
    MarkerColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class RowAlternateColorOptions {
    Status: (WidgetStatus)?
    RowAlternateColors: (Listing<String|Mapping>)?
    UsePrimaryBackgroundColor: (WidgetStatus)?
}

/// 
open class TableConfiguration {
    TableInlineVisualizations: (Listing<TableInlineVisualization>)?
    FieldWells: (TableFieldWells)?
    SortConfiguration: (TableSortConfiguration)?
    TableOptions: (TableOptions)?
    TotalOptions: (TotalOptions)?
    FieldOptions: (TableFieldOptions)?
    PaginatedReportOptions: (TablePaginatedReportOptions)?
}

/// 
open class TotalOptions {
    TotalsVisibility: (Visibility)?
    TotalAggregationOptions: (Listing<TotalAggregationOption>)?
    Placement: (TableTotalsPlacement)?
    ScrollStatus: (TableTotalsScrollStatus)?
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (TableCellStyle)?
}

/// 
open class ScrollBarOptions {
    Visibility: (Visibility)?
    VisibleRange: (VisibleRangeOptions)?
}

/// 
open class TextWrap {
}

/// 
open class BoxPlotFieldWells {
    BoxPlotAggregatedFieldWells: (BoxPlotAggregatedFieldWells)?
}

/// 
open class BoxPlotSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
    PaginationConfiguration: (PaginationConfiguration)?
}

/// 
open class DateAggregationFunction {
}

/// 
open class ForecastConfiguration {
    Scenario: (ForecastScenario)?
    ForecastProperties: (TimeBasedForecastProperties)?
}

/// 
open class LineChartFieldWells {
    LineChartAggregatedFieldWells: (LineChartAggregatedFieldWells)?
}

/// 
open class MaximumLabelType {
    Visibility: (Visibility)?
}

/// 
open class SectionBasedLayoutPaperCanvasSizeOptions {
    PaperMargin: (Spacing)?
    PaperSize: (PaperSize)?
    PaperOrientation: (PaperOrientation)?
}

/// 
open class CategoricalDimensionField {
    Column: ColumnIdentifier
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (StringFormatConfiguration)?
    FieldId: String|Mapping
}

/// 
open class DecimalValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (ValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

/// 
open class LayoutConfiguration {
    FreeFormLayout: (FreeFormLayoutConfiguration)?
    SectionBasedLayout: (SectionBasedLayoutConfiguration)?
    GridLayout: (GridLayoutConfiguration)?
}

/// 
open class NegativeValueDisplayMode {
}

/// 
open class RelativeDateTimeControlDisplayOptions {
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
    TitleOptions: (LabelOptions)?
    DateTimeFormat: (String|Mapping)?
}

/// 
open class TableFieldOptions {
    SelectedFieldOptions: (Listing<TableFieldOption>)?
    Order: (Listing<String|Mapping>)?
    PinnedFieldOptions: (TablePinnedFieldOptions)?
}

/// 
open class TopBottomRankedComputation {
    Value: (MeasureField)?
    ResultSize: (Number|Mapping)?
    Type: TopBottomComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Category: (DimensionField)?
}

/// 
open class ColorFillType {
}

/// 
open class KPIVisual {
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (KPIConfiguration)?
    ConditionalFormatting: (KPIConditionalFormatting)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class CustomContentConfiguration {
    ContentUrl: (String|Mapping)?
    ContentType: (CustomContentType)?
    ImageScaling: (CustomContentImageScalingConfiguration)?
}

/// 
open class FilterTextFieldControl {
    DisplayOptions: (TextFieldControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class ShapeConditionalFormat {
    BackgroundColor: ConditionalFormattingColor
}

/// 
open class AggregationSortConfiguration {
    SortDirection: SortDirection
    AggregationFunction: (AggregationFunction)?
    Column: ColumnIdentifier
}

/// 
open class BoxPlotChartConfiguration {
    SortConfiguration: (BoxPlotSortConfiguration)?
    BoxPlotOptions: (BoxPlotOptions)?
    CategoryAxis: (AxisDisplayOptions)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (AxisDisplayOptions)?
    Tooltip: (TooltipOptions)?
    ReferenceLines: (Listing<ReferenceLine>)?
    FieldWells: (BoxPlotFieldWells)?
    PrimaryYAxisLabelOptions: (ChartAxisLabelOptions)?
    Legend: (LegendOptions)?
    VisualPalette: (VisualPalette)?
}

/// 
open class DecimalParameterDeclaration {
    MappedDataSetParameters: (Listing<MappedDataSetParameter>)?
    ParameterValueType: ParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (DecimalDefaultValues)?
    ValueWhenUnset: (DecimalValueWhenUnsetConfiguration)?
}

/// 
open class GaugeChartConditionalFormatting {
    ConditionalFormattingOptions: (Listing<GaugeChartConditionalFormattingOption>)?
}

/// 
open class LineChartType {
}

/// 
open class PivotTotalOptions {
    ValueCellStyle: (TableCellStyle)?
    MetricHeaderCellStyle: (TableCellStyle)?
    TotalsVisibility: (Visibility)?
    TotalAggregationOptions: (Listing<TotalAggregationOption>)?
    Placement: (TableTotalsPlacement)?
    ScrollStatus: (TableTotalsScrollStatus)?
    CustomLabel: (String|Mapping)?
    TotalCellStyle: (TableCellStyle)?
}

/// 
open class TableFieldWells {
    TableAggregatedFieldWells: (TableAggregatedFieldWells)?
    TableUnaggregatedFieldWells: (TableUnaggregatedFieldWells)?
}

/// 
open class CustomActionSetParametersOperation {
    ParameterValueConfigurations: Listing<SetParameterValueConfiguration>
}

/// 
open class TableBorderOptions {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Thickness: (Number|Mapping)?
    Style: (TableBorderStyle)?
}

/// 
open class TotalAggregationOption {
    FieldId: String|Mapping
    TotalAggregationFunction: TotalAggregationFunction
}

/// 
open class ChartAxisLabelOptions {
    Visibility: (Visibility)?
    SortIconVisibility: (Visibility)?
    AxisLabelOptions: (Listing<AxisLabelOptions>)?
}

/// 
open class ExcludePeriodConfiguration {
    Amount: Number|Mapping
    Granularity: TimeGranularity
    Status: (WidgetStatus)?
}

/// 
open class PivotTableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<PivotTableConditionalFormattingOption>)?
}

/// 
open class SmallMultiplesAxisProperties {
    Scale: (SmallMultiplesAxisScale)?
    Placement: (SmallMultiplesAxisPlacement)?
}

/// 
open class WordCloudWordOrientation {
}

/// 
open class FilledMapSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
}

/// 
open class GridLayoutElement {
    RowIndex: (Number|Mapping)?
    RowSpan: Number|Mapping
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    ElementType: LayoutElementType
    ColumnIndex: (Number|Mapping)?
    ColumnSpan: Number|Mapping
}

/// 
open class SliderControlDisplayOptions {
    TitleOptions: (LabelOptions)?
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
}

/// 
open class ArcThickness {
}

/// 
open class KPISparklineType {
}

/// 
open class ParameterControl {
    List: (ParameterListControl)?
    Dropdown: (ParameterDropDownControl)?
    TextField: (ParameterTextFieldControl)?
    TextArea: (ParameterTextAreaControl)?
    Slider: (ParameterSliderControl)?
    DateTimePicker: (ParameterDateTimePickerControl)?
}

/// 
open class MissingDataConfiguration {
    TreatmentOption: (MissingDataTreatmentOption)?
}

/// 
open class NumericSeparatorSymbol {
}

/// 
open class TreeMapConfiguration {
    FieldWells: (TreeMapFieldWells)?
    GroupLabelOptions: (ChartAxisLabelOptions)?
    Legend: (LegendOptions)?
    DataLabels: (DataLabelOptions)?
    Tooltip: (TooltipOptions)?
    SortConfiguration: (TreeMapSortConfiguration)?
    SizeLabelOptions: (ChartAxisLabelOptions)?
    ColorLabelOptions: (ChartAxisLabelOptions)?
    ColorScale: (ColorScale)?
}

/// 
open class NumericEqualityDrillDownFilter {
    Column: ColumnIdentifier
    Value: Number|Mapping
}

/// 
open class AxisDisplayMinMaxRange {
    Minimum: (Number|Mapping)?
    Maximum: (Number|Mapping)?
}

/// 
open class ComboChartConfiguration {
    SecondaryYAxisLabelOptions: (ChartAxisLabelOptions)?
    ReferenceLines: (Listing<ReferenceLine>)?
    BarsArrangement: (BarsArrangement)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (AxisDisplayOptions)?
    PrimaryYAxisLabelOptions: (ChartAxisLabelOptions)?
    SecondaryYAxisDisplayOptions: (AxisDisplayOptions)?
    FieldWells: (ComboChartFieldWells)?
    BarDataLabels: (DataLabelOptions)?
    Tooltip: (TooltipOptions)?
    SortConfiguration: (ComboChartSortConfiguration)?
    CategoryAxis: (AxisDisplayOptions)?
    LineDataLabels: (DataLabelOptions)?
    ColorLabelOptions: (ChartAxisLabelOptions)?
    Legend: (LegendOptions)?
    VisualPalette: (VisualPalette)?
}

/// 
open class NumericSeparatorConfiguration {
    DecimalSeparator: (NumericSeparatorSymbol)?
    ThousandsSeparator: (ThousandSeparatorOptions)?
}

/// 
open class MeasureField {
    NumericalMeasureField: (NumericalMeasureField)?
    CategoricalMeasureField: (CategoricalMeasureField)?
    DateMeasureField: (DateMeasureField)?
    CalculatedMeasureField: (CalculatedMeasureField)?
}

/// 
open class TableCellImageScalingConfiguration {
}

/// 
open class TemplateErrorType {
}

/// 
open class ColorScale {
    ColorFillType: ColorFillType
    NullValueColor: (DataColor)?
    Colors: Listing<DataColor>
}

/// 
open class CustomActionNavigationOperation {
    LocalNavigationConfiguration: (LocalNavigationConfiguration)?
}

/// 
open class DestinationParameterValueConfiguration {
    CustomValuesConfiguration: (CustomValuesConfiguration)?
    SelectAllValueOptions: (SelectAllValueOptions)?
    SourceParameterName: (String|Mapping)?
    SourceField: (String|Mapping)?
    SourceColumn: (ColumnIdentifier)?
}

/// 
open class FilledMapFieldWells {
    FilledMapAggregatedFieldWells: (FilledMapAggregatedFieldWells)?
}

/// 
open class DataFieldSeriesItem {
    FieldId: String|Mapping
    FieldValue: (String|Mapping)?
    AxisBinding: AxisBinding
    Settings: (LineChartSeriesSettings)?
}

/// 
open class DecimalPlacesConfiguration {
    DecimalPlaces: Number|Mapping
}

/// 
open class ListControlSelectAllOptions {
    Visibility: (Visibility)?
}

/// 
open class NegativeValueConfiguration {
    DisplayMode: NegativeValueDisplayMode
}

/// 
open class NumericRangeFilterValue {
    StaticValue: (Number|Mapping)?
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class ClusterMarker {
    SimpleClusterMarker: (SimpleClusterMarker)?
}

/// 
open class ConditionalFormattingCustomIconCondition {
    Expression: String|Mapping
    IconOptions: ConditionalFormattingCustomIconOptions
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    DisplayConfiguration: (ConditionalFormattingIconDisplayConfiguration)?
}

/// 
open class DefaultFreeFormLayoutConfiguration {
    CanvasSizeOptions: FreeFormLayoutCanvasSizeOptions
}

/// 
open class PivotFieldSortOptions {
    FieldId: String|Mapping
    SortBy: PivotTableSortBy
}

/// 
open class ReferenceLineSeriesType {
}

/// 
open class SheetControlListType {
}

/// 
open class WordCloudVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (WordCloudChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class ConditionalFormattingIconSet {
    Expression: String|Mapping
    IconSetType: (ConditionalFormattingIconSetType)?
}

/// 
open class LineChartLineStyleSettings {
    LineWidth: (String|Mapping)?
    LineVisibility: (Visibility)?
    LineInterpolation: (LineInterpolation)?
    LineStyle: (LineChartLineStyle)?
}

/// 
open class ParameterTextAreaControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Delimiter: (String|Mapping)?
    DisplayOptions: (TextAreaControlDisplayOptions)?
}

/// 
open class ReferenceLineStyleConfiguration {
    Pattern: (ReferenceLinePatternType)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class ColumnTooltipItem {
    Column: ColumnIdentifier
    Label: (String|Mapping)?
    Visibility: (Visibility)?
    Aggregation: (AggregationFunction)?
}

/// 
open class NumericFilterSelectAllOptions {
}

/// 
open class PivotTableFieldCollapseStateOption {
    Target: PivotTableFieldCollapseStateTarget
    State: (PivotTableFieldCollapseState)?
}

/// 
open class ProgressBarOptions {
    Visibility: (Visibility)?
}

/// 
open class SankeyDiagramVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (SankeyDiagramChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class CustomFilterConfiguration {
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: FilterNullOption
    MatchOperator: CategoryFilterMatchOperator
    CategoryValue: (String|Mapping)?
    SelectAllOptions: (CategoryFilterSelectAllOptions)?
}

/// 
open class CustomFilterListConfiguration {
    MatchOperator: CategoryFilterMatchOperator
    CategoryValues: (Listing<String|Mapping>)?
    SelectAllOptions: (CategoryFilterSelectAllOptions)?
    NullOption: FilterNullOption
}

/// 
open class CustomNarrativeOptions {
    Narrative: String|Mapping
}

/// 
open class Filter {
    NumericRangeFilter: (NumericRangeFilter)?
    NumericEqualityFilter: (NumericEqualityFilter)?
    TimeEqualityFilter: (TimeEqualityFilter)?
    TimeRangeFilter: (TimeRangeFilter)?
    RelativeDatesFilter: (RelativeDatesFilter)?
    TopBottomFilter: (TopBottomFilter)?
    CategoryFilter: (CategoryFilter)?
}

/// 
open class GeospatialSelectedPointStyle {
}

/// 
open class MetricComparisonComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DimensionField)?
    FromValue: (MeasureField)?
    TargetValue: (MeasureField)?
}

/// 
open class WordCloudWordScaling {
}

/// 
open class DataLabelContent {
}

/// 
open class DateTimeFormatConfiguration {
    DateTimeFormat: (String|Mapping)?
    NullValueFormatConfiguration: (NullValueFormatConfiguration)?
    NumericFormatConfiguration: (NumericFormatConfiguration)?
}

/// 
open class FilterDropDownControl {
    Type: (SheetControlListType)?
    SelectableValues: (FilterSelectableValues)?
    CascadingControlConfiguration: (CascadingControlConfiguration)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DropDownControlDisplayOptions)?
}

/// 
open class ForecastScenario {
    WhatIfPointScenario: (WhatIfPointScenario)?
    WhatIfRangeScenario: (WhatIfRangeScenario)?
}

/// 
open class WaterfallChartAggregatedFieldWells {
    Breakdowns: (Listing<DimensionField>)?
    Categories: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class ReferenceLineLabelConfiguration {
    FontConfiguration: (FontConfiguration)?
    FontColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    HorizontalPosition: (ReferenceLineLabelHorizontalPosition)?
    VerticalPosition: (ReferenceLineLabelVerticalPosition)?
    ValueLabelConfiguration: (ReferenceLineValueLabelConfiguration)?
    CustomLabelConfiguration: (ReferenceLineCustomLabelConfiguration)?
}

/// 
open class TopBottomMoversComputation {
    MoverSize: (Number|Mapping)?
    SortOrder: (TopBottomSortOrder)?
    Type: TopBottomComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DimensionField)?
    Category: (DimensionField)?
    Value: (MeasureField)?
}

/// 
open class ComboChartAggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    BarValues: (Listing<MeasureField>)?
    Colors: (Listing<DimensionField>)?
    LineValues: (Listing<MeasureField>)?
}

/// 
open class TableOptions {
    RowAlternateColorOptions: (RowAlternateColorOptions)?
    Orientation: (TableOrientation)?
    HeaderStyle: (TableCellStyle)?
    CellStyle: (TableCellStyle)?
}

/// 
open class TotalAggregationComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Value: (MeasureField)?
}

/// 
open class FreeFormLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (FreeFormLayoutScreenCanvasSizeOptions)?
}

/// 
open class GaugeChartPrimaryValueConditionalFormatting {
    TextColor: (ConditionalFormattingColor)?
    Icon: (ConditionalFormattingIcon)?
}

/// 
open class StringValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (ValueWhenUnsetOption)?
    CustomValue: (String|Mapping)?
}

/// 
open class ColumnIdentifier {
    DataSetIdentifier: String|Mapping
    ColumnName: String|Mapping
}

/// 
open class HeaderFooterSectionConfiguration {
    Layout: SectionLayoutConfiguration
    Style: (SectionStyle)?
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class ResourcePermission {
    Actions: Listing<String|Mapping>
    Principal: String|Mapping
}

/// 
open class WordCloudSortConfiguration {
    CategoryItemsLimit: (ItemsLimitConfiguration)?
    CategorySort: (Listing<FieldSortOptions>)?
}

/// 
open class ClusterMarkerConfiguration {
    ClusterMarker: (ClusterMarker)?
}

/// 
open class DataLabelOverlap {
}

/// 
open class FontDecoration {
}

/// 
open class MaximumMinimumComputation {
    Name: (String|Mapping)?
    Time: (DimensionField)?
    Value: (MeasureField)?
    Type: MaximumMinimumComputationType
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class NumericalAggregationFunction {
    SimpleNumericalAggregation: (SimpleNumericalAggregationFunction)?
    PercentileAggregation: (PercentileAggregation)?
}

/// 
open class RadarChartFieldWells {
    RadarChartAggregatedFieldWells: (RadarChartAggregatedFieldWells)?
}

/// 
open class TableFieldCustomIconContent {
    Icon: (TableFieldIconSetType)?
}

/// 
open class AxisDataOptions {
    NumericAxisOptions: (NumericAxisOptions)?
    DateAxisOptions: (DateAxisOptions)?
}

/// 
open class FilledMapConditionalFormattingOption {
    Shape: FilledMapShapeConditionalFormatting
}

/// 
open class PercentageDisplayFormatConfiguration {
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (NumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (DecimalPlacesConfiguration)?
    NegativeValueConfiguration: (NegativeValueConfiguration)?
    NullValueFormatConfiguration: (NullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
}

/// 
open class PercentileAggregation {
    PercentileValue: (Number|Mapping)?
}

/// 
open class TablePinnedFieldOptions {
    PinnedLeftFields: (Listing<String|Mapping>)?
}

/// 
open class TableVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (TableConfiguration)?
    ConditionalFormatting: (TableConditionalFormatting)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class FieldSeriesItem {
    FieldId: String|Mapping
    AxisBinding: AxisBinding
    Settings: (LineChartSeriesSettings)?
}

/// 
open class NumericalDimensionField {
    FieldId: String|Mapping
    Column: ColumnIdentifier
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (NumberFormatConfiguration)?
}

/// 
open class PeriodToDateComputation {
    Time: (DimensionField)?
    Value: (MeasureField)?
    PeriodTimeGranularity: (TimeGranularity)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
}

/// 
open class SimpleClusterMarker {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class SheetVisualScopingConfiguration {
    VisualIds: (Listing<String|Mapping>)?
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Scope: FilterVisualScope
}

/// 
open class TableFieldURLConfiguration {
    LinkConfiguration: (TableFieldLinkConfiguration)?
    ImageConfiguration: (TableFieldImageConfiguration)?
}

/// 
open class IntegerParameterDeclaration {
    ValueWhenUnset: (IntegerValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<MappedDataSetParameter>)?
    ParameterValueType: ParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DefaultValues: (IntegerDefaultValues)?
}

/// 
open class KPISortConfiguration {
    TrendGroupSort: (Listing<FieldSortOptions>)?
}

/// 
open class LineChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (LineChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class StringFormatConfiguration {
    NumericFormatConfiguration: (NumericFormatConfiguration)?
    NullValueFormatConfiguration: (NullValueFormatConfiguration)?
}

/// 
open class TableCellStyle {
    Visibility: (Visibility)?
    FontConfiguration: (FontConfiguration)?
    TextWrap: (TextWrap)?
    HorizontalTextAlignment: (HorizontalTextAlignment)?
    VerticalTextAlignment: (VerticalTextAlignment)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    Height: (Number|Mapping)?
    Border: (GlobalTableBorderOptions)?
}

/// 
open class DefaultNewSheetConfiguration {
    InteractiveLayoutConfiguration: (DefaultInteractiveLayoutConfiguration)?
    PaginatedLayoutConfiguration: (DefaultPaginatedLayoutConfiguration)?
    SheetContentType: (SheetContentType)?
}

/// 
open class GradientColor {
    Stops: (Listing<GradientStop>)?
}

/// 
open class HistogramConfiguration {
    DataLabels: (DataLabelOptions)?
    Tooltip: (TooltipOptions)?
    VisualPalette: (VisualPalette)?
    FieldWells: (HistogramFieldWells)?
    XAxisDisplayOptions: (AxisDisplayOptions)?
    XAxisLabelOptions: (ChartAxisLabelOptions)?
    YAxisDisplayOptions: (AxisDisplayOptions)?
    BinOptions: (HistogramBinOptions)?
}

/// 
open class LocalNavigationConfiguration {
    TargetSheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class NullValueFormatConfiguration {
    NullString: String|Mapping
}

/// 
open class ReferenceLineValueLabelConfiguration {
    RelativePosition: (ReferenceLineValueLabelRelativePosition)?
    FormatConfiguration: (NumericFormatConfiguration)?
}

/// 
open class SectionStyle {
    Height: (String|Mapping)?
    Padding: (Spacing)?
}

/// 
open class CategoryFilterSelectAllOptions {
}

/// 
open class ColorsConfiguration {
    CustomColors: (Listing<CustomColor>)?
}

/// 
open class FilledMapConditionalFormatting {
    ConditionalFormattingOptions: Listing<FilledMapConditionalFormattingOption>
}

/// 
open class FunnelChartMeasureDataLabelStyle {
}

/// 
open class HistogramFieldWells {
    HistogramAggregatedFieldWells: (HistogramAggregatedFieldWells)?
}

/// 
open class PaginationConfiguration {
    PageSize: Number|Mapping
    PageNumber: Number|Mapping
}

/// 
open class CascadingControlConfiguration {
    SourceControls: (Listing<CascadingControlSource>)?
}

/// 
open class SheetControlInfoIconLabelOptions {
    Visibility: (Visibility)?
    InfoIconText: (String|Mapping)?
}

/// 
open class HeatMapConfiguration {
    ColumnLabelOptions: (ChartAxisLabelOptions)?
    ColorScale: (ColorScale)?
    Legend: (LegendOptions)?
    DataLabels: (DataLabelOptions)?
    Tooltip: (TooltipOptions)?
    FieldWells: (HeatMapFieldWells)?
    SortConfiguration: (HeatMapSortConfiguration)?
    RowLabelOptions: (ChartAxisLabelOptions)?
}

/// 
open class KPIFieldWells {
    Values: (Listing<MeasureField>)?
    TargetValues: (Listing<MeasureField>)?
    TrendGroups: (Listing<DimensionField>)?
}

/// 
open class KPISparklineOptions {
    Visibility: (Visibility)?
    Type: KPISparklineType
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    TooltipVisibility: (Visibility)?
}

/// 
open class TimeRangeFilterValue {
    Parameter: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    StaticValue: (String|Mapping)?
    RollingDate: (RollingDateConfiguration)?
}

/// 
open class VisualPalette {
    ChartColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    ColorMap: (Listing<DataPathColor>)?
}

/// 
open class AxisLogarithmicScale {
    Base: (Number|Mapping)?
}

/// 
open class DataPathColor {
    Element: DataPathValue
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
    TimeGranularity: (TimeGranularity)?
}

/// 
open class FilledMapShapeConditionalFormatting {
    FieldId: String|Mapping
    Format: (ShapeConditionalFormat)?
}

/// 
open class BarChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (BarChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class CategoricalAggregationFunction {
}

/// 
open class FilterVisualScope {
}

/// 
open class ItemsLimitConfiguration {
    OtherCategories: (OtherCategories)?
    ItemsLimit: (Number|Mapping)?
}

/// 
open class SheetControlDateTimePickerType {
}

/// 
open class TextFieldControlDisplayOptions {
    TitleOptions: (LabelOptions)?
    PlaceholderOptions: (TextControlPlaceholderOptions)?
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
}

/// 
open class ValidationStrategyMode {
}

/// 
open class AxisLabelReferenceOptions {
    FieldId: String|Mapping
    Column: ColumnIdentifier
}

/// 
open class BarChartSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
    CategoryItemsLimit: (ItemsLimitConfiguration)?
    ColorSort: (Listing<FieldSortOptions>)?
    ColorItemsLimit: (ItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<FieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (ItemsLimitConfiguration)?
}

/// 
open class ColumnSchema {
    DataType: (String|Mapping)?
    GeographicRole: (String|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class FieldLabelType {
    FieldId: (String|Mapping)?
    Visibility: (Visibility)?
}

/// 
open class OtherCategories {
}

/// 
open class PivotTableSubtotalLevel {
}

/// 
open class ReferenceLinePatternType {
}

/// 
open class ComboChartVisual {
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (ComboChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
}

/// 
open class InsightConfiguration {
    Computations: (Listing<Computation>)?
    CustomNarrative: (CustomNarrativeOptions)?
}

/// 
open class LineChartAggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
    Colors: (Listing<DimensionField>)?
    SmallMultiples: (Listing<DimensionField>)?
}

/// 
open class ReferenceLineLabelHorizontalPosition {
}

/// 
open class TimeBasedForecastProperties {
    Seasonality: (Number|Mapping)?
    PeriodsForward: (Number|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    UpperBoundary: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
    PredictionInterval: (Number|Mapping)?
}

/// 
open class CustomActionURLOperation {
    URLTemplate: String|Mapping
    URLTarget: URLTargetConfiguration
}

/// 
open class LineSeriesAxisDisplayOptions {
    AxisOptions: (AxisDisplayOptions)?
    MissingDataConfigurations: (Listing<MissingDataConfiguration>)?
}

/// 
open class SankeyDiagramChartConfiguration {
    FieldWells: (SankeyDiagramFieldWells)?
    SortConfiguration: (SankeyDiagramSortConfiguration)?
    DataLabels: (DataLabelOptions)?
}

/// 
open class TemplateVersion {
    SourceEntityArn: (String|Mapping)?
    ThemeArn: (String|Mapping)?
    VersionNumber: (Number|Mapping)?
    DataSetConfigurations: (Listing<DataSetConfiguration>)?
    Status: (ResourceStatus)?
    Description: (String|Mapping)?
    Sheets: (Listing<Sheet>)?
    CreatedTime: (String|Mapping)?
    Errors: (Listing<TemplateError>)?
}

/// 
open class WordCloudOptions {
    WordOrientation: (WordCloudWordOrientation)?
    WordScaling: (WordCloudWordScaling)?
    CloudLayout: (WordCloudCloudLayout)?
    WordCasing: (WordCloudWordCasing)?
    WordPadding: (WordCloudWordPadding)?
    MaximumStringLength: (Number|Mapping)?
}

/// 
open class PivotTableFieldSubtotalOptions {
    FieldId: (String|Mapping)?
}

/// 
open class Sheet {
    SheetId: (String(matches(Regex(#"[\w\-]+"#)))|Mapping)?
    Name: (String|Mapping)?
}

/// 
open class SheetControlLayout {
    Configuration: SheetControlLayoutConfiguration
}

/// 
open class ColumnHierarchy {
    ExplicitHierarchy: (ExplicitHierarchy)?
    DateTimeHierarchy: (DateTimeHierarchy)?
    PredefinedHierarchy: (PredefinedHierarchy)?
}

/// 
open class ContributionAnalysisDefault {
    MeasureFieldId: String|Mapping
    ContributorDimensions: Listing<ColumnIdentifier>
}

/// 
open class DefaultInteractiveLayoutConfiguration {
    Grid: (DefaultGridLayoutConfiguration)?
    FreeForm: (DefaultFreeFormLayoutConfiguration)?
}

/// 
open class FieldTooltipItem {
    Visibility: (Visibility)?
    FieldId: String|Mapping
    Label: (String|Mapping)?
}

/// 
open class ArcAxisDisplayRange {
    Max: (Number|Mapping)?
    Min: (Number|Mapping)?
}

/// 
open class BoxPlotOptions {
    StyleOptions: (BoxPlotStyleOptions)?
    OutlierVisibility: (Visibility)?
    AllDataPointsVisibility: (Visibility)?
}

/// 
open class DateMeasureField {
    FieldId: String|Mapping
    Column: ColumnIdentifier
    AggregationFunction: (DateAggregationFunction)?
    FormatConfiguration: (DateTimeFormatConfiguration)?
}

/// 
open class GeospatialMapAggregatedFieldWells {
    Geospatial: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
    Colors: (Listing<DimensionField>)?
}

/// 
open class KPIVisualStandardLayout {
    Type: KPIVisualStandardLayoutType
}

/// 
open class PeriodOverPeriodComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DimensionField)?
    Value: (MeasureField)?
}

/// 
open class PredefinedHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<ColumnIdentifier>
    DrillDownFilters: (Listing<DrillDownFilter>)?
}

/// 
open class FontWeightName {
}

/// 
open class FreeFormLayoutElement {
    XAxisLocation: String|Mapping
    YAxisLocation: String|Mapping
    RenderingRules: (Listing<SheetElementRenderingRule>)?
    LoadingAnimation: (LoadingAnimation)?
    ElementType: LayoutElementType
    Width: String|Mapping
    Height: String|Mapping
    Visibility: (Visibility)?
    BorderStyle: (FreeFormLayoutElementBorderStyle)?
    SelectedBorderStyle: (FreeFormLayoutElementBorderStyle)?
    BackgroundStyle: (FreeFormLayoutElementBackgroundStyle)?
    ElementId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class GridLayoutCanvasSizeOptions {
    ScreenCanvasSizeOptions: (GridLayoutScreenCanvasSizeOptions)?
}

/// 
open class LineInterpolation {
}

/// 
open class RadarChartSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
    CategoryItemsLimit: (ItemsLimitConfiguration)?
    ColorSort: (Listing<FieldSortOptions>)?
    ColorItemsLimit: (ItemsLimitConfiguration)?
}

/// 
open class TableBorderStyle {
}

/// 
open class TemplateSourceTemplate {
    Arn: String|Mapping
}

/// 
open class SheetTextBox {
    SheetTextBoxId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: (String|Mapping)?
}

/// 
open class FilterNullOption {
}

/// 
open class FunnelChartDataLabelOptions {
    CategoryLabelVisibility: (Visibility)?
    MeasureLabelVisibility: (Visibility)?
    Position: (DataLabelPosition)?
    LabelFontConfiguration: (FontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    MeasureDataLabelStyle: (FunnelChartMeasureDataLabelStyle)?
    Visibility: (Visibility)?
}

/// 
open class KPIVisualLayoutOptions {
    StandardLayout: (KPIVisualStandardLayout)?
}

/// 
open class PivotTableCellConditionalFormatting {
    FieldId: String|Mapping
    TextFormat: (TextConditionalFormat)?
    Scope: (PivotTableConditionalFormattingScope)?
    Scopes: (Listing<PivotTableConditionalFormattingScope>)?
}

/// 
open class PivotTableMetricPlacement {
}

/// 
open class SecondaryValueOptions {
    Visibility: (Visibility)?
}

/// 
open class SectionLayoutConfiguration {
    FreeFormLayout: FreeFormSectionLayoutConfiguration
}

/// 
open class TextAreaControlDisplayOptions {
    TitleOptions: (LabelOptions)?
    PlaceholderOptions: (TextControlPlaceholderOptions)?
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
}

/// 
open class TimeGranularity {
}

/// 
open class BoxPlotStyleOptions {
    FillStyle: (BoxPlotFillStyle)?
}

/// 
open class HistogramAggregatedFieldWells {
    Values: (Listing<MeasureField>)?
}

/// 
open class KPIComparisonValueConditionalFormatting {
    TextColor: (ConditionalFormattingColor)?
    Icon: (ConditionalFormattingIcon)?
}

/// 
open class SetParameterValueConfiguration {
    DestinationParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    Value: DestinationParameterValueConfiguration
}

/// 
open class TopBottomComputationType {
}

/// 
open class TopBottomSortOrder {
}

/// 
open class DateTimeHierarchy {
    HierarchyId: String|Mapping
    DrillDownFilters: (Listing<DrillDownFilter>)?
}

/// 
open class FilterSelectableValues {
    Values: (Listing<String|Mapping>)?
}

/// 
open class FreeFormLayoutElementBorderStyle {
    Visibility: (Visibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class FreeFormSectionLayoutConfiguration {
    Elements: Listing<FreeFormLayoutElement>
}

/// 
open class PieChartAggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
    SmallMultiples: (Listing<DimensionField>)?
}

/// 
open class RadarChartConfiguration {
    AlternateBandColorsVisibility: (Visibility)?
    AlternateBandOddColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    FieldWells: (RadarChartFieldWells)?
    BaseSeriesSettings: (RadarChartSeriesSettings)?
    ColorAxis: (AxisDisplayOptions)?
    Legend: (LegendOptions)?
    AlternateBandEvenColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    CategoryAxis: (AxisDisplayOptions)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
    SortConfiguration: (RadarChartSortConfiguration)?
    Shape: (RadarChartShape)?
    StartAngle: (Number|Mapping)?
    VisualPalette: (VisualPalette)?
    ColorLabelOptions: (ChartAxisLabelOptions)?
    AxesRangeScale: (RadarChartAxesRangeScale)?
}

/// 
open class ColumnGroupColumnSchema {
    Name: (String|Mapping)?
}

/// 
open class ComparisonMethod {
}

/// 
open class FilterScopeConfiguration {
    AllSheets: (AllSheetsFilterScopeConfiguration)?
    SelectedSheets: (SelectedSheetsFilterScopeConfiguration)?
}

/// 
open class PivotTableConfiguration {
    SortConfiguration: (PivotTableSortConfiguration)?
    TableOptions: (PivotTableOptions)?
    TotalOptions: (PivotTableTotalOptions)?
    FieldOptions: (PivotTableFieldOptions)?
    PaginatedReportOptions: (PivotTablePaginatedReportOptions)?
    FieldWells: (PivotTableFieldWells)?
}

/// 
open class ResizeOption {
}

/// 
open class TableCellConditionalFormatting {
    FieldId: String|Mapping
    TextFormat: (TextConditionalFormat)?
}

/// 
open class HeatMapSortConfiguration {
    HeatMapColumnSort: (Listing<FieldSortOptions>)?
    HeatMapRowItemsLimitConfiguration: (ItemsLimitConfiguration)?
    HeatMapColumnItemsLimitConfiguration: (ItemsLimitConfiguration)?
    HeatMapRowSort: (Listing<FieldSortOptions>)?
}

/// 
open class RadarChartAggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    Color: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class FilterTextAreaControl {
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Delimiter: (String|Mapping)?
    DisplayOptions: (TextAreaControlDisplayOptions)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
}

/// 
open class FunnelChartConfiguration {
    SortConfiguration: (FunnelChartSortConfiguration)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
    ValueLabelOptions: (ChartAxisLabelOptions)?
    Tooltip: (TooltipOptions)?
    DataLabelOptions: (FunnelChartDataLabelOptions)?
    VisualPalette: (VisualPalette)?
    FieldWells: (FunnelChartFieldWells)?
}

/// 
open class GeospatialMapConfiguration {
    WindowOptions: (GeospatialWindowOptions)?
    MapStyleOptions: (GeospatialMapStyleOptions)?
    PointStyleOptions: (GeospatialPointStyleOptions)?
    VisualPalette: (VisualPalette)?
    FieldWells: (GeospatialMapFieldWells)?
    Legend: (LegendOptions)?
    Tooltip: (TooltipOptions)?
}

/// 
open class GeospatialMapFieldWells {
    GeospatialMapAggregatedFieldWells: (GeospatialMapAggregatedFieldWells)?
}

/// 
open class ResourceStatus {
}

/// 
open class TableTotalsPlacement {
}

/// 
open class WhatIfPointScenario {
    Date: String|Mapping
    Value: Number|Mapping
}

/// 
open class FontWeight {
    Name: (FontWeightName)?
}

/// 
open class TableFieldImageConfiguration {
    SizingOptions: (TableCellImageSizingConfiguration)?
}

/// 
open class CustomContentType {
}

/// 
open class DefaultSectionBasedLayoutConfiguration {
    CanvasSizeOptions: SectionBasedLayoutCanvasSizeOptions
}

/// 
open class IntegerValueWhenUnsetConfiguration {
    ValueWhenUnsetOption: (ValueWhenUnsetOption)?
    CustomValue: (Number|Mapping)?
}

/// 
open class ReferenceLineStaticDataConfiguration {
    Value: Number|Mapping
}

/// 
open class TimeRangeDrillDownFilter {
    RangeMinimum: String|Mapping
    RangeMaximum: String|Mapping
    TimeGranularity: TimeGranularity
    Column: ColumnIdentifier
}

/// 
open class WaterfallChartConfiguration {
    SortConfiguration: (WaterfallChartSortConfiguration)?
    CategoryAxisDisplayOptions: (AxisDisplayOptions)?
    PrimaryYAxisLabelOptions: (ChartAxisLabelOptions)?
    DataLabels: (DataLabelOptions)?
    Legend: (LegendOptions)?
    VisualPalette: (VisualPalette)?
    FieldWells: (WaterfallChartFieldWells)?
    WaterfallChartOptions: (WaterfallChartOptions)?
    CategoryAxisLabelOptions: (ChartAxisLabelOptions)?
    PrimaryYAxisDisplayOptions: (AxisDisplayOptions)?
}

/// 
open class BoxPlotFillStyle {
}

/// 
open class FilterOperationSelectedFieldsConfiguration {
    SelectedFields: (Listing<String|Mapping>)?
    SelectedFieldOptions: (SelectedFieldOptions)?
    SelectedColumns: (Listing<ColumnIdentifier>)?
}

/// 
open class ParameterSliderControl {
    MaximumValue: Number|Mapping
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (SliderControlDisplayOptions)?
}

/// 
open class ReferenceLineDynamicDataConfiguration {
    Column: ColumnIdentifier
    MeasureAggregationFunction: (AggregationFunction)?
    Calculation: NumericalAggregationFunction
}

/// 
open class RelativeFontSize {
}

/// 
open class ThousandSeparatorOptions {
    Symbol: (NumericSeparatorSymbol)?
    Visibility: (Visibility)?
}

/// 
open class AnalysisDefaults {
    DefaultNewSheetConfiguration: DefaultNewSheetConfiguration
}

/// 
open class DateTimePickerControlDisplayOptions {
    TitleOptions: (LabelOptions)?
    DateTimeFormat: (String|Mapping)?
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
}

/// 
open class DynamicDefaultValue {
    UserNameColumn: (ColumnIdentifier)?
    GroupNameColumn: (ColumnIdentifier)?
    DefaultValueColumn: ColumnIdentifier
}

/// 
open class FilterControl {
    DateTimePicker: (FilterDateTimePickerControl)?
    List: (FilterListControl)?
    Dropdown: (FilterDropDownControl)?
    TextField: (FilterTextFieldControl)?
    TextArea: (FilterTextAreaControl)?
    Slider: (FilterSliderControl)?
    RelativeDateTime: (FilterRelativeDateTimeControl)?
}

/// 
open class PanelBorderStyle {
}

/// 
open class FunnelChartVisual {
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (FunnelChartConfiguration)?
}

/// 
open class PivotTableRowsLayout {
}

/// 
open class PivotTableTotalOptions {
    ColumnSubtotalOptions: (SubtotalOptions)?
    RowTotalOptions: (PivotTotalOptions)?
    ColumnTotalOptions: (PivotTotalOptions)?
    RowSubtotalOptions: (SubtotalOptions)?
}

/// 
open class NumericEqualityMatchOperator {
}

/// 
open class AxisDisplayRange {
    MinMax: (AxisDisplayMinMaxRange)?
    DataDriven: (AxisDisplayDataDrivenRange)?
}

/// 
open class BarChartConfiguration {
    ContributionAnalysisDefaults: (Listing<ContributionAnalysisDefault>)?
    CategoryAxis: (AxisDisplayOptions)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
    ColorLabelOptions: (ChartAxisLabelOptions)?
    Tooltip: (TooltipOptions)?
    SortConfiguration: (BarChartSortConfiguration)?
    Orientation: (BarChartOrientation)?
    ValueAxis: (AxisDisplayOptions)?
    Legend: (LegendOptions)?
    SmallMultiplesOptions: (SmallMultiplesOptions)?
    ValueLabelOptions: (ChartAxisLabelOptions)?
    DataLabels: (DataLabelOptions)?
    ReferenceLines: (Listing<ReferenceLine>)?
    FieldWells: (BarChartFieldWells)?
    BarsArrangement: (BarsArrangement)?
    VisualPalette: (VisualPalette)?
}

/// 
open class BarChartOrientation {
}

/// 
open class ExplicitHierarchy {
    HierarchyId: String|Mapping
    Columns: Listing<ColumnIdentifier>
    DrillDownFilters: (Listing<DrillDownFilter>)?
}

/// 
open class GridLayoutConfiguration {
    Elements: Listing<GridLayoutElement>
    CanvasSizeOptions: (GridLayoutCanvasSizeOptions)?
}

/// 
open class ListControlSearchOptions {
    Visibility: (Visibility)?
}

/// 
open class MapZoomMode {
}

/// 
open class WordCloudWordCasing {
}

/// 
open class BodySectionContent {
    Layout: (SectionLayoutConfiguration)?
}

/// 
open class DefaultGridLayoutConfiguration {
    CanvasSizeOptions: GridLayoutCanvasSizeOptions
}

/// 
open class VisualCustomActionTrigger {
}

/// 
open class FontSize {
    Relative: (RelativeFontSize)?
}

/// 
open class PercentVisibleRange {
    From: (Number|Mapping)?
    To: (Number|Mapping)?
}

/// 
open class Visual {
    PivotTableVisual: (PivotTableVisual)?
    GaugeChartVisual: (GaugeChartVisual)?
    EmptyVisual: (EmptyVisual)?
    RadarChartVisual: (RadarChartVisual)?
    KPIVisual: (KPIVisual)?
    LineChartVisual: (LineChartVisual)?
    ScatterPlotVisual: (ScatterPlotVisual)?
    BoxPlotVisual: (BoxPlotVisual)?
    InsightVisual: (InsightVisual)?
    BarChartVisual: (BarChartVisual)?
    PieChartVisual: (PieChartVisual)?
    HeatMapVisual: (HeatMapVisual)?
    TreeMapVisual: (TreeMapVisual)?
    FilledMapVisual: (FilledMapVisual)?
    HistogramVisual: (HistogramVisual)?
    WordCloudVisual: (WordCloudVisual)?
    SankeyDiagramVisual: (SankeyDiagramVisual)?
    TableVisual: (TableVisual)?
    GeospatialMapVisual: (GeospatialMapVisual)?
    FunnelChartVisual: (FunnelChartVisual)?
    ComboChartVisual: (ComboChartVisual)?
    WaterfallVisual: (WaterfallVisual)?
    CustomContentVisual: (CustomContentVisual)?
}

/// 
open class ConditionalFormattingGradientColor {
    Color: GradientColor
    Expression: String|Mapping
}

/// 
open class FieldSortOptions {
    FieldSort: (FieldSort)?
    ColumnSort: (ColumnSort)?
}

/// 
open class LineChartConfiguration {
    Series: (Listing<SeriesItem>)?
    Legend: (LegendOptions)?
    VisualPalette: (VisualPalette)?
    Type: (LineChartType)?
    DefaultSeriesSettings: (LineChartDefaultSeriesSettings)?
    DataLabels: (DataLabelOptions)?
    ContributionAnalysisDefaults: (Listing<ContributionAnalysisDefault>)?
    SmallMultiplesOptions: (SmallMultiplesOptions)?
    XAxisDisplayOptions: (AxisDisplayOptions)?
    XAxisLabelOptions: (ChartAxisLabelOptions)?
    SecondaryYAxisLabelOptions: (ChartAxisLabelOptions)?
    FieldWells: (LineChartFieldWells)?
    ForecastConfigurations: (Listing<ForecastConfiguration>)?
    PrimaryYAxisLabelOptions: (ChartAxisLabelOptions)?
    SecondaryYAxisDisplayOptions: (LineSeriesAxisDisplayOptions)?
    ReferenceLines: (Listing<ReferenceLine>)?
    Tooltip: (TooltipOptions)?
    SortConfiguration: (LineChartSortConfiguration)?
    PrimaryYAxisDisplayOptions: (LineSeriesAxisDisplayOptions)?
}

/// 
open class WidgetStatus {
}

/// 
open class DataPathValue {
    FieldId: (String|Mapping)?
    FieldValue: (String|Mapping)?
    DataPathType: (DataPathType)?
}

/// 
open class GeospatialHeatmapColorScale {
    Colors: (Listing<GeospatialHeatmapDataColor>)?
}

/// 
open class NumericFormatConfiguration {
    CurrencyDisplayFormatConfiguration: (CurrencyDisplayFormatConfiguration)?
    PercentageDisplayFormatConfiguration: (PercentageDisplayFormatConfiguration)?
    NumberDisplayFormatConfiguration: (NumberDisplayFormatConfiguration)?
}

/// 
open class ParameterDropDownControl {
    SelectableValues: (ParameterSelectableValues)?
    CascadingControlConfiguration: (CascadingControlConfiguration)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DropDownControlDisplayOptions)?
    Type: (SheetControlListType)?
}

/// 
open class SankeyDiagramAggregatedFieldWells {
    Source: (Listing<DimensionField>)?
    Destination: (Listing<DimensionField>)?
    Weight: (Listing<MeasureField>)?
}

/// 
open class SankeyDiagramFieldWells {
    SankeyDiagramAggregatedFieldWells: (SankeyDiagramAggregatedFieldWells)?
}

/// 
open class TableSortConfiguration {
    RowSort: (Listing<FieldSortOptions>)?
    PaginationConfiguration: (PaginationConfiguration)?
}

/// 
open class WordCloudFieldWells {
    WordCloudAggregatedFieldWells: (WordCloudAggregatedFieldWells)?
}

/// 
open class WordCloudAggregatedFieldWells {
    GroupBy: (Listing<DimensionField>)?
    Size: (Listing<MeasureField>)?
}

/// 
open class BoxPlotAggregatedFieldWells {
    GroupBy: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class CategoryDrillDownFilter {
    Column: ColumnIdentifier
    CategoryValues: Listing<String|Mapping>
}

/// 
open class FilterGroup {
    Filters: Listing<Filter>
    ScopeConfiguration: FilterScopeConfiguration
    Status: (WidgetStatus)?
    CrossDataset: CrossDatasetTypes
    FilterGroupId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class SectionPageBreakStatus {
}

/// 
open class SheetElementRenderingRule {
    Expression: String|Mapping
    ConfigurationOverrides: SheetElementConfigurationOverrides
}

/// 
open class SmallMultiplesAxisPlacement {
}

/// 
open class TableSideBorderOptions {
    Left: (TableBorderOptions)?
    Right: (TableBorderOptions)?
    Top: (TableBorderOptions)?
    Bottom: (TableBorderOptions)?
    InnerVertical: (TableBorderOptions)?
    InnerHorizontal: (TableBorderOptions)?
}

/// 
open class AnchorDateConfiguration {
    AnchorOption: (AnchorOption)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
}

/// 
open class CategoryFilterMatchOperator {
}

/// 
open class ComparisonConfiguration {
    ComparisonMethod: (ComparisonMethod)?
    ComparisonFormat: (ComparisonFormatConfiguration)?
}

/// 
open class GaugeChartVisual {
    ChartConfiguration: (GaugeChartConfiguration)?
    ConditionalFormatting: (GaugeChartConditionalFormatting)?
    Actions: (Listing<VisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
}

/// 
open class PivotTableConditionalFormattingOption {
    Cell: (PivotTableCellConditionalFormatting)?
}

/// 
open class SankeyDiagramSortConfiguration {
    WeightSort: (Listing<FieldSortOptions>)?
    SourceItemsLimit: (ItemsLimitConfiguration)?
    DestinationItemsLimit: (ItemsLimitConfiguration)?
}

/// 
open class TemplateSourceAnalysis {
    Arn: String|Mapping
    DataSetReferences: Listing<DataSetReference>
}

/// 
open class AxisTickLabelOptions {
    LabelOptions: (LabelOptions)?
    RotationAngle: (Number|Mapping)?
}

/// 
open class GeospatialHeatmapConfiguration {
    HeatmapColor: (GeospatialHeatmapColorScale)?
}

/// 
open class NumericRangeFilter {
    SelectAllOptions: (NumericFilterSelectAllOptions)?
    AggregationFunction: (AggregationFunction)?
    NullOption: FilterNullOption
    Column: ColumnIdentifier
    IncludeMaximum: (Boolean|Mapping)?
    RangeMinimum: (NumericRangeFilterValue)?
    RangeMaximum: (NumericRangeFilterValue)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    IncludeMinimum: (Boolean|Mapping)?
}

/// 
open class ReferenceLineValueLabelRelativePosition {
}

/// 
open class SmallMultiplesOptions {
    MaxVisibleRows: (Number|Mapping)?
    MaxVisibleColumns: (Number|Mapping)?
    PanelConfiguration: (PanelConfiguration)?
    XAxis: (SmallMultiplesAxisProperties)?
    YAxis: (SmallMultiplesAxisProperties)?
}

/// 
open class SubtotalOptions {
    FieldLevelOptions: (Listing<PivotTableFieldSubtotalOptions>)?
    TotalCellStyle: (TableCellStyle)?
    ValueCellStyle: (TableCellStyle)?
    MetricHeaderCellStyle: (TableCellStyle)?
    StyleTargets: (Listing<TableStyleTarget>)?
    TotalsVisibility: (Visibility)?
    CustomLabel: (String|Mapping)?
    FieldLevel: (PivotTableSubtotalLevel)?
}

/// 
open class TreeMapAggregatedFieldWells {
    Sizes: (Listing<MeasureField>)?
    Colors: (Listing<MeasureField>)?
    Groups: (Listing<DimensionField>)?
}

/// 
open class PivotTableFieldCollapseState {
}

/// 
open class SelectedTooltipType {
}

/// 
open class SheetDefinition {
    Layouts: (Listing<Layout>)?
    ContentType: (SheetContentType)?
    FilterControls: (Listing<FilterControl>)?
    Visuals: (Listing<Visual>)?
    TextBoxes: (Listing<SheetTextBox>)?
    SheetId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (String|Mapping)?
    Description: (String|Mapping)?
    Name: (String|Mapping)?
    ParameterControls: (Listing<ParameterControl>)?
    SheetControlLayouts: (Listing<SheetControlLayout>)?
}

/// 
open class Visibility {
}

/// 
open class Entity {
    Path: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
}

/// 
open class PanelTitleOptions {
    Visibility: (Visibility)?
    FontConfiguration: (FontConfiguration)?
    HorizontalTextAlignment: (HorizontalTextAlignment)?
}

/// 
open class TableRowConditionalFormatting {
    BackgroundColor: (ConditionalFormattingColor)?
    TextColor: (ConditionalFormattingColor)?
}

/// 
open class TotalAggregationFunction {
    SimpleTotalAggregationFunction: (SimpleTotalAggregationFunction)?
}

/// 
open class AxisDisplayOptions {
    ScrollbarOptions: (ScrollBarOptions)?
    AxisOffset: (String|Mapping)?
    TickLabelOptions: (AxisTickLabelOptions)?
    AxisLineVisibility: (Visibility)?
    GridLineVisibility: (Visibility)?
    DataOptions: (AxisDataOptions)?
}

/// 
open class CategoricalMeasureField {
    FormatConfiguration: (StringFormatConfiguration)?
    FieldId: String|Mapping
    Column: ColumnIdentifier
    AggregationFunction: (CategoricalAggregationFunction)?
}

/// 
open class ConditionalFormattingIconDisplayConfiguration {
    IconDisplayOption: (ConditionalFormattingIconDisplayOption)?
}

/// 
open class PivotTableDataPathOption {
    DataPathList: Listing<DataPathValue>
    Width: (String|Mapping)?
}

/// 
open class CustomValuesConfiguration {
    IncludeNullValue: (Boolean|Mapping)?
    CustomValues: CustomParameterValues
}

/// 
open class TimeEqualityFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: ColumnIdentifier
    Value: (String|Mapping)?
    RollingDate: (RollingDateConfiguration)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    TimeGranularity: (TimeGranularity)?
}

/// 
open class DataSetReference {
    DataSetPlaceholder: String(matches(Regex(#".*\S.*"#)))|Mapping
    DataSetArn: String|Mapping
}

/// 
open class FunnelChartAggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class LabelOptions {
    CustomLabel: (String|Mapping)?
    Visibility: (Visibility)?
    FontConfiguration: (FontConfiguration)?
}

/// 
open class SimpleTotalAggregationFunction {
}

/// 
open class TemplateVersionDefinition {
    CalculatedFields: (Listing<CalculatedField>)?
    ParameterDeclarations: (Listing<ParameterDeclaration>)?
    FilterGroups: (Listing<FilterGroup>)?
    ColumnConfigurations: (Listing<ColumnConfiguration>)?
    AnalysisDefaults: (AnalysisDefaults)?
    Options: (AssetOptions)?
    DataSetConfigurations: Listing<DataSetConfiguration>
    Sheets: (Listing<SheetDefinition>)?
}

/// 
open class ConditionalFormattingSolidColor {
    Expression: String|Mapping
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class CustomContentVisual {
    DataSetIdentifier: String|Mapping
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (CustomContentConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class FreeFormLayoutElementBackgroundStyle {
    Visibility: (Visibility)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class GlobalTableBorderOptions {
    UniformBorder: (TableBorderOptions)?
    SideSpecificBorder: (TableSideBorderOptions)?
}

/// 
open class SheetElementConfigurationOverrides {
    Visibility: (Visibility)?
}

/// 
open class FreeFormLayoutScreenCanvasSizeOptions {
    OptimizedViewPortWidth: String|Mapping
}

/// 
open class GaugeChartConditionalFormattingOption {
    Arc: (GaugeChartArcConditionalFormatting)?
    PrimaryValue: (GaugeChartPrimaryValueConditionalFormatting)?
}

/// 
open class LineChartDefaultSeriesSettings {
    AxisBinding: (AxisBinding)?
    LineStyleSettings: (LineChartLineStyleSettings)?
    MarkerStyleSettings: (LineChartMarkerStyleSettings)?
}

/// 
open class PanelConfiguration {
    BorderThickness: (String|Mapping)?
    BorderColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
    GutterVisibility: (Visibility)?
    GutterSpacing: (String|Mapping)?
    BackgroundVisibility: (Visibility)?
    Title: (PanelTitleOptions)?
    BorderVisibility: (Visibility)?
    BorderStyle: (PanelBorderStyle)?
    BackgroundColor: (String(matches(Regex(#"^#[A-F0-9]{6}(?:[A-F0-9]{2})?$"#)))|Mapping)?
}

/// 
open class RadarChartVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (RadarChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class DataSetConfiguration {
    Placeholder: (String|Mapping)?
    DataSetSchema: (DataSetSchema)?
    ColumnGroupSchemaList: (Listing<ColumnGroupSchema>)?
}

/// 
open class LegendPosition {
}

/// 
open class PaperOrientation {
}

/// 
open class PaperSize {
}

/// 
open class ForecastComputation {
    Value: (MeasureField)?
    PeriodsForward: (Number|Mapping)?
    PeriodsBackward: (Number|Mapping)?
    LowerBoundary: (Number|Mapping)?
    CustomSeasonalityValue: (Number|Mapping)?
    Time: (DimensionField)?
    Name: (String|Mapping)?
    UpperBoundary: (Number|Mapping)?
    PredictionInterval: (Number|Mapping)?
    Seasonality: (ForecastComputationSeasonality)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class LayoutElementType {
}

/// 
open class SectionAfterPageBreak {
    Status: (SectionPageBreakStatus)?
}

/// 
open class Spacing {
    Top: (String|Mapping)?
    Bottom: (String|Mapping)?
    Left: (String|Mapping)?
    Right: (String|Mapping)?
}

/// 
open class TemplateError {
    ViolatedEntities: (Listing<Entity>)?
    Type: (TemplateErrorType)?
    Message: (String(matches(Regex(#".*\S.*"#)))|Mapping)?
}

/// 
open class AllSheetsFilterScopeConfiguration {
}

/// 
open class DataPathSort {
    SortPaths: Listing<DataPathValue>
    Direction: SortDirection
}

/// 
open class FontStyle {
}

/// 
open class NumberFormatConfiguration {
    FormatConfiguration: (NumericFormatConfiguration)?
}

/// 
open class PivotTableFieldCollapseStateTarget {
    FieldId: (String|Mapping)?
    FieldDataPathValues: (Listing<DataPathValue>)?
}

/// 
open class PivotTableVisual {
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (PivotTableConfiguration)?
    ConditionalFormatting: (PivotTableConditionalFormatting)?
    Actions: (Listing<VisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class SheetControlSliderType {
}

/// 
open class DataLabelPosition {
}

/// 
open class GaugeChartConfiguration {
    TooltipOptions: (TooltipOptions)?
    VisualPalette: (VisualPalette)?
    FieldWells: (GaugeChartFieldWells)?
    GaugeChartOptions: (GaugeChartOptions)?
    DataLabels: (DataLabelOptions)?
}

/// 
open class PivotTableSortBy {
    Field: (FieldSort)?
    Column: (ColumnSort)?
    DataPath: (DataPathSort)?
}

/// 
open class RelativeDatesFilter {
    AnchorDateConfiguration: AnchorDateConfiguration
    TimeGranularity: TimeGranularity
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    ExcludePeriodConfiguration: (ExcludePeriodConfiguration)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: ColumnIdentifier
    MinimumGranularity: (TimeGranularity)?
    RelativeDateType: RelativeDateType
    RelativeDateValue: (Number|Mapping)?
    NullOption: FilterNullOption
}

/// 
open class CategoryFilter {
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: ColumnIdentifier
    Configuration: CategoryFilterConfiguration
}

/// 
open class FilterOperationTargetVisualsConfiguration {
    SameSheetTargetVisualConfiguration: (SameSheetTargetVisualConfiguration)?
}

/// 
open class GradientStop {
    GradientOffset: Number|Mapping
    DataValue: (Number|Mapping)?
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class HeatMapVisual {
    Actions: (Listing<VisualCustomAction>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (HeatMapConfiguration)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class NumberScale {
}

/// 
open class StringParameterDeclaration {
    DefaultValues: (StringDefaultValues)?
    ValueWhenUnset: (StringValueWhenUnsetConfiguration)?
    MappedDataSetParameters: (Listing<MappedDataSetParameter>)?
    ParameterValueType: ParameterValueType
    Name: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
}

/// 
open class FilledMapAggregatedFieldWells {
    Geospatial: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class VisualSubtitleLabelOptions {
    Visibility: (Visibility)?
    FormatText: (LongFormatText)?
}

/// 
open class WaterfallChartFieldWells {
    WaterfallChartAggregatedFieldWells: (WaterfallChartAggregatedFieldWells)?
}

/// 
open class DataColor {
    Color: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    DataValue: (Number|Mapping)?
}

/// 
open class DonutOptions {
    DonutCenterOptions: (DonutCenterOptions)?
    ArcOptions: (ArcOptions)?
}

/// 
open class NumberDisplayFormatConfiguration {
    NullValueFormatConfiguration: (NullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (NumericSeparatorConfiguration)?
    DecimalPlacesConfiguration: (DecimalPlacesConfiguration)?
    NumberScale: (NumberScale)?
    NegativeValueConfiguration: (NegativeValueConfiguration)?
}

/// 
open class SelectedFieldOptions {
}

/// 
open class TableInlineVisualization {
    DataBars: (DataBarsOptions)?
}

/// 
open class ColumnConfiguration {
    FormatConfiguration: (FormatConfiguration)?
    Role: (ColumnRole)?
    ColorsConfiguration: (ColorsConfiguration)?
    Column: ColumnIdentifier
}

/// 
open class PivotTableAggregatedFieldWells {
    Rows: (Listing<DimensionField>)?
    Columns: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class WaterfallChartOptions {
    TotalBarLabel: (String|Mapping)?
}

/// 
open class Computation {
    MaximumMinimum: (MaximumMinimumComputation)?
    MetricComparison: (MetricComparisonComputation)?
    TopBottomRanked: (TopBottomRankedComputation)?
    TopBottomMovers: (TopBottomMoversComputation)?
    TotalAggregation: (TotalAggregationComputation)?
    UniqueValues: (UniqueValuesComputation)?
    Forecast: (ForecastComputation)?
    PeriodOverPeriod: (PeriodOverPeriodComputation)?
    PeriodToDate: (PeriodToDateComputation)?
    GrowthRate: (GrowthRateComputation)?
}

/// 
open class ConditionalFormattingIconDisplayOption {
}

/// 
open class CustomContentImageScalingConfiguration {
}

/// 
open class DataPathType {
    PivotTableDataPathType: (PivotTableDataPathType)?
}

/// 
open class TableOrientation {
}

/// 
open class BinWidthOptions {
    Value: (Number|Mapping)?
    BinCountLimit: (Number|Mapping)?
}

/// 
open class FilterSliderControl {
    MaximumValue: Number|Mapping
    MinimumValue: Number|Mapping
    StepSize: Number|Mapping
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (SliderControlDisplayOptions)?
    Type: (SheetControlSliderType)?
}

/// 
open class LineChartSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
    CategoryItemsLimitConfiguration: (ItemsLimitConfiguration)?
    ColorItemsLimitConfiguration: (ItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<FieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (ItemsLimitConfiguration)?
}

/// 
open class CategoryFilterConfiguration {
    FilterListConfiguration: (FilterListConfiguration)?
    CustomFilterListConfiguration: (CustomFilterListConfiguration)?
    CustomFilterConfiguration: (CustomFilterConfiguration)?
}

/// 
open class FunnelChartFieldWells {
    FunnelChartAggregatedFieldWells: (FunnelChartAggregatedFieldWells)?
}

/// 
open class SortDirection {
}

/// 
open class TextConditionalFormat {
    BackgroundColor: (ConditionalFormattingColor)?
    TextColor: (ConditionalFormattingColor)?
    Icon: (ConditionalFormattingIcon)?
}

/// 
open class TextControlPlaceholderOptions {
    Visibility: (Visibility)?
}

/// 
open class TreeMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (TreeMapConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
}

/// 
open class DateDimensionField {
    HierarchyId: (String|Mapping)?
    FormatConfiguration: (DateTimeFormatConfiguration)?
    FieldId: String|Mapping
    Column: ColumnIdentifier
    DateGranularity: (TimeGranularity)?
}

/// 
open class KPIConfiguration {
    FieldWells: (KPIFieldWells)?
    SortConfiguration: (KPISortConfiguration)?
    KPIOptions: (KPIOptions)?
}

/// 
open class UnaggregatedField {
    Column: ColumnIdentifier
    FormatConfiguration: (FormatConfiguration)?
    FieldId: String|Mapping
}

/// 
open class PivotTableSortConfiguration {
    FieldSortOptions: (Listing<PivotFieldSortOptions>)?
}

/// 
open class DataLabelOptions {
    DataLabelTypes: (Listing<DataLabelType>)?
    LabelContent: (DataLabelContent)?
    LabelFontConfiguration: (FontConfiguration)?
    LabelColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    TotalsVisibility: (Visibility)?
    Visibility: (Visibility)?
    CategoryLabelVisibility: (Visibility)?
    Overlap: (DataLabelOverlap)?
    MeasureLabelVisibility: (Visibility)?
    Position: (DataLabelPosition)?
}

/// 
open class ParameterDeclaration {
    StringParameterDeclaration: (StringParameterDeclaration)?
    DecimalParameterDeclaration: (DecimalParameterDeclaration)?
    IntegerParameterDeclaration: (IntegerParameterDeclaration)?
    DateTimeParameterDeclaration: (DateTimeParameterDeclaration)?
}

/// 
open class PivotTableRowsLabelOptions {
    Visibility: (Visibility)?
    CustomLabel: (String|Mapping)?
}

/// 
open class BarChartAggregatedFieldWells {
    Category: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
    Colors: (Listing<DimensionField>)?
    SmallMultiples: (Listing<DimensionField>)?
}

/// 
open class ReferenceLineLabelVerticalPosition {
}

/// 
open class UniqueValuesComputation {
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Category: (DimensionField)?
}

/// 
open class DateAxisOptions {
    MissingDateVisibility: (Visibility)?
}

/// 
open class TargetVisualOptions {
}

/// 
open class VisibleRangeOptions {
    PercentRange: (PercentVisibleRange)?
}

/// 
open class ConditionalFormattingCustomIconOptions {
    Icon: (Icon)?
    UnicodeIcon: (String(matches(Regex(#"^[^\u0000-\u00FF]$"#)))|Mapping)?
}

/// 
open class ConditionalFormattingIcon {
    IconSet: (ConditionalFormattingIconSet)?
    CustomCondition: (ConditionalFormattingCustomIconCondition)?
}

/// 
open class NumericAxisOptions {
    Scale: (AxisScale)?
    Range: (AxisDisplayRange)?
}

/// 
open class PieChartFieldWells {
    PieChartAggregatedFieldWells: (PieChartAggregatedFieldWells)?
}

/// 
open class SeriesItem {
    FieldSeriesItem: (FieldSeriesItem)?
    DataFieldSeriesItem: (DataFieldSeriesItem)?
}

/// 
open class SmallMultiplesAxisScale {
}

/// 
open class ValueWhenUnsetOption {
}

/// 
open class CustomColor {
    FieldValue: (String|Mapping)?
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
    SpecialValue: (SpecialValue)?
}

/// 
open class DonutCenterOptions {
    LabelVisibility: (Visibility)?
}

/// 
open class FilterDateTimePickerControl {
    Title: String|Mapping
    SourceFilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    DisplayOptions: (DateTimePickerControlDisplayOptions)?
    Type: (SheetControlDateTimePickerType)?
    FilterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class SectionBasedLayoutCanvasSizeOptions {
    PaperCanvasSizeOptions: (SectionBasedLayoutPaperCanvasSizeOptions)?
}

/// 
open class SelectedSheetsFilterScopeConfiguration {
    SheetVisualScopingConfigurations: (Listing<SheetVisualScopingConfiguration>)?
}

/// 
open class VisualCustomActionOperation {
    FilterOperation: (CustomActionFilterOperation)?
    NavigationOperation: (CustomActionNavigationOperation)?
    URLOperation: (CustomActionURLOperation)?
    SetParametersOperation: (CustomActionSetParametersOperation)?
}

/// 
open class URLTargetConfiguration {
}

/// 
open class AggregationFunction {
    DateAggregationFunction: (DateAggregationFunction)?
    AttributeAggregationFunction: (AttributeAggregationFunction)?
    NumericalAggregationFunction: (NumericalAggregationFunction)?
    CategoricalAggregationFunction: (CategoricalAggregationFunction)?
}

/// 
open class CustomActionFilterOperation {
    SelectedFieldsConfiguration: FilterOperationSelectedFieldsConfiguration
    TargetVisualsConfiguration: FilterOperationTargetVisualsConfiguration
}

/// 
open class DayOfTheWeek {
}

/// 
open class HistogramBinType {
}

/// 
open class ParameterDateTimePickerControl {
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (DateTimePickerControlDisplayOptions)?
}

/// 
open class TablePaginatedReportOptions {
    VerticalOverflowVisibility: (Visibility)?
    OverflowColumnHeaderVisibility: (Visibility)?
}

/// 
open class TemplateSourceEntity {
    SourceAnalysis: (TemplateSourceAnalysis)?
    SourceTemplate: (TemplateSourceTemplate)?
}

/// 
open class VerticalTextAlignment {
}

/// 
open class BarChartFieldWells {
    BarChartAggregatedFieldWells: (BarChartAggregatedFieldWells)?
}

/// 
open class ComboChartSortConfiguration {
    CategoryItemsLimit: (ItemsLimitConfiguration)?
    ColorSort: (Listing<FieldSortOptions>)?
    ColorItemsLimit: (ItemsLimitConfiguration)?
    CategorySort: (Listing<FieldSortOptions>)?
}

/// 
open class GeospatialMapStyleOptions {
    BaseMapStyle: (BaseMapStyleType)?
}

/// 
open class KPIVisualStandardLayoutType {
}

/// 
open class WaterfallVisual {
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (WaterfallChartConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class AxisScale {
    Linear: (AxisLinearScale)?
    Logarithmic: (AxisLogarithmicScale)?
}

/// 
open class TrendArrowOptions {
    Visibility: (Visibility)?
}

/// 
open class DecimalDefaultValues {
    StaticValues: (Listing<Number|Mapping>)?
    DynamicValue: (DynamicDefaultValue)?
}

/// 
open class LineChartSeriesSettings {
    LineStyleSettings: (LineChartLineStyleSettings)?
    MarkerStyleSettings: (LineChartMarkerStyleSettings)?
}

/// 
open class ReferenceLineDataConfiguration {
    AxisBinding: (AxisBinding)?
    SeriesType: (ReferenceLineSeriesType)?
    StaticConfiguration: (ReferenceLineStaticDataConfiguration)?
    DynamicConfiguration: (ReferenceLineDynamicDataConfiguration)?
}

/// 
open class SameSheetTargetVisualConfiguration {
    TargetVisuals: (Listing<String|Mapping>)?
    TargetVisualOptions: (TargetVisualOptions)?
}

/// 
open class TableConditionalFormattingOption {
    Cell: (TableCellConditionalFormatting)?
    Row: (TableRowConditionalFormatting)?
}

/// 
open class GeospatialHeatmapDataColor {
    Color: String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping
}

/// 
open class ParameterSelectableValues {
    Values: (Listing<String|Mapping>)?
    LinkToDataSetColumn: (ColumnIdentifier)?
}

/// 
open class TableFieldCustomTextContent {
    Value: (String|Mapping)?
    FontConfiguration: FontConfiguration
}

/// 
open class TableFieldOption {
    FieldId: String|Mapping
    Width: (String|Mapping)?
    CustomLabel: (String|Mapping)?
    Visibility: (Visibility)?
    URLStyling: (TableFieldURLConfiguration)?
}

/// 
open class FilledMapConfiguration {
    Tooltip: (TooltipOptions)?
    WindowOptions: (GeospatialWindowOptions)?
    MapStyleOptions: (GeospatialMapStyleOptions)?
    FieldWells: (FilledMapFieldWells)?
    SortConfiguration: (FilledMapSortConfiguration)?
    Legend: (LegendOptions)?
}

/// 
open class GaugeChartArcConditionalFormatting {
    ForegroundColor: (ConditionalFormattingColor)?
}

/// 
open class PivotTableConditionalFormattingScopeRole {
}

/// 
open class TimeRangeFilter {
    NullOption: FilterNullOption
    IncludeMinimum: (Boolean|Mapping)?
    IncludeMaximum: (Boolean|Mapping)?
    RangeMaximumValue: (TimeRangeFilterValue)?
    ExcludePeriodConfiguration: (ExcludePeriodConfiguration)?
    TimeGranularity: (TimeGranularity)?
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: ColumnIdentifier
    RangeMinimumValue: (TimeRangeFilterValue)?
}

/// 
open class AxisDisplayDataDrivenRange {
}

/// 
open class AxisLabelOptions {
    ApplyTo: (AxisLabelReferenceOptions)?
    FontConfiguration: (FontConfiguration)?
    CustomLabel: (String|Mapping)?
}

/// 
open class ForecastComputationSeasonality {
}

/// 
open class MappedDataSetParameter {
    DataSetParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DataSetIdentifier: String|Mapping
}

/// 
open class MaximumMinimumComputationType {
}

/// 
open class TableFieldLinkConfiguration {
    Target: URLTargetConfiguration
    Content: TableFieldLinkContentConfiguration
}

/// 
open class TableFieldLinkContentConfiguration {
    CustomTextContent: (TableFieldCustomTextContent)?
    CustomIconContent: (TableFieldCustomIconContent)?
}

/// 
open class BinCountOptions {
    Value: (Number|Mapping)?
}

/// 
open class GridLayoutScreenCanvasSizeOptions {
    ResizeOption: ResizeOption
    OptimizedViewPortWidth: (String|Mapping)?
}

/// 
open class LoadingAnimation {
    Visibility: (Visibility)?
}

/// 
open class ParameterTextFieldControl {
    Title: String|Mapping
    SourceParameterName: String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping
    DisplayOptions: (TextFieldControlDisplayOptions)?
    ParameterControlId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
}

/// 
open class PivotTableOptions {
    MetricPlacement: (PivotTableMetricPlacement)?
    RowFieldNamesStyle: (TableCellStyle)?
    RowsLayout: (PivotTableRowsLayout)?
    ColumnNamesVisibility: (Visibility)?
    ToggleButtonsVisibility: (Visibility)?
    RowHeaderStyle: (TableCellStyle)?
    CellStyle: (TableCellStyle)?
    CollapsedRowDimensionsVisibility: (Visibility)?
    RowsLabelOptions: (PivotTableRowsLabelOptions)?
    DefaultCellWidth: (String|Mapping)?
    SingleMetricVisibility: (Visibility)?
    ColumnHeaderStyle: (TableCellStyle)?
    RowAlternateColorOptions: (RowAlternateColorOptions)?
}

/// 
open class InsightVisual {
    DataSetIdentifier: String|Mapping
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    InsightConfiguration: (InsightConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class RadarChartAxesRangeScale {
}

/// 
open class ScatterPlotVisual {
    ChartConfiguration: (ScatterPlotConfiguration)?
    Actions: (Listing<VisualCustomAction>)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
}

/// 
open class SectionPageBreakConfiguration {
    After: (SectionAfterPageBreak)?
}

/// 
open class TableTotalsScrollStatus {
}

/// 
open class CascadingControlSource {
    SourceSheetControlId: (String|Mapping)?
    ColumnToMatch: (ColumnIdentifier)?
}

/// 
open class DataBarsOptions {
    FieldId: String|Mapping
    PositiveColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
    NegativeColor: (String(matches(Regex(#"^#[A-F0-9]{6}$"#)))|Mapping)?
}

/// 
open class SimpleAttributeAggregationFunction {
}

/// 
open class AttributeAggregationFunction {
    SimpleAttributeAggregation: (SimpleAttributeAggregationFunction)?
    ValueForMultipleValues: (String|Mapping)?
}

/// 
open class ReferenceLine {
    LabelConfiguration: (ReferenceLineLabelConfiguration)?
    Status: (WidgetStatus)?
    DataConfiguration: ReferenceLineDataConfiguration
    StyleConfiguration: (ReferenceLineStyleConfiguration)?
}

/// 
open class DropDownControlDisplayOptions {
    SelectAllOptions: (ListControlSelectAllOptions)?
    TitleOptions: (LabelOptions)?
    InfoIconLabelOptions: (SheetControlInfoIconLabelOptions)?
}

/// 
open class NumericEqualityFilter {
    AggregationFunction: (AggregationFunction)?
    ParameterName: (String(matches(Regex(#"^[a-zA-Z0-9]+$"#)))|Mapping)?
    NullOption: FilterNullOption
    FilterId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Column: ColumnIdentifier
    Value: (Number|Mapping)?
    SelectAllOptions: (NumericFilterSelectAllOptions)?
    MatchOperator: NumericEqualityMatchOperator
}

/// 
open class ScatterPlotFieldWells {
    ScatterPlotCategoricallyAggregatedFieldWells: (ScatterPlotCategoricallyAggregatedFieldWells)?
    ScatterPlotUnaggregatedFieldWells: (ScatterPlotUnaggregatedFieldWells)?
}

/// 
open class ShortFormatText {
    RichText: (String|Mapping)?
    PlainText: (String|Mapping)?
}

/// 
open class BaseMapStyleType {
}

/// 
open class KPIPrimaryValueConditionalFormatting {
    TextColor: (ConditionalFormattingColor)?
    Icon: (ConditionalFormattingIcon)?
}

/// 
open class WordCloudCloudLayout {
}

/// 
open class GeospatialMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (GeospatialMapConfiguration)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class TableConditionalFormatting {
    ConditionalFormattingOptions: (Listing<TableConditionalFormattingOption>)?
}

/// 
open class TreeMapFieldWells {
    TreeMapAggregatedFieldWells: (TreeMapAggregatedFieldWells)?
}

/// 
open class WordCloudChartConfiguration {
    FieldWells: (WordCloudFieldWells)?
    SortConfiguration: (WordCloudSortConfiguration)?
    CategoryLabelOptions: (ChartAxisLabelOptions)?
    WordCloudOptions: (WordCloudOptions)?
}

/// 
open class FilledMapVisual {
    VisualId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Title: (VisualTitleLabelOptions)?
    Subtitle: (VisualSubtitleLabelOptions)?
    ChartConfiguration: (FilledMapConfiguration)?
    ConditionalFormatting: (FilledMapConditionalFormatting)?
    ColumnHierarchies: (Listing<ColumnHierarchy>)?
    Actions: (Listing<VisualCustomAction>)?
}

/// 
open class LineChartLineStyle {
}

/// 
open class LineChartMarkerShape {
}

/// 
open class SheetContentType {
}

/// 
open class BodySectionConfiguration {
    SectionId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Content: BodySectionContent
    Style: (SectionStyle)?
    PageBreakConfiguration: (SectionPageBreakConfiguration)?
}

/// 
open class CurrencyDisplayFormatConfiguration {
    DecimalPlacesConfiguration: (DecimalPlacesConfiguration)?
    NumberScale: (NumberScale)?
    NegativeValueConfiguration: (NegativeValueConfiguration)?
    NullValueFormatConfiguration: (NullValueFormatConfiguration)?
    Prefix: (String|Mapping)?
    Suffix: (String|Mapping)?
    SeparatorConfiguration: (NumericSeparatorConfiguration)?
    Symbol: (String(matches(Regex(#"[A-Z]{3}"#)))|Mapping)?
}

/// 
open class DefaultPaginatedLayoutConfiguration {
    SectionBased: (DefaultSectionBasedLayoutConfiguration)?
}

/// 
open class MissingDataTreatmentOption {
}

/// 
open class ReferenceLineCustomLabelConfiguration {
    CustomLabel: String(matches(Regex(#".*\S.*"#)))|Mapping
}

/// 
open class PivotTablePaginatedReportOptions {
    VerticalOverflowVisibility: (Visibility)?
    OverflowColumnHeaderVisibility: (Visibility)?
}

/// 
open class GrowthRateComputation {
    PeriodSize: (Number|Mapping)?
    ComputationId: String(matches(Regex(#"[\w\-]+"#)))|Mapping
    Name: (String|Mapping)?
    Time: (DimensionField)?
    Value: (MeasureField)?
}

/// 
open class MinimumLabelType {
    Visibility: (Visibility)?
}

/// 
open class LegendOptions {
    Visibility: (Visibility)?
    Title: (LabelOptions)?
    Position: (LegendPosition)?
    Width: (String|Mapping)?
    Height: (String|Mapping)?
}

/// 
open class PivotTableFieldOption {
    CustomLabel: (String|Mapping)?
    Visibility: (Visibility)?
    FieldId: String|Mapping
}

/// 
open class ScatterPlotCategoricallyAggregatedFieldWells {
    XAxis: (Listing<MeasureField>)?
    YAxis: (Listing<MeasureField>)?
    Category: (Listing<DimensionField>)?
    Size: (Listing<MeasureField>)?
    Label: (Listing<DimensionField>)?
}

/// 
open class TooltipItem {
    ColumnTooltipItem: (ColumnTooltipItem)?
    FieldTooltipItem: (FieldTooltipItem)?
}

/// 
open class CalculatedField {
    DataSetIdentifier: String|Mapping
    Name: String|Mapping
    Expression: String|Mapping
}

/// 
open class ColumnGroupSchema {
    Name: (String|Mapping)?
    ColumnGroupColumnSchemaList: (Listing<ColumnGroupColumnSchema>)?
}

/// 
open class ColumnSort {
    SortBy: ColumnIdentifier
    Direction: SortDirection
    AggregationFunction: (AggregationFunction)?
}

/// 
open class Layout {
    Configuration: LayoutConfiguration
}

/// 
open class RangeEndsLabelType {
    Visibility: (Visibility)?
}

/// 
open class SectionBasedLayoutConfiguration {
    HeaderSections: Listing<HeaderFooterSectionConfiguration>
    BodySections: Listing<BodySectionConfiguration>
    FooterSections: Listing<HeaderFooterSectionConfiguration>
    CanvasSizeOptions: SectionBasedLayoutCanvasSizeOptions
}

/// 
open class TableAggregatedFieldWells {
    GroupBy: (Listing<DimensionField>)?
    Values: (Listing<MeasureField>)?
}

/// 
open class AnchorOption {
}

/// 
open class BarsArrangement {
}

/// 
open class KPIActualValueConditionalFormatting {
    TextColor: (ConditionalFormattingColor)?
    Icon: (ConditionalFormattingIcon)?
}

/// 
open class KPIConditionalFormatting {
    ConditionalFormattingOptions: (Listing<KPIConditionalFormattingOption>)?
}

/// 
open class PrimaryValueDisplayType {
}

/// 
open class WaterfallChartSortConfiguration {
    CategorySort: (Listing<FieldSortOptions>)?
    BreakdownItemsLimit: (ItemsLimitConfiguration)?
}

/// 
open class ArcOptions {
    ArcThickness: (ArcThickness)?
}

/// 
open class GaugeChartOptions {
    Comparison: (ComparisonConfiguration)?
    ArcAxis: (ArcAxisConfiguration)?
    Arc: (ArcConfiguration)?
    PrimaryValueFontConfiguration: (FontConfiguration)?
    PrimaryValueDisplayType: (PrimaryValueDisplayType)?
}

/// 
open class PieChartSortConfiguration {
    CategoryItemsLimit: (ItemsLimitConfiguration)?
    SmallMultiplesSort: (Listing<FieldSortOptions>)?
    SmallMultiplesLimitConfiguration: (ItemsLimitConfiguration)?
    CategorySort: (Listing<FieldSortOptions>)?
}

/// 
open class RadarChartShape {
}

/// 
open class TableFieldIconSetType {
}

/// Definition of the AWS::QuickSight::Template Resource Type.
open class Template extends cloudformation.Resource {

    Type = "AWS::QuickSight::Template"


    /// 
    hidden VersionDescription: (String|Mapping)?

    /// 
    hidden Name: (String|Mapping)?

    /// 
    hidden Permissions: (Listing<ResourcePermission>)?

    /// 
    hidden SourceEntity: (TemplateSourceEntity)?

    /// 
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden AwsAccountId: String(matches(Regex(#"^[0-9]{12}$"#)))|Mapping

    /// 
    hidden Definition: (TemplateVersionDefinition)?

    /// 
    hidden TemplateId: String(matches(Regex(#"[\w\-]+"#)))|Mapping

    /// 
    hidden ValidationStrategy: (ValidationStrategy)?

    Properties {
        ["VersionDescription"] = if (VersionDescription == null) null else VersionDescription
        ["Name"] = if (Name == null) null else Name
        ["Permissions"] = if (Permissions == null) null else Permissions
        ["SourceEntity"] = if (SourceEntity == null) null else SourceEntity
        ["Tags"] = if (Tags == null) null else Tags
        ["AwsAccountId"] = if (AwsAccountId == null) null else AwsAccountId
        ["Definition"] = if (Definition == null) null else Definition
        ["TemplateId"] = if (TemplateId == null) null else TemplateId
        ["ValidationStrategy"] = if (ValidationStrategy == null) null else ValidationStrategy
    }

}
