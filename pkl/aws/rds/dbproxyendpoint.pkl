/// AWS::RDS::DBProxyEndpoint
///
/// Generated by rain build --pkl-class AWS::RDS::DBProxyEndpoint
module aws.rds.dbproxyendpoint

import "../../cloudformation.pkl"

/// 
open class DBProxyEndpointTagFormat {
    Value: (String(matches(Regex(#"(\w|\d|\s|\\|-|\.:=+-)*"#)))|Mapping)?
    Key: (String(matches(Regex(#"(\w|\d|\s|\\|-|\.:=+-)*"#)))|Mapping)?
}

/// Resource schema for AWS::RDS::DBProxyEndpoint.
open class DBProxyEndpoint extends cloudformation.Resource {

    Type = "AWS::RDS::DBProxyEndpoint"


    /// VPC subnet IDs to associate with the new DB proxy endpoint.
    hidden VpcSubnetIds: Listing<String|Mapping>

    /// The identifier for the proxy. This name must be unique for all proxies owned by your AWS account in the specified AWS Region.
    hidden DBProxyName: String(matches(Regex(#"[0-z]*"#)))|Mapping

    /// VPC security group IDs to associate with the new DB proxy endpoint.
    hidden VpcSecurityGroupIds: (Listing<String|Mapping>)?

    /// A value that indicates whether the DB proxy endpoint can be used for read/write or read-only operations.
    hidden TargetRole: (DBProxyEndpointTargetRole|Mapping)?

    /// An optional set of key-value pairs to associate arbitrary data of your choosing with the DB proxy endpoint.
    hidden Tags: (Listing<DBProxyEndpointTagFormat>)?

    /// The identifier for the DB proxy endpoint. This name must be unique for all DB proxy endpoints owned by your AWS account in the specified AWS Region.
    hidden DBProxyEndpointName: String(matches(Regex(#"[0-z]*"#)))|Mapping

    Properties {
        ["VpcSubnetIds"] = if (VpcSubnetIds == null) null else VpcSubnetIds
        ["DBProxyName"] = if (DBProxyName == null) null else DBProxyName
        ["VpcSecurityGroupIds"] = if (VpcSecurityGroupIds == null) null else VpcSecurityGroupIds
        ["TargetRole"] = if (TargetRole == null) null else TargetRole
        ["Tags"] = if (Tags == null) null else Tags
        ["DBProxyEndpointName"] = if (DBProxyEndpointName == null) null else DBProxyEndpointName
    }

}


typealias DBProxyEndpointTargetRole = "READ_WRITE"|"READ_ONLY"
