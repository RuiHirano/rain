/// AWS::Rekognition::StreamProcessor
///
/// Generated by rain build --pkl-class AWS::Rekognition::StreamProcessor
module aws.rekognition.streamprocessor

import "../../cloudformation.pkl"

/// The Kinesis Video Stream that streams the source video.
open class KinesisVideoStream {
    Arn: String(matches(Regex(#"(^arn:([a-z\d-]+):kinesisvideo:([a-z\d-]+):\d{12}:.+$)"#)))|Mapping
}

/// The S3 location in customer's account where inference output & artifacts are stored, as part of connected home feature.
open class S3Destination {
    BucketName: String|Mapping
    ObjectKeyPrefix: (String|Mapping)?
}

/// List of labels that need to be detected in the video stream. Current supported values are PERSON, PET, PACKAGE, ALL.
open class Labels {
}

/// Face search settings to use on a streaming video. Note that either FaceSearchSettings or ConnectedHomeSettings should be set. Not both
open class FaceSearchSettings {
    FaceMatchThreshold: (Number|Mapping)?
    CollectionId: String(matches(Regex(#"\A[a-zA-Z0-9_\.\-]+$"#)))|Mapping
}

/// The ARN of the SNS notification channel where events of interests are published, as part of connected home feature.
open class NotificationChannel {
    Arn: String|Mapping
}

/// The Amazon Kinesis Data Stream stream to which the Amazon Rekognition stream processor streams the analysis results, as part of face search feature.
open class KinesisDataStream {
    Arn: String(matches(Regex(#"(^arn:([a-z\d-]+):kinesis:([a-z\d-]+):\d{12}:.+$)"#)))|Mapping
}

/// Connected home settings to use on a streaming video. Note that either ConnectedHomeSettings or FaceSearchSettings should be set. Not both
open class ConnectedHomeSettings {
    Labels: Labels
    MinConfidence: (Number|Mapping)?
}

/// The ARN of the stream processor
open class Arn {
}

/// A bounding box denoting a region of interest in the frame to be analyzed.
open class BoundingBox {
    Height: Number|Mapping
    Width: Number|Mapping
    Left: Number|Mapping
    Top: Number|Mapping
}

/// Indicates whether Rekognition is allowed to store the video stream data for model-training.
open class DataSharingPreference {
    OptIn: Boolean|Mapping
}

/// An (X, Y) cartesian coordinate denoting a point on the frame
open class Point {
    X: Number|Mapping
    Y: Number|Mapping
}

/// A polygon showing a region of interest. Note that the ordering of the Point entries matter in defining the polygon
open class Polygon {
}

/// A key-value pair to associate with a resource.
open class Tag {
    Key: String(matches(Regex(#"\A(?!aws:)[a-zA-Z0-9+\-=\._\:\/@]+$"#)))|Mapping
    Value: String(matches(Regex(#"\A[a-zA-Z0-9+\-=\._\:\/@]+$"#)))|Mapping
}

/// The AWS::Rekognition::StreamProcessor type is used to create an Amazon Rekognition StreamProcessor that you can use to analyze streaming videos.
////// 
/// 
open class StreamProcessor extends cloudformation.Resource {

    Type = "AWS::Rekognition::StreamProcessor"


    /// The KMS key that is used by Rekognition to encrypt any intermediate customer metadata and store in the customer's S3 bucket.
    hidden KmsKeyId: (String|Mapping)?

    /// 
    hidden KinesisVideoStream: KinesisVideoStream

    /// 
    hidden S3Destination: (S3Destination)?

    /// The BoundingBoxRegionsOfInterest specifies an array of bounding boxes of interest in the video frames to analyze, as part of connected home feature. If an object is partially in a region of interest, Rekognition will tag it as detected if the overlap of the object with the region-of-interest is greater than 20%.
    hidden BoundingBoxRegionsOfInterest: (Listing<BoundingBox>)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    /// Name of the stream processor. It's an identifier you assign to the stream processor. You can use it to manage the stream processor.
    hidden Name: (String(matches(Regex(#"[a-zA-Z0-9_.\-]+"#)))|Mapping)?

    /// ARN of the IAM role that allows access to the stream processor, and provides Rekognition read permissions for KVS stream and write permissions to S3 bucket and SNS topic.
    hidden RoleArn: String(matches(Regex(#"arn:aws(-[\w]+)*:iam::[0-9]{12}:role/.*"#)))|Mapping

    /// 
    hidden ConnectedHomeSettings: (ConnectedHomeSettings)?

    /// 
    hidden KinesisDataStream: (KinesisDataStream)?

    /// 
    hidden FaceSearchSettings: (FaceSearchSettings)?

    /// 
    hidden NotificationChannel: (NotificationChannel)?

    /// 
    hidden DataSharingPreference: (DataSharingPreference)?

    /// The PolygonRegionsOfInterest specifies a set of polygon areas of interest in the video frames to analyze, as part of connected home feature. Each polygon is in turn, an ordered list of Point
    hidden PolygonRegionsOfInterest: (Listing<Polygon>)?

    Properties {
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["KinesisVideoStream"] = if (KinesisVideoStream == null) null else KinesisVideoStream
        ["S3Destination"] = if (S3Destination == null) null else S3Destination
        ["BoundingBoxRegionsOfInterest"] = if (BoundingBoxRegionsOfInterest == null) null else BoundingBoxRegionsOfInterest
        ["Tags"] = if (Tags == null) null else Tags
        ["Name"] = if (Name == null) null else Name
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["ConnectedHomeSettings"] = if (ConnectedHomeSettings == null) null else ConnectedHomeSettings
        ["KinesisDataStream"] = if (KinesisDataStream == null) null else KinesisDataStream
        ["FaceSearchSettings"] = if (FaceSearchSettings == null) null else FaceSearchSettings
        ["NotificationChannel"] = if (NotificationChannel == null) null else NotificationChannel
        ["DataSharingPreference"] = if (DataSharingPreference == null) null else DataSharingPreference
        ["PolygonRegionsOfInterest"] = if (PolygonRegionsOfInterest == null) null else PolygonRegionsOfInterest
    }

}
