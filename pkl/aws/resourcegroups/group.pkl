/// AWS::ResourceGroups::Group
///
/// Generated by rain build --pkl-class AWS::ResourceGroups::Group
module aws.resourcegroups.group

import "../../cloudformation.pkl"

/// 
open class ConfigurationParameter {
    Name: (String|Mapping)?
    Values: (Listing<String|Mapping>)?
}

typealias ResourceQueryType = "TAG_FILTERS_1_0"|"CLOUDFORMATION_STACK_1_0"

/// 
open class ResourceQuery {
    Type: (ResourceQueryType|Mapping)?
    Query: (Query)?
}

/// 
open class Query {
    ResourceTypeFilters: (Listing<String|Mapping>)?
    StackIdentifier: (String|Mapping)?
    TagFilters: (Listing<TagFilter>)?
}

/// 
open class TagFilter {
    Key: (String|Mapping)?
    Values: (Listing<String|Mapping>)?
}

/// 
open class Tag {
    Key: (String(matches(Regex(#"^(?!aws:).+"#)))|Mapping)?
    Value: (String|Mapping)?
}

/// 
open class Configuration {
}

/// 
open class ConfigurationItem {
    Type: (String|Mapping)?
    Parameters: (Listing<ConfigurationParameter>)?
}

/// Schema for ResourceGroups::Group
open class Group extends cloudformation.Resource {

    Type = "AWS::ResourceGroups::Group"


    /// 
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden Configuration: (Configuration)?

    /// 
    hidden Resources: (Listing<String|Mapping>)?

    /// The name of the resource group
    hidden Name: String|Mapping

    /// The description of the resource group
    hidden Description: (String|Mapping)?

    /// 
    hidden ResourceQuery: (ResourceQuery)?

    Properties {
        ["Tags"] = if (Tags == null) null else Tags
        ["Configuration"] = if (Configuration == null) null else Configuration
        ["Resources"] = if (Resources == null) null else Resources
        ["Name"] = if (Name == null) null else Name
        ["Description"] = if (Description == null) null else Description
        ["ResourceQuery"] = if (ResourceQuery == null) null else ResourceQuery
    }

}
