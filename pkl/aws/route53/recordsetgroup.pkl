/// AWS::Route53::RecordSetGroup
///
/// Generated by rain build --pkl-class AWS::Route53::RecordSetGroup
module aws.route53.recordsetgroup

import "../../cloudformation.pkl"

/// 
open class RecordSetGroupGeoProximityLocation {
    AWSRegion: (String|Mapping)?
    LocalZoneGroup: (String|Mapping)?
    Bias: (Int|Mapping)?
    Coordinates: (RecordSetGroupCoordinates)?
}

/// 
open class RecordSetGroupCoordinates {
    Longitude: String|Mapping
    Latitude: String|Mapping
}

/// 
open class RecordSetGroupRecordSet {
    GeoLocation: (RecordSetGroupGeoLocation)?
    MultiValueAnswer: (Boolean|Mapping)?
    Weight: (Int|Mapping)?
    Region: (String|Mapping)?
    Failover: (String|Mapping)?
    SetIdentifier: (String|Mapping)?
    Type: String|Mapping
    HostedZoneName: (String|Mapping)?
    ResourceRecords: (Listing<String|Mapping>)?
    HostedZoneId: (String|Mapping)?
    CidrRoutingConfig: (RecordSetGroupCidrRoutingConfig)?
    HealthCheckId: (String|Mapping)?
    AliasTarget: (RecordSetGroupAliasTarget)?
    GeoProximityLocation: (RecordSetGroupGeoProximityLocation)?
    TTL: (String|Mapping)?
    Name: String|Mapping
}

/// 
open class RecordSetGroupGeoLocation {
    ContinentCode: (String|Mapping)?
    CountryCode: (String|Mapping)?
    SubdivisionCode: (String|Mapping)?
}

/// 
open class RecordSetGroupAliasTarget {
    EvaluateTargetHealth: (Boolean|Mapping)?
    DNSName: String|Mapping
    HostedZoneId: String|Mapping
}

/// 
open class RecordSetGroupCidrRoutingConfig {
    CollectionId: String|Mapping
    LocationName: String|Mapping
}

/// Resource Type definition for AWS::Route53::RecordSetGroup
open class RecordSetGroup extends cloudformation.Resource {

    Type = "AWS::Route53::RecordSetGroup"


    /// 
    hidden HostedZoneName: (String|Mapping)?

    /// 
    hidden RecordSets: (Listing<RecordSetGroupRecordSet>)?

    /// 
    hidden HostedZoneId: (String|Mapping)?

    /// 
    hidden Comment: (String|Mapping)?

    Properties {
        ["HostedZoneName"] = if (HostedZoneName == null) null else HostedZoneName
        ["RecordSets"] = if (RecordSets == null) null else RecordSets
        ["HostedZoneId"] = if (HostedZoneId == null) null else HostedZoneId
        ["Comment"] = if (Comment == null) null else Comment
    }

}
