/// AWS::S3::Bucket
///
/// Generated by rain build --pkl-class AWS::S3::Bucket
module aws.s3.bucket

import "../../cloudformation.pkl"

typealias ServerSideEncryptionByDefaultSSEAlgorithm = "aws:kms"|"AES256"|"aws:kms:dsse"

/// Describes the default server-side encryption to apply to new objects in the bucket. If a PUT Object request doesn't specify any server-side encryption, this default encryption will be applied. If you don't specify a customer managed key at configuration, Amazon S3 automatically creates an AWS KMS key in your AWS account the first time that you add an object encrypted with SSE-KMS to a bucket. By default, Amazon S3 uses this KMS key for SSE-KMS. For more information, see [PUT Bucket encryption](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html) in the *Amazon S3 API Reference*.
open class ServerSideEncryptionByDefault {
    KMSMasterKeyID: (String|Mapping)?
    SSEAlgorithm: ServerSideEncryptionByDefaultSSEAlgorithm|Mapping
}

/// Specifies when noncurrent object versions expire. Upon expiration, S3 permanently deletes the noncurrent object versions. You set this lifecycle configuration action on a bucket that has versioning enabled (or suspended) to request that S3 delete noncurrent object versions at a specific period in the object's lifetime. For more information about setting a lifecycle rule configuration, see [AWS::S3::Bucket Rule](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-lifecycleconfig-rule.html).
open class NoncurrentVersionExpiration {
    NewerNoncurrentVersions: (Int|Mapping)?
    NoncurrentDays: Int|Mapping
}

typealias NoncurrentVersionTransitionStorageClass = "DEEP_ARCHIVE"|"GLACIER"|"Glacier"|"GLACIER_IR"|"INTELLIGENT_TIERING"|"ONEZONE_IA"|"STANDARD_IA"

/// Container for the transition rule that describes when noncurrent objects transition to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class. If your bucket is versioning-enabled (or versioning is suspended), you can set this action to request that Amazon S3 transition noncurrent object versions to the ``STANDARD_IA``, ``ONEZONE_IA``, ``INTELLIGENT_TIERING``, ``GLACIER_IR``, ``GLACIER``, or ``DEEP_ARCHIVE`` storage class at a specific period in the object's lifetime. If you specify this property, don't specify the ``NoncurrentVersionTransitions`` property.
open class NoncurrentVersionTransition {
    StorageClass: NoncurrentVersionTransitionStorageClass|Mapping
    TransitionInDays: Int|Mapping
    NewerNoncurrentVersions: (Int|Mapping)?
}

/// Describes where logs are stored and the prefix that Amazon S3 assigns to all log object keys for a bucket. For examples and more information, see [PUT Bucket logging](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlogging.html) in the *Amazon S3 API Reference*.
///
///   To successfully complete the ``AWS::S3::Bucket LoggingConfiguration`` request, you must have ``s3:PutObject`` and ``s3:PutObjectAcl`` in your IAM permissions.
open class LoggingConfiguration {
    DestinationBucketName: (String|Mapping)?
    LogFilePrefix: (String|Mapping)?
    TargetObjectKeyFormat: (TargetObjectKeyFormat)?
}

/// Specifies object key name filtering rules. For information about key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
open class NotificationFilter {
    S3Key: S3KeyFilter
}

/// Specifies the Object Lock rule for the specified object. Enable the this rule when you apply ``ObjectLockConfiguration`` to a bucket.
open class ObjectLockRule {
    DefaultRetention: (DefaultRetention)?
}

typealias ReplicationRuleStatus = "Disabled"|"Enabled"

/// Specifies which Amazon S3 objects to replicate and where to store the replicas.
open class ReplicationRule {
    Destination: ReplicationDestination
    Filter: (ReplicationRuleFilter)?
    Id: (String|Mapping)?
    Prefix: (String|Mapping)?
    Priority: (Int|Mapping)?
    SourceSelectionCriteria: (SourceSelectionCriteria)?
    Status: ReplicationRuleStatus|Mapping
    DeleteMarkerReplication: (DeleteMarkerReplication)?
}

/// Specifies encryption-related information for an Amazon S3 bucket that is a destination for replicated objects.
open class EncryptionConfiguration {
    ReplicaKmsKeyID: String|Mapping
}

typealias CorsRuleAllowedMethods = "GET"|"PUT"|"HEAD"|"POST"|"DELETE"

/// Specifies a cross-origin access rule for an Amazon S3 bucket.
open class CorsRule {
    MaxAge: (Int|Mapping)?
    AllowedHeaders: (Listing<String|Mapping>)?
    AllowedMethods: Listing<CorsRuleAllowedMethods|Mapping>
    AllowedOrigins: Listing<String|Mapping>
    ExposedHeaders: (Listing<String|Mapping>)?
    Id: (String|Mapping)?
}

/// Specifies the container element for Object Ownership rules.
///
///  S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
open class OwnershipControls {
    Rules: Listing<OwnershipControlsRule>
}

typealias ReplicationDestinationStorageClass = "DEEP_ARCHIVE"|"GLACIER"|"GLACIER_IR"|"INTELLIGENT_TIERING"|"ONEZONE_IA"|"REDUCED_REDUNDANCY"|"STANDARD"|"STANDARD_IA"

/// A container for information about the replication destination and its configurations including enabling the S3 Replication Time Control (S3 RTC).
open class ReplicationDestination {
    StorageClass: (ReplicationDestinationStorageClass|Mapping)?
    AccessControlTranslation: (AccessControlTranslation)?
    Account: (String|Mapping)?
    Bucket: String|Mapping
    EncryptionConfiguration: (EncryptionConfiguration)?
    Metrics: (Metrics)?
    ReplicationTime: (ReplicationTime)?
}

/// Specifies website configuration parameters for an Amazon S3 bucket.
open class WebsiteConfiguration {
    RedirectAllRequestsTo: (RedirectAllRequestsTo)?
    ErrorDocument: (String|Mapping)?
    IndexDocument: (String|Mapping)?
    RoutingRules: (Listing<RoutingRule>)?
}

/// Specifies how data related to the storage class analysis for an Amazon S3 bucket should be exported.
open class DataExport {
    Destination: Destination
    OutputSchemaVersion: String|Mapping
}

typealias InventoryConfigurationIncludedObjectVersions = "All"|"Current"

typealias InventoryConfigurationOptionalFields = "Size"|"LastModifiedDate"|"StorageClass"|"ETag"|"IsMultipartUploaded"|"ReplicationStatus"|"EncryptionStatus"|"ObjectLockRetainUntilDate"|"ObjectLockMode"|"ObjectLockLegalHoldStatus"|"IntelligentTieringAccessTier"|"BucketKeyStatus"|"ChecksumAlgorithm"|"ObjectAccessControlList"|"ObjectOwner"

typealias InventoryConfigurationScheduleFrequency = "Daily"|"Weekly"

/// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
open class InventoryConfiguration {
    Enabled: Boolean|Mapping
    Id: String|Mapping
    IncludedObjectVersions: InventoryConfigurationIncludedObjectVersions|Mapping
    OptionalFields: (Listing<InventoryConfigurationOptionalFields|Mapping>)?
    Prefix: (String|Mapping)?
    ScheduleFrequency: InventoryConfigurationScheduleFrequency|Mapping
    Destination: Destination
}

/// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
open class CorsConfiguration {
    CorsRules: Listing<CorsRule>
}

/// Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html).
open class ObjectLockConfiguration {
    ObjectLockEnabled: (String|Mapping)?
    Rule: (ObjectLockRule)?
}

typealias ReplicationTimeStatus = "Disabled"|"Enabled"

/// A container specifying S3 Replication Time Control (S3 RTC) related information, including whether S3 RTC is enabled and the time when all objects and operations on objects must be replicated. Must be specified together with a ``Metrics`` block.
open class ReplicationTime {
    Status: ReplicationTimeStatus|Mapping
    Time: ReplicationTimeValue
}

/// Specifies tags to use to identify a subset of objects for an Amazon S3 bucket.
open class TagFilter {
    Value: String|Mapping
    Key: String|Mapping
}

/// Specifies the default server-side encryption configuration.
open class ServerSideEncryptionRule {
    BucketKeyEnabled: (Boolean|Mapping)?
    ServerSideEncryptionByDefault: (ServerSideEncryptionByDefault)?
}

typealias IntelligentTieringConfigurationStatus = "Disabled"|"Enabled"

/// Specifies the S3 Intelligent-Tiering configuration for an Amazon S3 bucket.
///
///  For information about the S3 Intelligent-Tiering storage class, see [Storage class for automatically optimizing frequently and infrequently accessed objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access).
open class IntelligentTieringConfiguration {
    Id: String|Mapping
    Prefix: (String|Mapping)?
    Status: IntelligentTieringConfigurationStatus|Mapping
    TagFilters: (Listing<TagFilter>)?
    Tierings: Listing<Tiering>
}

typealias TieringAccessTier = "ARCHIVE_ACCESS"|"DEEP_ARCHIVE_ACCESS"

/// The S3 Intelligent-Tiering storage class is designed to optimize storage costs by automatically moving data to the most cost-effective storage access tier, without additional operational overhead.
open class Tiering {
    AccessTier: TieringAccessTier|Mapping
    Days: Int|Mapping
}

/// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For examples, see [AWS::S3::Bucket](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket.html#aws-properties-s3-bucket--examples). For more information, see [PUT Bucket metrics](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html) in the *Amazon S3 API Reference*.
open class MetricsConfiguration {
    AccessPointArn: (String|Mapping)?
    Id: String|Mapping
    Prefix: (String|Mapping)?
    TagFilters: (Listing<TagFilter>)?
}

/// A container for describing a condition that must be met for the specified redirect to apply. For example, 1. If request is for pages in the ``/docs`` folder, redirect to the ``/documents`` folder. 2. If request results in HTTP error 4xx, redirect request to another host where you might process the error.
open class RoutingRuleCondition {
    KeyPrefixEquals: (String|Mapping)?
    HttpErrorCodeReturnedEquals: (String|Mapping)?
}

typealias PartitionedPrefixPartitionDateSource = "EventTime"|"DeliveryTime"

/// Amazon S3 keys for log objects are partitioned in the following format:
///
///   ``[DestinationPrefix][SourceAccountId]/[SourceRegion]/[SourceBucket]/[YYYY]/[MM]/[DD]/[YYYY]-[MM]-[DD]-[hh]-[mm]-[ss]-[UniqueString]`` 
///  PartitionedPrefix defaults to EventTime delivery when server access logs are delivered.
open class PartitionedPrefix {
    PartitionDateSource: (PartitionedPrefixPartitionDateSource|Mapping)?
}

/// A container of a key value name pair.
open class Tag {
    Key: String|Mapping
    Value: String|Mapping
}

/// Specifies the redirect behavior and when a redirect is applied. For more information about routing rules, see [Configuring advanced conditional redirects](https://docs.aws.amazon.com/AmazonS3/latest/dev/how-to-page-redirect.html#advanced-conditional-redirects) in the *Amazon S3 User Guide*.
open class RoutingRule {
    RedirectRule: RedirectRule
    RoutingRuleCondition: (RoutingRuleCondition)?
}

/// Describes the LAMlong functions to invoke and the events for which to invoke them.
open class LambdaConfiguration {
    Filter: (NotificationFilter)?
    Function: String|Mapping
    Event: String|Mapping
}

/// Specify this only in a cross-account scenario (where source and destination bucket owners are not the same), and you want to change replica ownership to the AWS-account that owns the destination bucket. If this is not specified in the replication configuration, the replicas are owned by same AWS-account that owns the source object.
open class AccessControlTranslation {
    Owner: String|Mapping
}

/// A filter that identifies the subset of objects to which the replication rule applies. A ``Filter`` must specify exactly one ``Prefix``, ``TagFilter``, or an ``And`` child element.
open class ReplicationRuleFilter {
    And: (ReplicationRuleAndOperator)?
    Prefix: (String|Mapping)?
    TagFilter: (TagFilter)?
}

/// A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. 
///
///  For example:
///   +  If you specify both a ``Prefix`` and a ``TagFilter``, wrap these filters in an ``And`` tag. 
///   +  If you specify a filter based on multiple tags, wrap the ``TagFilter`` elements in an ``And`` tag
open class ReplicationRuleAndOperator {
    Prefix: (String|Mapping)?
    TagFilters: (Listing<TagFilter>)?
}

typealias VersioningConfigurationStatus = "Enabled"|"Suspended"

/// Describes the versioning state of an Amazon S3 bucket. For more information, see [PUT Bucket versioning](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html) in the *Amazon S3 API Reference*.
open class VersioningConfiguration {
    Status: VersioningConfigurationStatus|Mapping
}

typealias DestinationFormat = "CSV"|"ORC"|"Parquet"

/// Specifies information about where to publish analysis or configuration results for an Amazon S3 bucket.
open class Destination {
    Prefix: (String|Mapping)?
    BucketArn: String|Mapping
    BucketAccountId: (String|Mapping)?
    Format: DestinationFormat|Mapping
}

typealias AccelerateConfigurationAccelerationStatus = "Enabled"|"Suspended"

/// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
open class AccelerateConfiguration {
    AccelerationStatus: AccelerateConfigurationAccelerationStatus|Mapping
}

/// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
open class LifecycleConfiguration {
    Rules: Listing<Rule>
}

/// The date value in ISO 8601 format. The timezone is always UTC. (YYYY-MM-DDThh:mm:ssZ)
open class iso8601UTC {
}

typealias RuleStatus = "Enabled"|"Disabled"

/// Specifies lifecycle rules for an Amazon S3 bucket. For more information, see [Put Bucket Lifecycle Configuration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTlifecycle.html) in the *Amazon S3 API Reference*.
///
///  You must specify at least one of the following properties: ``AbortIncompleteMultipartUpload``, ``ExpirationDate``, ``ExpirationInDays``, ``NoncurrentVersionExpirationInDays``, ``NoncurrentVersionTransition``, ``NoncurrentVersionTransitions``, ``Transition``, or ``Transitions``.
open class Rule {
    ObjectSizeGreaterThan: (String(matches(Regex(#"[0-9]+"#)))|Mapping)?
    Transition: (Transition)?
    ExpirationInDays: (Int|Mapping)?
    Id: (String|Mapping)?
    NoncurrentVersionExpirationInDays: (Int|Mapping)?
    NoncurrentVersionTransition: (NoncurrentVersionTransition)?
    AbortIncompleteMultipartUpload: (AbortIncompleteMultipartUpload)?
    ExpirationDate: (iso8601UTC)?
    NoncurrentVersionExpiration: (NoncurrentVersionExpiration)?
    NoncurrentVersionTransitions: (Listing<NoncurrentVersionTransition>)?
    Prefix: (String|Mapping)?
    Transitions: (Listing<Transition>)?
    ExpiredObjectDeleteMarker: (Boolean|Mapping)?
    Status: RuleStatus|Mapping
    TagFilters: (Listing<TagFilter>)?
    ObjectSizeLessThan: (String(matches(Regex(#"[0-9]+"#)))|Mapping)?
}

/// A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events.
open class TopicConfiguration {
    Event: String|Mapping
    Filter: (NotificationFilter)?
    Topic: String|Mapping
}

typealias DefaultRetentionMode = "COMPLIANCE"|"GOVERNANCE"

/// The container element for specifying the default Object Lock retention settings for new objects placed in the specified bucket.
///
///    +  The ``DefaultRetention`` settings require both a mode and a period.
///   +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
open class DefaultRetention {
    Years: (Int|Mapping)?
    Days: (Int|Mapping)?
    Mode: (DefaultRetentionMode|Mapping)?
}

/// A container for replication rules. You can add up to 1,000 rules. The maximum size of a replication configuration is 2 MB. The latest version of the replication configuration XML is V2. For more information about XML V2 replication configurations, see [Replication configuration](https://docs.aws.amazon.com/AmazonS3/latest/userguide/replication-add-config.html) in the *Amazon S3 User Guide*.
open class ReplicationConfiguration {
    Role: String|Mapping
    Rules: Listing<ReplicationRule>
}

/// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
open class AnalyticsConfiguration {
    TagFilters: (Listing<TagFilter>)?
    StorageClassAnalysis: StorageClassAnalysis
    Id: String|Mapping
    Prefix: (String|Mapping)?
}

/// A container specifying the time value for S3 Replication Time Control (S3 RTC) and replication metrics ``EventThreshold``.
open class ReplicationTimeValue {
    Minutes: Int|Mapping
}

typealias RedirectAllRequestsToProtocol = "http"|"https"

/// Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket.
open class RedirectAllRequestsTo {
    HostName: String|Mapping
    Protocol: (RedirectAllRequestsToProtocol|Mapping)?
}

/// Describes the key format for server access log file in the target bucket. You can choose between SimplePrefix and PartitionedPrefix.
open class TargetObjectKeyFormat {
}

/// Specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events.
open class QueueConfiguration {
    Filter: (NotificationFilter)?
    Queue: String|Mapping
    Event: String|Mapping
}

/// A container for object key name prefix and suffix filtering rules. For more information about object key name filtering, see [Configuring event notifications using object key name filtering](https://docs.aws.amazon.com/AmazonS3/latest/userguide/notification-how-to-filtering.html) in the *Amazon S3 User Guide*.
///
///   The same type of filter rule cannot be used more than once. For example, you cannot specify two prefix rules.
open class S3KeyFilter {
    Rules: Listing<FilterRule>
}

/// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
open class BucketEncryption {
    ServerSideEncryptionConfiguration: Listing<ServerSideEncryptionRule>
}

typealias TransitionStorageClass = "DEEP_ARCHIVE"|"GLACIER"|"Glacier"|"GLACIER_IR"|"INTELLIGENT_TIERING"|"ONEZONE_IA"|"STANDARD_IA"

/// Specifies when an object transitions to a specified storage class. For more information about Amazon S3 lifecycle configuration rules, see [Transitioning Objects Using Amazon S3 Lifecycle](https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-transition-general-considerations.html) in the *Amazon S3 User Guide*.
open class Transition {
    StorageClass: TransitionStorageClass|Mapping
    TransitionDate: (iso8601UTC)?
    TransitionInDays: (Int|Mapping)?
}

/// Specifies the Amazon S3 object key name to filter on. An object key name is the name assigned to an object in your Amazon S3 bucket. You specify whether to filter on the suffix or prefix of the object key name. A prefix is a specific string of characters at the beginning of an object key name, which you can use to organize objects. For example, you can start the key names of related objects with a prefix, such as ``2023-`` or ``engineering/``. Then, you can use ``FilterRule`` to find objects in a bucket with key names that have the same prefix. A suffix is similar to a prefix, but it is at the end of the object key name instead of at the beginning.
open class FilterRule {
    Name: String|Mapping
    Value: String|Mapping
}

typealias DeleteMarkerReplicationStatus = "Disabled"|"Enabled"

/// Specifies whether Amazon S3 replicates delete markers. If you specify a ``Filter`` in your replication configuration, you must also include a ``DeleteMarkerReplication`` element. If your ``Filter`` includes a ``Tag`` element, the ``DeleteMarkerReplication`` ``Status`` must be set to Disabled, because Amazon S3 does not support replicating delete markers for tag-based rules. For an example configuration, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config). 
///
///  For more information about delete marker replication, see [Basic Rule Configuration](https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html). 
///   If you are using an earlier version of the replication configuration, Amazon S3 handles replication of delete markers differently. For more information, see [Backward Compatibility](https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-backward-compat-considerations).
open class DeleteMarkerReplication {
    Status: (DeleteMarkerReplicationStatus|Mapping)?
}

/// A container that describes additional filters for identifying the source objects that you want to replicate. You can choose to enable or disable the replication of these objects.
open class SourceSelectionCriteria {
    ReplicaModifications: (ReplicaModifications)?
    SseKmsEncryptedObjects: (SseKmsEncryptedObjects)?
}

typealias SseKmsEncryptedObjectsStatus = "Disabled"|"Enabled"

/// A container for filter information for the selection of S3 objects encrypted with AWS KMS.
open class SseKmsEncryptedObjects {
    Status: SseKmsEncryptedObjectsStatus|Mapping
}

/// the Amazon Resource Name (ARN) of the specified bucket.
open class Arn {
}

/// Specifies the days since the initiation of an incomplete multipart upload that Amazon S3 will wait before permanently removing all parts of the upload. For more information, see [Stopping Incomplete Multipart Uploads Using a Bucket Lifecycle Policy](https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config) in the *Amazon S3 User Guide*.
open class AbortIncompleteMultipartUpload {
    DaysAfterInitiation: Int|Mapping
}

/// Describes the notification configuration for an Amazon S3 bucket.
///
///   If you create the target resource and related permissions in the same template, you might have a circular dependency.
///  For example, you might use the ``AWS::Lambda::Permission`` resource to grant the bucket permission to invoke an AWS Lambda function. However, AWS CloudFormation can't create the bucket until the bucket has permission to invoke the function (AWS CloudFormation checks whether the bucket can invoke the function). If you're using Refs to pass the bucket name, this leads to a circular dependency.
///  To avoid this dependency, you can create all resources without specifying the notification configuration. Then, update the stack with a notification configuration.
///  For more information on permissions, see [AWS::Lambda::Permission](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-resource-lambda-permission.html) and [Granting Permissions to Publish Event Notification Messages to a Destination](https://docs.aws.amazon.com/AmazonS3/latest/dev/NotificationHowTo.html#grant-destinations-permissions-to-s3).
open class NotificationConfiguration {
    EventBridgeConfiguration: (EventBridgeConfiguration)?
    LambdaConfigurations: (Listing<LambdaConfiguration>)?
    QueueConfigurations: (Listing<QueueConfiguration>)?
    TopicConfigurations: (Listing<TopicConfiguration>)?
}

/// The PublicAccessBlock configuration that you want to apply to this Amazon S3 bucket. You can enable the configuration options in any combination. For more information about when Amazon S3 considers a bucket or object public, see [The Meaning of "Public"](https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status) in the *Amazon S3 User Guide*.
open class PublicAccessBlockConfiguration {
    BlockPublicAcls: (Boolean|Mapping)?
    BlockPublicPolicy: (Boolean|Mapping)?
    IgnorePublicAcls: (Boolean|Mapping)?
    RestrictPublicBuckets: (Boolean|Mapping)?
}

/// Specifies data related to access patterns to be collected and made available to analyze the tradeoffs between different storage classes for an Amazon S3 bucket.
open class StorageClassAnalysis {
    DataExport: (DataExport)?
}

/// Amazon S3 can send events to Amazon EventBridge whenever certain events happen in your bucket, see [Using EventBridge](https://docs.aws.amazon.com/AmazonS3/latest/userguide/EventBridge.html) in the *Amazon S3 User Guide*.
///
///  Unlike other destinations, delivery of events to EventBridge can be either enabled or disabled for a bucket. If enabled, all events will be sent to EventBridge and you can use EventBridge rules to route events to additional targets. For more information, see [What Is Amazon EventBridge](https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-what-is.html) in the *Amazon EventBridge User Guide*
open class EventBridgeConfiguration {
    EventBridgeEnabled: Boolean|Mapping
}

typealias OwnershipControlsRuleObjectOwnership = "ObjectWriter"|"BucketOwnerPreferred"|"BucketOwnerEnforced"

/// Specifies an Object Ownership rule.
///
///  S3 Object Ownership is an Amazon S3 bucket-level setting that you can use to disable access control lists (ACLs) and take ownership of every object in your bucket, simplifying access management for data stored in Amazon S3. For more information, see [Controlling ownership of objects and disabling ACLs](https://docs.aws.amazon.com/AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
open class OwnershipControlsRule {
    ObjectOwnership: (OwnershipControlsRuleObjectOwnership|Mapping)?
}

typealias MetricsStatus = "Disabled"|"Enabled"

/// A container specifying replication metrics-related settings enabling replication metrics and events.
open class Metrics {
    EventThreshold: (ReplicationTimeValue)?
    Status: MetricsStatus|Mapping
}

typealias ReplicaModificationsStatus = "Enabled"|"Disabled"

/// A filter that you can specify for selection for modifications on replicas.
open class ReplicaModifications {
    Status: ReplicaModificationsStatus|Mapping
}

typealias RedirectRuleProtocol = "http"|"https"

/// Specifies how requests are redirected. In the event of an error, you can specify a different error code to return.
open class RedirectRule {
    HostName: (String|Mapping)?
    HttpRedirectCode: (String|Mapping)?
    Protocol: (RedirectRuleProtocol|Mapping)?
    ReplaceKeyPrefixWith: (String|Mapping)?
    ReplaceKeyWith: (String|Mapping)?
}

/// The ``AWS::S3::Bucket`` resource creates an Amazon S3 bucket in the same AWS Region where you create the AWS CloudFormation stack.
///
///  To control how AWS CloudFormation handles the bucket when the stack is deleted, you can set a deletion policy for your bucket. You can choose to *retain* the bucket or to *delete* the bucket. For more information, see [DeletionPolicy Attribute](https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/aws-attribute-deletionpolicy.html).
///   You can only delete empty buckets. Deletion fails for buckets that have contents.
open class Bucket extends cloudformation.Resource {

    Type = "AWS::S3::Bucket"


/// Indicates whether this bucket has an Object Lock configuration enabled. Enable ``ObjectLockEnabled`` when you apply ``ObjectLockConfiguration`` to a bucket.
    hidden ObjectLockEnabled: (Boolean|Mapping)?

/// This is a legacy property, and it is not recommended for most use cases. A majority of modern use cases in Amazon S3 no longer require the use of ACLs, and we recommend that you keep ACLs disabled. For more information, see [Controlling object ownership](https://docs.aws.amazon.com//AmazonS3/latest/userguide/about-object-ownership.html) in the *Amazon S3 User Guide*.
///
///   A canned access control list (ACL) that grants predefined permissions to the bucket. For more information about canned ACLs, see [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#canned-acl) in the *Amazon S3 User Guide*.
///   S3 buckets are created with ACLs disabled by default. Therefore, unless you explicitly set the [AWS::S3::OwnershipControls](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-bucket-ownershipcontrols.html) property to enable ACLs, your resource will fail to deploy with any value other than Private. Use cases requiring ACLs are uncommon.
///   The majority of access control configurations can be successfully and more easily achieved with bucket policies. For more information, see [AWS::S3::BucketPolicy](https://docs.aws.amazon.com//AWSCloudFormation/latest/UserGuide/aws-properties-s3-policy.html). For examples of common policy configurations, including S3 Server Access Logs buckets and more, see [Bucket policy examples](https://docs.aws.amazon.com/AmazonS3/latest/userguide/example-bucket-policies.html) in the *Amazon S3 User Guide*.
    hidden AccessControl: (BucketAccessControl|Mapping)?

/// An arbitrary set of tags (key-value pairs) for this S3 bucket.
    hidden Tags: (Listing<Tag>)?

/// Describes the cross-origin access configuration for objects in an Amazon S3 bucket. For more information, see [Enabling Cross-Origin Resource Sharing](https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html) in the *Amazon S3 User Guide*.
    hidden CorsConfiguration: (CorsConfiguration)?

/// Specifies the lifecycle configuration for objects in an Amazon S3 bucket. For more information, see [Object Lifecycle Management](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html) in the *Amazon S3 User Guide*.
    hidden LifecycleConfiguration: (LifecycleConfiguration)?

/// Settings that define where logs are stored.
    hidden LoggingConfiguration: (LoggingConfiguration)?

/// Configuration that defines how Amazon S3 handles Object Ownership rules.
    hidden OwnershipControls: (OwnershipControls)?

/// Specifies the configuration and any analyses for the analytics filter of an Amazon S3 bucket.
    hidden AnalyticsConfigurations: (Listing<AnalyticsConfiguration>)?

/// Configuration that defines how Amazon S3 handles public access.
    hidden PublicAccessBlockConfiguration: (PublicAccessBlockConfiguration)?

/// Configuration for replicating objects in an S3 bucket. To enable replication, you must also enable versioning by using the ``VersioningConfiguration`` property.
///
///  Amazon S3 can store replicated objects in a single destination bucket or multiple destination buckets. The destination bucket or buckets must already exist.
    hidden ReplicationConfiguration: (ReplicationConfiguration)?

/// Information used to configure the bucket as a static website. For more information, see [Hosting Websites on Amazon S3](https://docs.aws.amazon.com/AmazonS3/latest/dev/WebsiteHosting.html).
    hidden WebsiteConfiguration: (WebsiteConfiguration)?

/// Configures the transfer acceleration state for an Amazon S3 bucket. For more information, see [Amazon S3 Transfer Acceleration](https://docs.aws.amazon.com/AmazonS3/latest/dev/transfer-acceleration.html) in the *Amazon S3 User Guide*.
    hidden AccelerateConfiguration: (AccelerateConfiguration)?

/// A name for the bucket. If you don't specify a name, AWS CloudFormation generates a unique ID and uses that ID for the bucket name. The bucket name must contain only lowercase letters, numbers, periods (.), and dashes (-) and must follow [Amazon S3 bucket restrictions and limitations](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html). For more information, see [Rules for naming Amazon S3 buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/BucketRestrictions.html#bucketnamingrules) in the *Amazon S3 User Guide*. 
///
///   If you specify a name, you can't perform updates that require replacement of this resource. You can perform updates that require no or some interruption. If you need to replace the resource, specify a new name.
    hidden BucketName: (String(matches(Regex(#"^[a-z0-9][a-z0-9//.//-]*[a-z0-9]$"#)))|Mapping)?

/// Configuration that defines how Amazon S3 handles bucket notifications.
    hidden NotificationConfiguration: (NotificationConfiguration)?

/// Specifies default encryption for a bucket using server-side encryption with Amazon S3-managed keys (SSE-S3), AWS KMS-managed keys (SSE-KMS), or dual-layer server-side encryption with KMS-managed keys (DSSE-KMS). For information about the Amazon S3 default encryption feature, see [Amazon S3 Default Encryption for S3 Buckets](https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html) in the *Amazon S3 User Guide*.
    hidden BucketEncryption: (BucketEncryption)?

/// This operation is not supported by directory buckets.
///
///   Places an Object Lock configuration on the specified bucket. The rule specified in the Object Lock configuration will be applied by default to every new object placed in the specified bucket. For more information, see [Locking Objects](https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html). 
///    +  The ``DefaultRetention`` settings require both a mode and a period.
///   +  The ``DefaultRetention`` period can be either ``Days`` or ``Years`` but you must select one. You cannot specify ``Days`` and ``Years`` at the same time.
///   +  You can enable Object Lock for new or existing buckets. For more information, see [Configuring Object Lock](https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lock-configure.html).
    hidden ObjectLockConfiguration: (ObjectLockConfiguration)?

/// Specifies the inventory configuration for an Amazon S3 bucket. For more information, see [GET Bucket inventory](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketGETInventoryConfig.html) in the *Amazon S3 API Reference*.
    hidden InventoryConfigurations: (Listing<InventoryConfiguration>)?

/// Specifies a metrics configuration for the CloudWatch request metrics (specified by the metrics configuration ID) from an Amazon S3 bucket. If you're updating an existing metrics configuration, note that this is a full replacement of the existing metrics configuration. If you don't include the elements you want to keep, they are erased. For more information, see [PutBucketMetricsConfiguration](https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTMetricConfiguration.html).
    hidden MetricsConfigurations: (Listing<MetricsConfiguration>)?

/// Enables multiple versions of all objects in this bucket. You might enable versioning to prevent objects from being deleted or overwritten by mistake or to archive objects so that you can retrieve previous versions of them.
    hidden VersioningConfiguration: (VersioningConfiguration)?

/// Defines how Amazon S3 handles Intelligent-Tiering storage.
    hidden IntelligentTieringConfigurations: (Listing<IntelligentTieringConfiguration>)?

    Properties {
        ["ObjectLockEnabled"] = if (ObjectLockEnabled == null) null else ObjectLockEnabled
        ["AccessControl"] = if (AccessControl == null) null else AccessControl
        ["Tags"] = if (Tags == null) null else Tags
        ["CorsConfiguration"] = if (CorsConfiguration == null) null else CorsConfiguration
        ["LifecycleConfiguration"] = if (LifecycleConfiguration == null) null else LifecycleConfiguration
        ["LoggingConfiguration"] = if (LoggingConfiguration == null) null else LoggingConfiguration
        ["OwnershipControls"] = if (OwnershipControls == null) null else OwnershipControls
        ["AnalyticsConfigurations"] = if (AnalyticsConfigurations == null) null else AnalyticsConfigurations
        ["PublicAccessBlockConfiguration"] = if (PublicAccessBlockConfiguration == null) null else PublicAccessBlockConfiguration
        ["ReplicationConfiguration"] = if (ReplicationConfiguration == null) null else ReplicationConfiguration
        ["WebsiteConfiguration"] = if (WebsiteConfiguration == null) null else WebsiteConfiguration
        ["AccelerateConfiguration"] = if (AccelerateConfiguration == null) null else AccelerateConfiguration
        ["BucketName"] = if (BucketName == null) null else BucketName
        ["NotificationConfiguration"] = if (NotificationConfiguration == null) null else NotificationConfiguration
        ["BucketEncryption"] = if (BucketEncryption == null) null else BucketEncryption
        ["ObjectLockConfiguration"] = if (ObjectLockConfiguration == null) null else ObjectLockConfiguration
        ["InventoryConfigurations"] = if (InventoryConfigurations == null) null else InventoryConfigurations
        ["MetricsConfigurations"] = if (MetricsConfigurations == null) null else MetricsConfigurations
        ["VersioningConfiguration"] = if (VersioningConfiguration == null) null else VersioningConfiguration
        ["IntelligentTieringConfigurations"] = if (IntelligentTieringConfigurations == null) null else IntelligentTieringConfigurations
    }

}


typealias BucketAccessControl = "AuthenticatedRead"|"AwsExecRead"|"BucketOwnerFullControl"|"BucketOwnerRead"|"LogDeliveryWrite"|"Private"|"PublicRead"|"PublicReadWrite"
