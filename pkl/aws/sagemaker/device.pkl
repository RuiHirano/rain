/// AWS::SageMaker::Device
///
/// Generated by rain build --pkl-class AWS::SageMaker::Device
module aws.sagemaker.device

import "../../cloudformation.pkl"

/// 
open class DeviceTag {
    Key: String(matches(Regex(#"^((?!aws:)[\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
    Value: String(matches(Regex(#"^([\p{L}\p{Z}\p{N}_.:/=+\-@]*)$"#)))|Mapping
}

/// Edge device you want to create
open class DeviceDevice {
    IotThingName: (String(matches(Regex(#"[a-zA-Z0-9:_-]+"#)))|Mapping)?
    Description: (String(matches(Regex(#"[\S\s]+"#)))|Mapping)?
    DeviceName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9])*$"#)))|Mapping
}

/// Resource schema for AWS::SageMaker::Device
open class Device extends cloudformation.Resource {

    Type = "AWS::SageMaker::Device"


    /// The name of the edge device fleet
    hidden DeviceFleetName: String(matches(Regex(#"^[a-zA-Z0-9](-*_*[a-zA-Z0-9])*$"#)))|Mapping

    /// The Edge Device you want to register against a device fleet
    hidden Device: (DeviceDevice)?

    /// Associate tags with the resource
    hidden Tags: (Listing<DeviceTag>)?

    Properties {
        ["DeviceFleetName"] = if (DeviceFleetName == null) null else DeviceFleetName
        ["Device"] = if (Device == null) null else Device
        ["Tags"] = if (Tags == null) null else Tags
    }

}
