/// AWS::SageMaker::FeatureGroup
///
/// Generated by rain build --pkl-class AWS::SageMaker::FeatureGroup
module aws.sagemaker.featuregroup

import "../../cloudformation.pkl"

/// Throughput mode configuration of the feature group
open class ThroughputMode {
}

typealias FeatureDefinitionFeatureType = "Integral"|"Fractional"|"String"

/// 
open class FeatureDefinition {
    FeatureName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping
    FeatureType: FeatureDefinitionFeatureType|Mapping
}

/// Unit of ttl configuration
open class Unit {
}

/// 
open class DataCatalogConfig {
    TableName: String(matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF	]*"#)))|Mapping
    Catalog: String(matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF	]*"#)))|Mapping
    Database: String(matches(Regex(#"[\u0020-\uD7FF\uE000-\uFFFD\uD800\uDC00-\uDBFF\uDFFF	]*"#)))|Mapping
}

/// 
open class OnlineStoreSecurityConfig {
    KmsKeyId: (KmsKeyId)?
}

/// Format for the offline store feature group. Iceberg is the optimal format for feature groups shared between offline and online stores.
open class TableFormat {
}

/// A key-value pair to associate with a resource.
open class Tag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class ThroughputConfig {
    ProvisionedReadCapacityUnits: (Int|Mapping)?
    ProvisionedWriteCapacityUnits: (Int|Mapping)?
    ThroughputMode: ThroughputMode
}

/// 
open class KmsKeyId {
}

/// Value of ttl configuration
open class Value {
}

/// 
open class S3StorageConfig {
    S3Uri: String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping
    KmsKeyId: (KmsKeyId)?
}

/// 
open class StorageType {
}

/// TTL configuration of the feature group
open class TtlDuration {
    Unit: (Unit)?
    Value: (Value)?
}

/// Resource Type definition for AWS::SageMaker::FeatureGroup
open class FeatureGroup extends cloudformation.Resource {

    Type = "AWS::SageMaker::FeatureGroup"


    /// The Record Identifier Feature Name.
    hidden RecordIdentifierFeatureName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping

    /// 
    hidden OfflineStoreConfig: (Dynamic)?

    /// 
    hidden ThroughputConfig: (ThroughputConfig)?

    /// An array of key-value pair to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    /// Description about the FeatureGroup.
    hidden Description: (String|Mapping)?

    /// The Name of the FeatureGroup.
    hidden FeatureGroupName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping

    /// The Event Time Feature Name.
    hidden EventTimeFeatureName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,63}"#)))|Mapping

    /// An Array of Feature Definition
    hidden FeatureDefinitions: Listing<FeatureDefinition>

    /// 
    hidden OnlineStoreConfig: (Dynamic)?

    /// Role Arn
    hidden RoleArn: (String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping)?

    Properties {
        ["RecordIdentifierFeatureName"] = if (RecordIdentifierFeatureName == null) null else RecordIdentifierFeatureName
        ["OfflineStoreConfig"] = if (OfflineStoreConfig == null) null else OfflineStoreConfig
        ["ThroughputConfig"] = if (ThroughputConfig == null) null else ThroughputConfig
        ["Tags"] = if (Tags == null) null else Tags
        ["Description"] = if (Description == null) null else Description
        ["FeatureGroupName"] = if (FeatureGroupName == null) null else FeatureGroupName
        ["EventTimeFeatureName"] = if (EventTimeFeatureName == null) null else EventTimeFeatureName
        ["FeatureDefinitions"] = if (FeatureDefinitions == null) null else FeatureDefinitions
        ["OnlineStoreConfig"] = if (OnlineStoreConfig == null) null else OnlineStoreConfig
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
    }

}
