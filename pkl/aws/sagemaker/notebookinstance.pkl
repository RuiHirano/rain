/// AWS::SageMaker::NotebookInstance
///
/// Generated by rain build --pkl-class AWS::SageMaker::NotebookInstance
module aws.sagemaker.notebookinstance

import "../../cloudformation.pkl"

/// 
open class NotebookInstanceInstanceMetadataServiceConfiguration {
    MinimumInstanceMetadataServiceVersion: String|Mapping
}

/// 
open class NotebookInstanceTag {
    Value: String|Mapping
    Key: String|Mapping
}

/// Resource Type definition for AWS::SageMaker::NotebookInstance
open class NotebookInstance extends cloudformation.Resource {

    Type = "AWS::SageMaker::NotebookInstance"


    /// 
    hidden KmsKeyId: (String|Mapping)?

    /// 
    hidden SubnetId: (String|Mapping)?

    /// 
    hidden LifecycleConfigName: (String|Mapping)?

    /// 
    hidden InstanceType: String|Mapping

    /// 
    hidden AdditionalCodeRepositories: (Listing<String|Mapping>)?

    /// 
    hidden DirectInternetAccess: (String|Mapping)?

    /// 
    hidden PlatformIdentifier: (String|Mapping)?

    /// 
    hidden SecurityGroupIds: (Listing<String|Mapping>)?

    /// 
    hidden NotebookInstanceName: (String|Mapping)?

    /// 
    hidden DefaultCodeRepository: (String|Mapping)?

    /// 
    hidden AcceleratorTypes: (Listing<String|Mapping>)?

    /// 
    hidden RoleArn: String|Mapping

    /// 
    hidden InstanceMetadataServiceConfiguration: (NotebookInstanceInstanceMetadataServiceConfiguration)?

    /// 
    hidden Tags: (Listing<NotebookInstanceTag>)?

    /// 
    hidden VolumeSizeInGB: (Int|Mapping)?

    /// 
    hidden RootAccess: (String|Mapping)?

    Properties {
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["SubnetId"] = if (SubnetId == null) null else SubnetId
        ["LifecycleConfigName"] = if (LifecycleConfigName == null) null else LifecycleConfigName
        ["InstanceType"] = if (InstanceType == null) null else InstanceType
        ["AdditionalCodeRepositories"] = if (AdditionalCodeRepositories == null) null else AdditionalCodeRepositories
        ["DirectInternetAccess"] = if (DirectInternetAccess == null) null else DirectInternetAccess
        ["PlatformIdentifier"] = if (PlatformIdentifier == null) null else PlatformIdentifier
        ["SecurityGroupIds"] = if (SecurityGroupIds == null) null else SecurityGroupIds
        ["NotebookInstanceName"] = if (NotebookInstanceName == null) null else NotebookInstanceName
        ["DefaultCodeRepository"] = if (DefaultCodeRepository == null) null else DefaultCodeRepository
        ["AcceleratorTypes"] = if (AcceleratorTypes == null) null else AcceleratorTypes
        ["RoleArn"] = if (RoleArn == null) null else RoleArn
        ["InstanceMetadataServiceConfiguration"] = if (InstanceMetadataServiceConfiguration == null) null else InstanceMetadataServiceConfiguration
        ["Tags"] = if (Tags == null) null else Tags
        ["VolumeSizeInGB"] = if (VolumeSizeInGB == null) null else VolumeSizeInGB
        ["RootAccess"] = if (RootAccess == null) null else RootAccess
    }

}
