/// AWS::SageMaker::UserProfile
///
/// Generated by rain build --pkl-class AWS::SageMaker::UserProfile
module aws.sagemaker.userprofile

import "../../cloudformation.pkl"

/// 
open class CodeRepository {
    RepositoryUrl: String(matches(Regex(#"^https://([.\-_a-zA-Z0-9]+/?){3,1016}$"#)))|Mapping
}

typealias UserSettingsStudioWebPortal = "ENABLED"|"DISABLED"

/// A collection of settings that apply to users of Amazon SageMaker Studio. These settings are specified when the CreateUserProfile API is called, and as DefaultUserSettings when the CreateDomain API is called.
open class UserSettings {
    SecurityGroups: (Listing<String|Mapping>)?
    JupyterServerAppSettings: (JupyterServerAppSettings)?
    KernelGatewayAppSettings: (KernelGatewayAppSettings)?
    RStudioServerProAppSettings: (RStudioServerProAppSettings)?
    SpaceStorageSettings: (DefaultSpaceStorageSettings)?
    DefaultLandingUri: (String|Mapping)?
    StudioWebPortal: (UserSettingsStudioWebPortal|Mapping)?
    CustomPosixUserConfig: (CustomPosixUserConfig)?
    ExecutionRole: (String(matches(Regex(#"^arn:aws[a-z\-]*:iam::\d{12}:role/?[a-zA-Z_0-9+=,.@\-_/]+$"#)))|Mapping)?
    CodeEditorAppSettings: (CodeEditorAppSettings)?
    SharingSettings: (SharingSettings)?
    JupyterLabAppSettings: (JupyterLabAppSettings)?
    CustomFileSystemConfigs: (Listing<CustomFileSystemConfig>)?
}

/// The kernel gateway app settings.
open class KernelGatewayAppSettings {
    DefaultResourceSpec: (ResourceSpec)?
    CustomImages: (Listing<CustomImage>)?
}

/// 
open class SpaceEbsVolumeSizeInGb {
}

typealias RStudioServerProAppSettingsAccessStatus = "ENABLED"|"DISABLED"

typealias RStudioServerProAppSettingsUserGroup = "R_STUDIO_ADMIN"|"R_STUDIO_USER"

/// A collection of settings that configure user interaction with the RStudioServerPro app.
open class RStudioServerProAppSettings {
    AccessStatus: (RStudioServerProAppSettingsAccessStatus|Mapping)?
    UserGroup: (RStudioServerProAppSettingsUserGroup|Mapping)?
}

/// 
open class CustomFileSystemConfig {
    EFSFileSystemConfig: (EFSFileSystemConfig)?
}

/// The JupyterServer app settings.
open class JupyterServerAppSettings {
    DefaultResourceSpec: (ResourceSpec)?
}

typealias ResourceSpecInstanceType = "system"|"ml.t3.micro"|"ml.t3.small"|"ml.t3.medium"|"ml.t3.large"|"ml.t3.xlarge"|"ml.t3.2xlarge"|"ml.m5.large"|"ml.m5.xlarge"|"ml.m5.2xlarge"|"ml.m5.4xlarge"|"ml.m5.8xlarge"|"ml.m5.12xlarge"|"ml.m5.16xlarge"|"ml.m5.24xlarge"|"ml.c5.large"|"ml.c5.xlarge"|"ml.c5.2xlarge"|"ml.c5.4xlarge"|"ml.c5.9xlarge"|"ml.c5.12xlarge"|"ml.c5.18xlarge"|"ml.c5.24xlarge"|"ml.p3.2xlarge"|"ml.p3.8xlarge"|"ml.p3.16xlarge"|"ml.g4dn.xlarge"|"ml.g4dn.2xlarge"|"ml.g4dn.4xlarge"|"ml.g4dn.8xlarge"|"ml.g4dn.12xlarge"|"ml.g4dn.16xlarge"|"ml.r5.large"|"ml.r5.xlarge"|"ml.r5.2xlarge"|"ml.r5.4xlarge"|"ml.r5.8xlarge"|"ml.r5.12xlarge"|"ml.r5.16xlarge"|"ml.r5.24xlarge"|"ml.p3dn.24xlarge"|"ml.m5d.large"|"ml.m5d.xlarge"|"ml.m5d.2xlarge"|"ml.m5d.4xlarge"|"ml.m5d.8xlarge"|"ml.m5d.12xlarge"|"ml.m5d.16xlarge"|"ml.m5d.24xlarge"|"ml.g5.xlarge"|"ml.g5.2xlarge"|"ml.g5.4xlarge"|"ml.g5.8xlarge"|"ml.g5.12xlarge"|"ml.g5.16xlarge"|"ml.g5.24xlarge"|"ml.g5.48xlarge"|"ml.p4d.24xlarge"|"ml.p4de.24xlarge"|"ml.geospatial.interactive"|"ml.trn1.2xlarge"|"ml.trn1.32xlarge"|"ml.trn1n.32xlarge"

/// 
open class ResourceSpec {
    InstanceType: (ResourceSpecInstanceType|Mapping)?
    SageMakerImageArn: (String(matches(Regex(#"^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image/[a-z0-9]([-.]?[a-z0-9])*$"#)))|Mapping)?
    SageMakerImageVersionArn: (String(matches(Regex(#"^arn:aws(-[\w]+)*:sagemaker:.+:[0-9]{12}:image-version/[a-z0-9]([-.]?[a-z0-9])*/[0-9]+$"#)))|Mapping)?
}

/// The JupyterLab app settings.
open class JupyterLabAppSettings {
    DefaultResourceSpec: (ResourceSpec)?
    LifecycleConfigArns: (Listing<StudioLifecycleConfigArn>)?
    CodeRepositories: (Listing<CodeRepository>)?
    CustomImages: (Listing<CustomImage>)?
}

/// Default storage settings for a space.
open class DefaultSpaceStorageSettings {
    DefaultEbsStorageSettings: (DefaultEbsStorageSettings)?
}

/// Properties related to the Amazon Elastic Block Store volume.
open class DefaultEbsStorageSettings {
    DefaultEbsVolumeSizeInGb: SpaceEbsVolumeSizeInGb
    MaximumEbsVolumeSizeInGb: SpaceEbsVolumeSizeInGb
}

/// The Amazon Resource Name (ARN) of the Lifecycle Configuration to attach to the Resource.
open class StudioLifecycleConfigArn {
}

/// 
open class CustomPosixUserConfig {
    Uid: Int|Mapping
    Gid: Int|Mapping
}

/// 
open class EFSFileSystemConfig {
    FileSystemPath: (String(matches(Regex(#"^\/\S*$"#)))|Mapping)?
    FileSystemId: String(matches(Regex(#"^(fs-[0-9a-f]{8,})$"#)))|Mapping
}

/// A custom SageMaker image.
open class CustomImage {
    ImageVersionNumber: (Int|Mapping)?
    AppImageConfigName: String(matches(Regex(#"^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,62}"#)))|Mapping
    ImageName: String(matches(Regex(#"^[a-zA-Z0-9]([-.]?[a-zA-Z0-9]){0,62}$"#)))|Mapping
}

typealias SharingSettingsNotebookOutputOption = "Allowed"|"Disabled"

/// Specifies options when sharing an Amazon SageMaker Studio notebook. These settings are specified as part of DefaultUserSettings when the CreateDomain API is called, and as part of UserSettings when the CreateUserProfile API is called.
open class SharingSettings {
    NotebookOutputOption: (SharingSettingsNotebookOutputOption|Mapping)?
    S3KmsKeyId: (String(matches(Regex(#".*"#)))|Mapping)?
    S3OutputPath: (String(matches(Regex(#"^(https|s3)://([^/]+)/?(.*)$"#)))|Mapping)?
}

/// The CodeEditor app settings.
open class CodeEditorAppSettings {
    DefaultResourceSpec: (ResourceSpec)?
    LifecycleConfigArns: (Listing<StudioLifecycleConfigArn>)?
}

/// 
open class Tag {
    Value: String|Mapping
    Key: String|Mapping
}

/// Resource Type definition for AWS::SageMaker::UserProfile
open class UserProfile extends cloudformation.Resource {

    Type = "AWS::SageMaker::UserProfile"


    /// The ID of the associated Domain.
    hidden DomainId: String|Mapping

    /// A specifier for the type of value specified in SingleSignOnUserValue. Currently, the only supported value is "UserName". If the Domain's AuthMode is SSO, this field is required. If the Domain's AuthMode is not SSO, this field cannot be specified.
    hidden SingleSignOnUserIdentifier: (String(matches(Regex(#"UserName"#)))|Mapping)?

    /// The username of the associated AWS Single Sign-On User for this UserProfile. If the Domain's AuthMode is SSO, this field is required, and must match a valid username of a user in your directory. If the Domain's AuthMode is not SSO, this field cannot be specified.
    hidden SingleSignOnUserValue: (String|Mapping)?

    /// A name for the UserProfile.
    hidden UserProfileName: String|Mapping

    /// A collection of settings.
    hidden UserSettings: (UserSettings)?

    /// A list of tags to apply to the user profile.
    hidden Tags: (Listing<Tag>)?

    Properties {
        ["DomainId"] = if (DomainId == null) null else DomainId
        ["SingleSignOnUserIdentifier"] = if (SingleSignOnUserIdentifier == null) null else SingleSignOnUserIdentifier
        ["SingleSignOnUserValue"] = if (SingleSignOnUserValue == null) null else SingleSignOnUserValue
        ["UserProfileName"] = if (UserProfileName == null) null else UserProfileName
        ["UserSettings"] = if (UserSettings == null) null else UserSettings
        ["Tags"] = if (Tags == null) null else Tags
    }

}
