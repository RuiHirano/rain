/// AWS::SecurityHub::AutomationRule
///
/// Generated by rain build --pkl-class AWS::SecurityHub::AutomationRule
module aws.securityhub.automationrule

import "../../cloudformation.pkl"

typealias MapFilterComparison = "EQUALS"|"NOT_EQUALS"|"CONTAINS"|"NOT_CONTAINS"

/// 
open class MapFilter {
    Key: String|Mapping
    Value: String|Mapping
    Comparison: MapFilterComparison|Mapping
}

/// An object of user-defined name and value string pair added to a finding.
open class map {
}

/// 
open class NoteUpdate {
    Text: String|Mapping
    UpdatedBy: arnOrId
}

typealias WorkflowUpdateStatus = "NEW"|"NOTIFIED"|"RESOLVED"|"SUPPRESSED"

/// 
open class WorkflowUpdate {
    Status: WorkflowUpdateStatus|Mapping
}

/// A key-value pair to associate with a resource.
open class Tags {
}

/// 
open class NonEmptyString {
}

/// 
open class NumberFilter {
    Eq: (Number|Mapping)?
    Gte: (Number|Mapping)?
    Lte: (Number|Mapping)?
}

/// The condition to apply to a string value when filtering Security Hub findings.
open class StringFilterComparison {
}

/// The date and time, in UTC and ISO 8601 format.
open class ISO8601DateString {
}

/// The Amazon Resource Name (ARN) of the automation rule.
open class arn {
}

typealias DateRangeUnit = "DAYS"

/// 
open class DateRange {
    Value: Number|Mapping
    Unit: DateRangeUnit|Mapping
}

/// The Amazon Resource Name (ARN) or Id of the automation rule.
open class arnOrId {
}

/// 
open class timestamp {
}

typealias SeverityUpdateLabel = "INFORMATIONAL"|"LOW"|"MEDIUM"|"HIGH"|"CRITICAL"

/// 
open class SeverityUpdate {
    Product: (Number|Mapping)?
    Label: (SeverityUpdateLabel|Mapping)?
    Normalized: (int100)?
}

typealias AutomationRulesFindingFieldsUpdateVerificationState = "UNKNOWN"|"TRUE_POSITIVE"|"FALSE_POSITIVE"|"BENIGN_POSITIVE"

/// The rule action will update the ``Note`` field of a finding.
open class AutomationRulesFindingFieldsUpdate {
    Workflow: (Dynamic)?
    Severity: (Dynamic)?
    UserDefinedFields: (map)?
    RelatedFindings: (Listing<RelatedFinding>)?
    Note: (Dynamic)?
    Types: (Listing<String|Mapping>)?
    Confidence: (int100)?
    Criticality: (int100)?
    VerificationState: (AutomationRulesFindingFieldsUpdateVerificationState|Mapping)?
}

/// 
open class DateFilter {
    DateRange: (DateRange)?
    End: (ISO8601DateString)?
    Start: (ISO8601DateString)?
}

/// 
open class BooleanFilter {
    Value: Boolean|Mapping
}

/// 
open class StringFilter {
    Comparison: StringFilterComparison
    Value: String|Mapping
}

/// Integer from 0 to 100.
open class int100 {
}

/// Provides details about a list of findings that the current finding relates to.
open class RelatedFinding {
    ProductArn: arn
    Id: arnOrId
}

typealias AutomationRulesActionType = "FINDING_FIELDS_UPDATE"

/// 
open class AutomationRulesAction {
    Type: AutomationRulesActionType|Mapping
    FindingFieldsUpdate: AutomationRulesFindingFieldsUpdate
}

/// 
open class AutomationRulesFindingFilters {
    ProductArn: (Listing<StringFilter>)?
    SeverityLabel: (Listing<StringFilter>)?
    AwsAccountId: (Listing<StringFilter>)?
    ComplianceSecurityControlId: (Listing<StringFilter>)?
    WorkflowStatus: (Listing<StringFilter>)?
    Criticality: (Listing<NumberFilter>)?
    ResourceType: (Listing<StringFilter>)?
    ResourceTags: (Listing<MapFilter>)?
    Confidence: (Listing<NumberFilter>)?
    NoteText: (Listing<StringFilter>)?
    Type: (Listing<StringFilter>)?
    CreatedAt: (Listing<DateFilter>)?
    UpdatedAt: (Listing<DateFilter>)?
    SourceUrl: (Listing<StringFilter>)?
    ResourceDetailsOther: (Listing<MapFilter>)?
    VerificationState: (Listing<StringFilter>)?
    RecordState: (Listing<StringFilter>)?
    FirstObservedAt: (Listing<DateFilter>)?
    LastObservedAt: (Listing<DateFilter>)?
    Description: (Listing<StringFilter>)?
    ResourceRegion: (Listing<StringFilter>)?
    NoteUpdatedAt: (Listing<DateFilter>)?
    UserDefinedFields: (Listing<MapFilter>)?
    GeneratorId: (Listing<StringFilter>)?
    CompanyName: (Listing<StringFilter>)?
    ResourcePartition: (Listing<StringFilter>)?
    ProductName: (Listing<StringFilter>)?
    ResourceId: (Listing<StringFilter>)?
    ComplianceAssociatedStandardsId: (Listing<StringFilter>)?
    RelatedFindingsProductArn: (Listing<StringFilter>)?
    RelatedFindingsId: (Listing<StringFilter>)?
    NoteUpdatedBy: (Listing<StringFilter>)?
    Id: (Listing<StringFilter>)?
    Title: (Listing<StringFilter>)?
    ComplianceStatus: (Listing<StringFilter>)?
}

/// The ``AWS::SecurityHub::AutomationRule`` resource specifies an automation rule based on input parameters. For more information, see [Automation rules](https://docs.aws.amazon.com/securityhub/latest/userguide/automation-rules.html) in the *User Guide*.
open class AutomationRule extends cloudformation.Resource {

    Type = "AWS::SecurityHub::AutomationRule"


    /// 
    hidden Tags: (Tags)?

    /// 
    hidden Description: (String|Mapping)?

    /// 
    hidden Actions: (Listing<AutomationRulesAction>)?

    /// A set of [Security Finding Format (ASFF)](https://docs.aws.amazon.com/securityhub/latest/userguide/securityhub-findings-format.html) finding field attributes and corresponding expected values that ASH uses to filter findings. If a rule is enabled and a finding matches the criteria specified in this parameter, ASH applies the rule action to the finding.
    hidden Criteria: (AutomationRulesFindingFilters)?

    /// 
    hidden RuleName: (String|Mapping)?

    /// 
    hidden IsTerminal: (Boolean|Mapping)?

    /// Whether the rule is active after it is created. If this parameter is equal to ``ENABLED``, ASH applies the rule to findings and finding updates after the rule is created.
    hidden RuleStatus: (AutomationRuleRuleStatus|Mapping)?

    /// 
    hidden RuleOrder: (Int|Mapping)?

    Properties {
        ["Tags"] = if (Tags == null) null else Tags
        ["Description"] = if (Description == null) null else Description
        ["Actions"] = if (Actions == null) null else Actions
        ["Criteria"] = if (Criteria == null) null else Criteria
        ["RuleName"] = if (RuleName == null) null else RuleName
        ["IsTerminal"] = if (IsTerminal == null) null else IsTerminal
        ["RuleStatus"] = if (RuleStatus == null) null else RuleStatus
        ["RuleOrder"] = if (RuleOrder == null) null else RuleOrder
    }

}


typealias AutomationRuleRuleStatus = "ENABLED"|"DISABLED"
