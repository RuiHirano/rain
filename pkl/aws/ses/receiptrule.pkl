/// AWS::SES::ReceiptRule
///
/// Generated by rain build --pkl-class AWS::SES::ReceiptRule
module aws.ses.receiptrule

import "../../cloudformation.pkl"

/// 
open class ReceiptRuleLambdaAction {
    FunctionArn: String|Mapping
    TopicArn: (String|Mapping)?
    InvocationType: (String|Mapping)?
}

/// 
open class ReceiptRuleRule {
    Recipients: (Listing<String|Mapping>)?
    Actions: (Listing<ReceiptRuleAction>)?
    Enabled: (Boolean|Mapping)?
    Name: (String|Mapping)?
    TlsPolicy: (String|Mapping)?
    ScanEnabled: (Boolean|Mapping)?
}

/// 
open class ReceiptRuleAction {
    BounceAction: (ReceiptRuleBounceAction)?
    S3Action: (ReceiptRuleS3Action)?
    StopAction: (ReceiptRuleStopAction)?
    SNSAction: (ReceiptRuleSNSAction)?
    WorkmailAction: (ReceiptRuleWorkmailAction)?
    AddHeaderAction: (ReceiptRuleAddHeaderAction)?
    LambdaAction: (ReceiptRuleLambdaAction)?
}

/// 
open class ReceiptRuleStopAction {
    Scope: String|Mapping
    TopicArn: (String|Mapping)?
}

/// 
open class ReceiptRuleS3Action {
    KmsKeyArn: (String|Mapping)?
    TopicArn: (String|Mapping)?
    ObjectKeyPrefix: (String|Mapping)?
    BucketName: String|Mapping
}

/// 
open class ReceiptRuleSNSAction {
    TopicArn: (String|Mapping)?
    Encoding: (String|Mapping)?
}

/// 
open class ReceiptRuleWorkmailAction {
    TopicArn: (String|Mapping)?
    OrganizationArn: String|Mapping
}

/// 
open class ReceiptRuleAddHeaderAction {
    HeaderValue: String|Mapping
    HeaderName: String|Mapping
}

/// 
open class ReceiptRuleBounceAction {
    Sender: String|Mapping
    SmtpReplyCode: String|Mapping
    Message: String|Mapping
    TopicArn: (String|Mapping)?
    StatusCode: (String|Mapping)?
}

/// Resource Type definition for AWS::SES::ReceiptRule
open class ReceiptRule extends cloudformation.Resource {

    Type = "AWS::SES::ReceiptRule"


    /// 
    hidden After: (String|Mapping)?

    /// 
    hidden Rule: ReceiptRuleRule

    /// 
    hidden RuleSetName: String|Mapping

    Properties {
        ["After"] = if (After == null) null else After
        ["Rule"] = if (Rule == null) null else Rule
        ["RuleSetName"] = if (RuleSetName == null) null else RuleSetName
    }

}
