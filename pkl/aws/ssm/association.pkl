/// AWS::SSM::Association
///
/// Generated by rain build --pkl-class AWS::SSM::Association
module aws.ssm.association

import "../../cloudformation.pkl"

typealias AssociationParameterValues = Listing<(String|Mapping)?>


typealias AssociationS3Region = String|Mapping


typealias AssociationS3BucketName = String|Mapping


typealias AssociationS3KeyPrefix = String|Mapping


/// 
open class AssociationS3OutputLocation {
    OutputS3Region: (AssociationS3Region)?
    OutputS3BucketName: (AssociationS3BucketName)?
    OutputS3KeyPrefix: (AssociationS3KeyPrefix)?
}

/// 
open class AssociationInstanceAssociationOutputLocation {
    S3Location: (AssociationS3OutputLocation)?
}

/// 
open class AssociationTarget {
    Key: String(matches(Regex(#"^[\p{L}\p{Z}\p{N}_.:/=+\-@]{1,128}$|resource-groups:Name"#)))|Mapping
    Values: Listing<String|Mapping>
}

/// The AWS::SSM::Association resource associates an SSM document in AWS Systems Manager with EC2 instances that contain a configuration agent to process the document.
open class Association extends cloudformation.Resource {

    Type = "AWS::SSM::Association"


    /// 
    hidden WaitForSuccessTimeoutSeconds: (Int|Mapping)?

    /// The ID of the instance that the SSM document is associated with.
    hidden InstanceId: (String(matches(Regex(#"(^i-(\w{8}|\w{17})$)|(^mi-\w{17}$)"#)))|Mapping)?

    /// The name of the SSM document.
    hidden Name: String(matches(Regex(#"^[a-zA-Z0-9_\-.:/]{3,200}$"#)))|Mapping

    /// A Cron or Rate expression that specifies when the association is applied to the target.
    hidden ScheduleExpression: (String|Mapping)?

    /// 
    hidden SyncCompliance: (AssociationSyncCompliance|Mapping)?

    /// The name of the association.
    hidden AssociationName: (String(matches(Regex(#"^[a-zA-Z0-9_\-.]{3,128}$"#)))|Mapping)?

    /// The version of the SSM document to associate with the target.
    hidden DocumentVersion: (String(matches(Regex(#"([$]LATEST|[$]DEFAULT|^[1-9][0-9]*$)"#)))|Mapping)?

    /// 
    hidden ComplianceSeverity: (AssociationComplianceSeverity|Mapping)?

    /// 
    hidden ApplyOnlyAtCronInterval: (Boolean|Mapping)?

    /// 
    hidden ScheduleOffset: (Int|Mapping)?

    /// The targets that the SSM document sends commands to.
    hidden Targets: (Listing<AssociationTarget>)?

    /// 
    hidden AutomationTargetParameterName: (String|Mapping)?

    /// 
    hidden MaxConcurrency: (String(matches(Regex(#"^([1-9][0-9]{0,6}|[1-9][0-9]%|[1-9]%|100%)$"#)))|Mapping)?

    /// 
    hidden CalendarNames: (Listing<String|Mapping>)?

    /// Parameter values that the SSM document uses at runtime.
    hidden Parameters: (AssociationAssociationParameters)?

    /// 
    hidden OutputLocation: (AssociationInstanceAssociationOutputLocation)?

    /// 
    hidden MaxErrors: (String(matches(Regex(#"^([1-9][0-9]{0,6}|[0]|[1-9][0-9]%|[0-9]%|100%)$"#)))|Mapping)?

    Properties {
        ["WaitForSuccessTimeoutSeconds"] = if (WaitForSuccessTimeoutSeconds == null) null else WaitForSuccessTimeoutSeconds
        ["InstanceId"] = if (InstanceId == null) null else InstanceId
        ["Name"] = if (Name == null) null else Name
        ["ScheduleExpression"] = if (ScheduleExpression == null) null else ScheduleExpression
        ["SyncCompliance"] = if (SyncCompliance == null) null else SyncCompliance
        ["AssociationName"] = if (AssociationName == null) null else AssociationName
        ["DocumentVersion"] = if (DocumentVersion == null) null else DocumentVersion
        ["ComplianceSeverity"] = if (ComplianceSeverity == null) null else ComplianceSeverity
        ["ApplyOnlyAtCronInterval"] = if (ApplyOnlyAtCronInterval == null) null else ApplyOnlyAtCronInterval
        ["ScheduleOffset"] = if (ScheduleOffset == null) null else ScheduleOffset
        ["Targets"] = if (Targets == null) null else Targets
        ["AutomationTargetParameterName"] = if (AutomationTargetParameterName == null) null else AutomationTargetParameterName
        ["MaxConcurrency"] = if (MaxConcurrency == null) null else MaxConcurrency
        ["CalendarNames"] = if (CalendarNames == null) null else CalendarNames
        ["Parameters"] = if (Parameters == null) null else Parameters
        ["OutputLocation"] = if (OutputLocation == null) null else OutputLocation
        ["MaxErrors"] = if (MaxErrors == null) null else MaxErrors
    }

}


typealias AssociationSyncCompliance = "AUTO"|"MANUAL"

typealias AssociationComplianceSeverity = "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"UNSPECIFIED"

typealias AssociationAssociationParameters = Mapping<String, Any>
