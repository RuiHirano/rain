/// AWS::SSM::PatchBaseline
///
/// Generated by rain build --pkl-class AWS::SSM::PatchBaseline
module aws.ssm.patchbaseline

import "../../cloudformation.pkl"

typealias PatchFilterKey = "ADVISORY_ID"|"ARCH"|"BUGZILLA_ID"|"CLASSIFICATION"|"CVE_ID"|"EPOCH"|"MSRC_SEVERITY"|"NAME"|"PATCH_ID"|"PATCH_SET"|"PRIORITY"|"PRODUCT"|"PRODUCT_FAMILY"|"RELEASE"|"REPOSITORY"|"SECTION"|"SECURITY"|"SEVERITY"|"VERSION"

/// Defines which patches should be included in a patch baseline.
open class PatchBaselinePatchFilter {
    Values: (Listing<String|Mapping>)?
    Key: (PatchFilterKey|Mapping)?
}

/// The patch filter group that defines the criteria for the rule.
open class PatchBaselinePatchFilterGroup {
    PatchFilters: (Listing<PatchBaselinePatchFilter>)?
}

/// Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
open class PatchBaselinePatchSource {
    Products: (Listing<String|Mapping>)?
    Configuration: (String|Mapping)?
    Name: (String(matches(Regex(#"^[a-zA-Z0-9_\-.]{3,50}$"#)))|Mapping)?
}

/// Metadata that you assign to your AWS resources.
open class PatchBaselineTag {
    Key: String|Mapping
    Value: String|Mapping
}

/// A set of rules defining the approval rules for a patch baseline.
open class PatchBaselineRuleGroup {
    PatchRules: (Listing<PatchBaselineRule>)?
}

typealias RuleComplianceLevel = "CRITICAL"|"HIGH"|"INFORMATIONAL"|"LOW"|"MEDIUM"|"UNSPECIFIED"

/// Defines an approval rule for a patch baseline.
open class PatchBaselineRule {
    ComplianceLevel: (RuleComplianceLevel|Mapping)?
    ApproveUntilDate: (String|Mapping)?
    EnableNonSecurity: (Boolean|Mapping)?
    PatchFilterGroup: (PatchBaselinePatchFilterGroup)?
    ApproveAfterDays: (Int|Mapping)?
}

/// Resource Type definition for AWS::SSM::PatchBaseline
open class PatchBaseline extends cloudformation.Resource {

    Type = "AWS::SSM::PatchBaseline"


    /// The description of the patch baseline.
    hidden Description: (String|Mapping)?

    /// 
    hidden ApprovalRules: (PatchBaselineRuleGroup)?

    /// Optional metadata that you assign to a resource. Tags enable you to categorize a resource in different ways.
    hidden Tags: (Listing<PatchBaselineTag>)?

    /// Defines the operating system the patch baseline applies to. The Default value is WINDOWS.
    hidden OperatingSystem: (PatchBaselineOperatingSystem|Mapping)?

    /// The name of the patch baseline.
    hidden Name: String(matches(Regex(#"^[a-zA-Z0-9_\-.]{3,128}$"#)))|Mapping

    /// A list of explicitly approved patches for the baseline.
    hidden ApprovedPatches: (Listing<String|Mapping>)?

    /// PatchGroups is used to associate instances with a specific patch baseline
    hidden PatchGroups: (Listing<String|Mapping>)?

    /// Indicates whether the list of approved patches includes non-security updates that should be applied to the instances. The default value is 'false'. Applies to Linux instances only.
    hidden ApprovedPatchesEnableNonSecurity: (Boolean|Mapping)?

    /// A set of global filters used to include patches in the baseline.
    hidden GlobalFilters: (PatchBaselinePatchFilterGroup)?

    /// Set the baseline as default baseline. Only registering to default patch baseline is allowed.
    hidden DefaultBaseline: (Boolean|Mapping)?

    /// Information about the patches to use to update the instances, including target operating systems and source repository. Applies to Linux instances only.
    hidden Sources: (Listing<PatchBaselinePatchSource>)?

    /// A list of explicitly rejected patches for the baseline.
    hidden RejectedPatches: (Listing<String|Mapping>)?

    /// The action for Patch Manager to take on patches included in the RejectedPackages list.
    hidden RejectedPatchesAction: (PatchBaselineRejectedPatchesAction|Mapping)?

    /// Defines the compliance level for approved patches. This means that if an approved patch is reported as missing, this is the severity of the compliance violation. The default value is UNSPECIFIED.
    hidden ApprovedPatchesComplianceLevel: (PatchBaselineApprovedPatchesComplianceLevel|Mapping)?

    Properties {
        ["Description"] = if (Description == null) null else Description
        ["ApprovalRules"] = if (ApprovalRules == null) null else ApprovalRules
        ["Tags"] = if (Tags == null) null else Tags
        ["OperatingSystem"] = if (OperatingSystem == null) null else OperatingSystem
        ["Name"] = if (Name == null) null else Name
        ["ApprovedPatches"] = if (ApprovedPatches == null) null else ApprovedPatches
        ["PatchGroups"] = if (PatchGroups == null) null else PatchGroups
        ["ApprovedPatchesEnableNonSecurity"] = if (ApprovedPatchesEnableNonSecurity == null) null else ApprovedPatchesEnableNonSecurity
        ["GlobalFilters"] = if (GlobalFilters == null) null else GlobalFilters
        ["DefaultBaseline"] = if (DefaultBaseline == null) null else DefaultBaseline
        ["Sources"] = if (Sources == null) null else Sources
        ["RejectedPatches"] = if (RejectedPatches == null) null else RejectedPatches
        ["RejectedPatchesAction"] = if (RejectedPatchesAction == null) null else RejectedPatchesAction
        ["ApprovedPatchesComplianceLevel"] = if (ApprovedPatchesComplianceLevel == null) null else ApprovedPatchesComplianceLevel
    }

}


typealias PatchBaselineOperatingSystem = "WINDOWS"|"AMAZON_LINUX"|"AMAZON_LINUX_2"|"AMAZON_LINUX_2022"|"AMAZON_LINUX_2023"|"UBUNTU"|"REDHAT_ENTERPRISE_LINUX"|"SUSE"|"CENTOS"|"ORACLE_LINUX"|"DEBIAN"|"MACOS"|"RASPBIAN"|"ROCKY_LINUX"|"ALMA_LINUX"

typealias PatchBaselineRejectedPatchesAction = "ALLOW_AS_DEPENDENCY"|"BLOCK"

typealias PatchBaselineApprovedPatchesComplianceLevel = "CRITICAL"|"HIGH"|"MEDIUM"|"LOW"|"INFORMATIONAL"|"UNSPECIFIED"
