/// AWS::Timestream::ScheduledQuery
///
/// Generated by rain build --pkl-class AWS::Timestream::ScheduledQuery
module aws.timestream.scheduledquery

import "../../cloudformation.pkl"

/// Configuration for error reporting. Error reports will be generated when a problem is encountered when writing the query results.
open class ErrorReportConfiguration {
    S3Configuration: S3Configuration
}

/// Type for the dimension.
open class DimensionValueType {
}

/// This field refers to the source column from which the measure value is to be read for result materialization.
open class MixedMeasureMappingSourceColumn {
}

/// Name of the S3 bucket under which error reports will be created.
open class BucketName {
}

/// Configuration of target store where scheduled query results are written to.
open class TargetConfiguration {
    TimestreamConfiguration: TimestreamConfiguration
}

/// The Amazon KMS key used to encrypt the scheduled query resource, at-rest. If the Amazon KMS key is not specified, the scheduled query resource will be encrypted with a Timestream owned Amazon KMS key. To specify a KMS key, use the key ID, key ARN, alias name, or alias ARN. When using an alias name, prefix the name with alias/. If ErrorReportConfiguration uses SSE_KMS as encryption type, the same KmsKeyId is used to encrypt the error report at rest.
open class KmsKeyId {
}

/// SNS configuration for notification upon scheduled query execution.
open class SnsConfiguration {
    TopicArn: TopicArn
}

/// Configuration needed to write data into the Timestream database and table.
open class TimestreamConfiguration {
    MultiMeasureMappings: (MultiMeasureMappings)?
    MixedMeasureMappings: (MixedMeasureMappings)?
    MeasureNameColumn: (MeasureNameColumn)?
    DatabaseName: DatabaseName
    TableName: TableName
    TimeColumn: TimeColumn
    DimensionMappings: DimensionMappings
}

/// Name of Timestream database to which the query result will be written.
open class DatabaseName {
}

/// The value for the tag. You can specify a value that is 0 to 256 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
open class Value {
}

/// Using a ClientToken makes the call to CreateScheduledQuery idempotent, in other words, making the same request repeatedly will produce the same result. Making multiple identical CreateScheduledQuery requests has the same effect as making a single request. If CreateScheduledQuery is called without a ClientToken, the Query SDK generates a ClientToken on your behalf. After 8 hours, any request with the same ClientToken is treated as a new request.
open class ClientToken {
}

/// A list of key-value pairs to label the scheduled query.
open class Tags {
}

/// SNS topic ARN that the scheduled query status notifications will be sent to.
open class TopicArn {
}

/// Column name from query result.
open class DimensionMappingName {
}

/// Required. Attribute mappings to be used for mapping query results to ingest data for multi-measure attributes.
open class MultiMeasureAttributeMappingList {
}

/// An expression that denotes when to trigger the scheduled query run. This can be a cron expression or a rate expression.
open class ScheduleExpression {
}

/// Column from query result that should be used as the time column in destination table. Column type for this should be TIMESTAMP.
open class TimeColumn {
}

/// This is to allow mapping column(s) from the query result to the dimension in the destination table.
open class DimensionMappings {
}

/// Only one of MixedMeasureMappings or MultiMeasureMappings is to be provided. MultiMeasureMappings can be used to ingest data as multi measures in the derived table.
open class MultiMeasureMappings {
    TargetMultiMeasureName: (TargetMultiMeasureName)?
    MultiMeasureAttributeMappings: MultiMeasureAttributeMappingList
}

/// Specifies how to map measures to multi-measure records.
open class MixedMeasureMappings {
}

/// Encryption at rest options for the error reports. If no encryption option is specified, Timestream will choose SSE_S3 as default.
open class EncryptionOption {
}

/// An attribute mapping to be used for mapping query results to ingest data for multi-measure attributes.
open class MultiMeasureAttributeMapping {
    TargetMultiMeasureAttributeName: (TargetMultiMeasureAttributeName)?
    SourceColumn: MultiMeasureAttributeMappingSourceColumn
    MeasureValueType: MultiMeasureAttributeMappingMeasureValueType
}

/// Refers to the value of the measure name in a result row. This field is required if MeasureNameColumn is provided.
open class MixedMeasureMappingMeasureName {
}

/// Type of the value that is to be read from SourceColumn. If the mapping is for MULTI, use MeasureValueType.MULTI.
open class MixedMeasureMappingMeasureValueType {
}

/// Name of the measure name column from the query result.
open class MeasureNameColumn {
}

/// Prefix for error report keys.
open class ObjectKeyPrefix {
}

/// Details on S3 location for error reports that result from running a query.
open class S3Configuration {
    BucketName: BucketName
    ObjectKeyPrefix: (ObjectKeyPrefix)?
    EncryptionOption: (EncryptionOption)?
}

/// The name of the scheduled query. Scheduled query names must be unique within each Region.
open class ScheduledQueryName {
}

/// Name of Timestream table that the query result will be written to. The table should be within the same database that is provided in Timestream configuration.
open class TableName {
}

/// Custom name to be used for attribute name in derived table. If not provided, source column name would be used.
open class TargetMultiMeasureAttributeName {
}

/// MixedMeasureMappings are mappings that can be used to ingest data into a mixture of narrow and multi measures in the derived table.
open class MixedMeasureMapping {
    MeasureName: (MixedMeasureMappingMeasureName)?
    SourceColumn: (MixedMeasureMappingSourceColumn)?
    TargetMeasureName: (MixedMeasureMappingTargetMeasureName)?
    MeasureValueType: MixedMeasureMappingMeasureValueType
    MultiMeasureAttributeMappings: (MultiMeasureAttributeMappingList)?
}

/// Target measure name to be used. If not provided, the target measure name by default would be MeasureName if provided, or SourceColumn otherwise.
open class MixedMeasureMappingTargetMeasureName {
}

/// Name of the target multi-measure in the derived table. Required if MeasureNameColumn is not provided. If MeasureNameColumn is provided then the value from that column will be used as the multi-measure name.
open class TargetMultiMeasureName {
}

/// Source measure value column in the query result where the attribute value is to be read.
open class MultiMeasureAttributeMappingSourceColumn {
}

/// The key name of the tag. You can specify a value that is 1 to 128 Unicode characters in length and cannot be prefixed with aws:. You can use any of the following characters: the set of Unicode letters, digits, whitespace, _, ., /, =, +, and -.
open class Key {
}

/// Amazon Resource Name of the scheduled query that is generated upon creation.
open class Arn {
}

/// The query string to run. Parameter names can be specified in the query string @ character followed by an identifier. The named Parameter @scheduled_runtime is reserved and can be used in the query to get the time at which the query is scheduled to run. The timestamp calculated according to the ScheduleConfiguration parameter, will be the value of @scheduled_runtime paramater for each query run. For example, consider an instance of a scheduled query executing on 2021-12-01 00:00:00. For this instance, the @scheduled_runtime parameter is initialized to the timestamp 2021-12-01 00:00:00 when invoking the query.
open class QueryString {
}

/// Notification configuration for the scheduled query. A notification is sent by Timestream when a query run finishes, when the state is updated or when you delete it.
open class NotificationConfiguration {
    SnsConfiguration: SnsConfiguration
}

/// The ARN for the IAM role that Timestream will assume when running the scheduled query.
open class ScheduledQueryExecutionRoleArn {
}

/// This type is used to map column(s) from the query result to a dimension in the destination table.
open class DimensionMapping {
    Name: DimensionMappingName
    DimensionValueType: DimensionValueType
}

/// Configuration for when the scheduled query is executed.
open class ScheduleConfiguration {
    ScheduleExpression: ScheduleExpression
}

/// Value type of the measure value column to be read from the query result.
open class MultiMeasureAttributeMappingMeasureValueType {
}

/// A key-value pair to label the scheduled query.
open class Tag {
    Key: Key
    Value: Value
}

/// The AWS::Timestream::ScheduledQuery resource creates a Timestream Scheduled Query.
open class ScheduledQuery extends cloudformation.Resource {

    Type = "AWS::Timestream::ScheduledQuery"


    /// 
    hidden KmsKeyId: (KmsKeyId)?

    /// 
    hidden ScheduledQueryName: (ScheduledQueryName)?

    /// 
    hidden QueryString: QueryString

    /// 
    hidden ClientToken: (ClientToken)?

    /// 
    hidden TargetConfiguration: (TargetConfiguration)?

    /// 
    hidden Tags: (Tags)?

    /// 
    hidden NotificationConfiguration: NotificationConfiguration

    /// 
    hidden ScheduledQueryExecutionRoleArn: ScheduledQueryExecutionRoleArn

    /// 
    hidden ScheduleConfiguration: ScheduleConfiguration

    /// 
    hidden ErrorReportConfiguration: ErrorReportConfiguration

    Properties {
        ["KmsKeyId"] = if (KmsKeyId == null) null else KmsKeyId
        ["ScheduledQueryName"] = if (ScheduledQueryName == null) null else ScheduledQueryName
        ["QueryString"] = if (QueryString == null) null else QueryString
        ["ClientToken"] = if (ClientToken == null) null else ClientToken
        ["TargetConfiguration"] = if (TargetConfiguration == null) null else TargetConfiguration
        ["Tags"] = if (Tags == null) null else Tags
        ["NotificationConfiguration"] = if (NotificationConfiguration == null) null else NotificationConfiguration
        ["ScheduledQueryExecutionRoleArn"] = if (ScheduledQueryExecutionRoleArn == null) null else ScheduledQueryExecutionRoleArn
        ["ScheduleConfiguration"] = if (ScheduleConfiguration == null) null else ScheduleConfiguration
        ["ErrorReportConfiguration"] = if (ErrorReportConfiguration == null) null else ErrorReportConfiguration
    }

}
