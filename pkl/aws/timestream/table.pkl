/// AWS::Timestream::Table
///
/// Generated by rain build --pkl-class AWS::Timestream::Table
module aws.timestream.table

import "../../cloudformation.pkl"

/// You can use the Resource Tags property to apply tags to resources, which can help you identify and categorize those resources.
open class Tag {
    Key: (String|Mapping)?
    Value: (String|Mapping)?
}

/// A list of partition keys defining the attributes used to partition the table data. The order of the list determines the partition hierarchy. The name and type of each partition key as well as the partition key order cannot be changed after the table is created. However, the enforcement level of each partition key can be changed.
open class PartitionKeyList {
}

/// An attribute used in partitioning data in a table. There are two types of partition keys: dimension keys and measure keys. A dimension key partitions data on a dimension name, while a measure key partitions data on the measure name.
open class PartitionKey {
    Type: PartitionKeyType
    Name: (SchemaName)?
    EnforcementInRecord: (PartitionKeyEnforcementLevel)?
}

/// The type of the partition key. Options are DIMENSION (dimension key) and MEASURE (measure key).
open class PartitionKeyType {
}

/// The name of the attribute used for a dimension key.
open class SchemaName {
}

/// The level of enforcement for the specification of a dimension key in ingested records. Options are REQUIRED (dimension key must be specified) and OPTIONAL (dimension key does not have to be specified).
open class PartitionKeyEnforcementLevel {
}

/// The AWS::Timestream::Table resource creates a Timestream Table.
open class Table extends cloudformation.Resource {

    Type = "AWS::Timestream::Table"


    /// The properties that determine whether magnetic store writes are enabled.
    hidden MagneticStoreWriteProperties: (Dynamic)?

    /// An array of key-value pairs to apply to this resource.
    hidden Tags: (Listing<Tag>)?

    /// The name for the database which the table to be created belongs to.
    hidden DatabaseName: String(matches(Regex(#"^[a-zA-Z0-9_.-]{3,256}$"#)))|Mapping

    /// The name for the table. If you don't specify a name, AWS CloudFormation generates a unique physical ID and uses that ID for the table name.
    hidden TableName: (String(matches(Regex(#"^[a-zA-Z0-9_.-]{3,256}$"#)))|Mapping)?

    /// The retention duration of the memory store and the magnetic store.
    hidden RetentionProperties: (Dynamic)?

    /// A Schema specifies the expected data model of the table.
    hidden Schema: (Dynamic)?

    Properties {
        ["MagneticStoreWriteProperties"] = if (MagneticStoreWriteProperties == null) null else MagneticStoreWriteProperties
        ["Tags"] = if (Tags == null) null else Tags
        ["DatabaseName"] = if (DatabaseName == null) null else DatabaseName
        ["TableName"] = if (TableName == null) null else TableName
        ["RetentionProperties"] = if (RetentionProperties == null) null else RetentionProperties
        ["Schema"] = if (Schema == null) null else Schema
    }

}
