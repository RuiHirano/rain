/// AWS::Transfer::Server
///
/// Generated by rain build --pkl-class AWS::Transfer::Server
module aws.transfer.server

import "../../cloudformation.pkl"

/// 
open class ProtocolDetails {
    TlsSessionResumptionMode: (String|Mapping)?
    As2Transports: (Listing<As2Transport>)?
    PassiveIp: (String|Mapping)?
    SetStatOption: (String|Mapping)?
}

/// 
open class S3StorageOptions {
    DirectoryListingOptimization: (String|Mapping)?
}

/// 
open class WorkflowDetails {
    OnPartialUpload: (Listing<WorkflowDetail>)?
    OnUpload: (Listing<WorkflowDetail>)?
}

/// 
open class Tag {
    Value: String|Mapping
    Key: String|Mapping
}

/// 
open class Protocol {
}

/// 
open class As2Transport {
}

/// 
open class StructuredLogDestination {
}

/// 
open class IdentityProviderDetails {
    Function: (String|Mapping)?
    DirectoryId: (String|Mapping)?
    Url: (String|Mapping)?
    InvocationRole: (String|Mapping)?
    SftpAuthenticationMethods: (String|Mapping)?
}

/// 
open class WorkflowDetail {
    WorkflowId: String|Mapping
    ExecutionRole: String|Mapping
}

/// 
open class EndpointDetails {
    SecurityGroupIds: (Listing<String|Mapping>)?
    SubnetIds: (Listing<String|Mapping>)?
    AddressAllocationIds: (Listing<String|Mapping>)?
    VpcId: (String|Mapping)?
    VpcEndpointId: (String|Mapping)?
}

/// Resource Type definition for AWS::Transfer::Server
open class Server extends cloudformation.Resource {

    Type = "AWS::Transfer::Server"


    /// 
    hidden EndpointDetails: (EndpointDetails)?

    /// 
    hidden StructuredLogDestinations: (Listing<StructuredLogDestination>)?

    /// 
    hidden PreAuthenticationLoginBanner: (String|Mapping)?

    /// 
    hidden EndpointType: (String|Mapping)?

    /// 
    hidden SecurityPolicyName: (String|Mapping)?

    /// 
    hidden S3StorageOptions: (S3StorageOptions)?

    /// 
    hidden Protocols: (Listing<Protocol>)?

    /// 
    hidden ProtocolDetails: (ProtocolDetails)?

    /// 
    hidden Certificate: (String|Mapping)?

    /// 
    hidden IdentityProviderDetails: (IdentityProviderDetails)?

    /// 
    hidden PostAuthenticationLoginBanner: (String|Mapping)?

    /// 
    hidden Domain: (String|Mapping)?

    /// 
    hidden WorkflowDetails: (WorkflowDetails)?

    /// 
    hidden IdentityProviderType: (String|Mapping)?

    /// 
    hidden Tags: (Listing<Tag>)?

    /// 
    hidden LoggingRole: (String|Mapping)?

    Properties {
        ["EndpointDetails"] = if (EndpointDetails == null) null else EndpointDetails
        ["StructuredLogDestinations"] = if (StructuredLogDestinations == null) null else StructuredLogDestinations
        ["PreAuthenticationLoginBanner"] = if (PreAuthenticationLoginBanner == null) null else PreAuthenticationLoginBanner
        ["EndpointType"] = if (EndpointType == null) null else EndpointType
        ["SecurityPolicyName"] = if (SecurityPolicyName == null) null else SecurityPolicyName
        ["S3StorageOptions"] = if (S3StorageOptions == null) null else S3StorageOptions
        ["Protocols"] = if (Protocols == null) null else Protocols
        ["ProtocolDetails"] = if (ProtocolDetails == null) null else ProtocolDetails
        ["Certificate"] = if (Certificate == null) null else Certificate
        ["IdentityProviderDetails"] = if (IdentityProviderDetails == null) null else IdentityProviderDetails
        ["PostAuthenticationLoginBanner"] = if (PostAuthenticationLoginBanner == null) null else PostAuthenticationLoginBanner
        ["Domain"] = if (Domain == null) null else Domain
        ["WorkflowDetails"] = if (WorkflowDetails == null) null else WorkflowDetails
        ["IdentityProviderType"] = if (IdentityProviderType == null) null else IdentityProviderType
        ["Tags"] = if (Tags == null) null else Tags
        ["LoggingRole"] = if (LoggingRole == null) null else LoggingRole
    }

}
