/// AWS::VerifiedPermissions::IdentitySource
///
/// Generated by rain build --pkl-class AWS::VerifiedPermissions::IdentitySource
module aws.verifiedpermissions.identitysource

import "../../cloudformation.pkl"

typealias IdentitySourceOpenIdIssuer = String|Mapping


/// 
open class IdentitySourceCognitoUserPoolConfiguration {
    UserPoolArn: String(matches(Regex(#"^arn:[a-zA-Z0-9-]+:cognito-idp:(([a-zA-Z0-9-]+:\d{12}:userpool/[\w-]+_[0-9a-zA-Z]+))$"#)))|Mapping
    ClientIds: (Listing<String|Mapping>)?
}

/// 
open class IdentitySourceIdentitySourceConfiguration {
    CognitoUserPoolConfiguration: IdentitySourceCognitoUserPoolConfiguration
}

/// 
open class IdentitySourceIdentitySourceDetails {
    OpenIdIssuer: (IdentitySourceOpenIdIssuer)?
    ClientIds: (Listing<String|Mapping>)?
    UserPoolArn: (String(matches(Regex(#"^arn:[a-zA-Z0-9-]+:cognito-idp:(([a-zA-Z0-9-]+:\d{12}:userpool/[\w-]+_[0-9a-zA-Z]+))$"#)))|Mapping)?
    DiscoveryUrl: (String(matches(Regex(#"^https://.*$"#)))|Mapping)?
}

/// Definition of AWS::VerifiedPermissions::IdentitySource Resource Type
open class IdentitySource extends cloudformation.Resource {

    Type = "AWS::VerifiedPermissions::IdentitySource"


    /// 
    hidden PolicyStoreId: String(matches(Regex(#"^[a-zA-Z0-9-]*$"#)))|Mapping

    /// 
    hidden PrincipalEntityType: (String(matches(Regex(#"^.*$"#)))|Mapping)?

    /// 
    hidden Configuration: IdentitySourceIdentitySourceConfiguration

    Properties {
        ["PolicyStoreId"] = if (PolicyStoreId == null) null else PolicyStoreId
        ["PrincipalEntityType"] = if (PrincipalEntityType == null) null else PrincipalEntityType
        ["Configuration"] = if (Configuration == null) null else Configuration
    }

}
