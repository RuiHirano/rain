/// AWS::VpcLattice::Rule
///
/// Generated by rain build --pkl-class AWS::VpcLattice::Rule
module aws.vpclattice.rule

import "../../cloudformation.pkl"

/// 
open class RuleForward {
    TargetGroups: Listing<RuleWeightedTargetGroup>
}

/// 
open class RuleHeaderMatch {
    Name: String|Mapping
    Match: RuleHeaderMatchType
    CaseSensitive: (Boolean|Mapping)?
}

/// 
open class RuleHeaderMatchType {
    Exact: (String|Mapping)?
    Prefix: (String|Mapping)?
    Contains: (String|Mapping)?
}

/// 
open class RuleMatch {
    HttpMatch: RuleHttpMatch
}

/// 
open class RuleWeightedTargetGroup {
    TargetGroupIdentifier: String(matches(Regex(#"^((tg-[0-9a-z]{17})|(arn:[a-z0-9\-]+:vpc-lattice:[a-zA-Z0-9\-]+:\d{12}:targetgroup/tg-[0-9a-z]{17}))$"#)))|Mapping
    Weight: (Int|Mapping)?
}

/// 
open class RuleTag {
    Key: String|Mapping
    Value: String|Mapping
}

typealias HttpMatchMethod = "CONNECT"|"DELETE"|"GET"|"HEAD"|"OPTIONS"|"POST"|"PUT"|"TRACE"

/// 
open class RuleHttpMatch {
    PathMatch: (RulePathMatch)?
    HeaderMatches: (Listing<RuleHeaderMatch>)?
    Method: (HttpMatchMethod|Mapping)?
}

/// 
open class RulePathMatchType {
    Exact: (String(matches(Regex(#"^\/[a-zA-Z0-9@:%_+.~#?&\/=-]*$"#)))|Mapping)?
    Prefix: (String(matches(Regex(#"^\/[a-zA-Z0-9@:%_+.~#?&\/=-]*$"#)))|Mapping)?
}

/// 
open class RuleFixedResponse {
    StatusCode: Int|Mapping
}

/// 
open class RulePathMatch {
    Match: RulePathMatchType
    CaseSensitive: (Boolean|Mapping)?
}

/// 
open class RuleAction {
    Forward: (RuleForward)?
    FixedResponse: (RuleFixedResponse)?
}

/// Creates a listener rule. Each listener has a default rule for checking connection requests, but you can define additional rules. Each rule consists of a priority, one or more actions, and one or more conditions.
open class Rule extends cloudformation.Resource {

    Type = "AWS::VpcLattice::Rule"


    /// 
    hidden ListenerIdentifier: (String(matches(Regex(#"^((listener-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:service/svc-[0-9a-z]{17}/listener/listener-[0-9a-z]{17}))$"#)))|Mapping)?

    /// 
    hidden Match: RuleMatch

    /// 
    hidden Tags: (Listing<RuleTag>)?

    /// 
    hidden Action: RuleAction

    /// 
    hidden Name: (String(matches(Regex(#"^(?!rule-)(?![-])(?!.*[-]$)(?!.*[-]{2})[a-z0-9-]+$"#)))|Mapping)?

    /// 
    hidden Priority: Int|Mapping

    /// 
    hidden ServiceIdentifier: (String(matches(Regex(#"^((svc-[0-9a-z]{17})|(arn(:[a-z0-9]+([.-][a-z0-9]+)*){2}(:([a-z0-9]+([.-][a-z0-9]+)*)?){2}:service/svc-[0-9a-z]{17}))$"#)))|Mapping)?

    Properties {
        ["ListenerIdentifier"] = if (ListenerIdentifier == null) null else ListenerIdentifier
        ["Match"] = if (Match == null) null else Match
        ["Tags"] = if (Tags == null) null else Tags
        ["Action"] = if (Action == null) null else Action
        ["Name"] = if (Name == null) null else Name
        ["Priority"] = if (Priority == null) null else Priority
        ["ServiceIdentifier"] = if (ServiceIdentifier == null) null else ServiceIdentifier
    }

}
