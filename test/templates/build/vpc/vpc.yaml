Description: |
  This template creates a VPC, two public and two private subnets

Resources:
  NetworkInternetGateway:
    Type: AWS::EC2::InternetGateway

  NetworkPrivateSubnet1DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NetworkPublicSubnet1NATGateway
      RouteTableId: !Ref NetworkPrivateSubnet1RouteTable

  NetworkPrivateSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NetworkVPC

  NetworkPrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NetworkPrivateSubnet1RouteTable
      SubnetId: !Ref NetworkPrivateSubnet1Subnet

  NetworkPrivateSubnet1Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: 10.0.128.0/18
      MapPublicIpOnLaunch: false
      VpcId: !Ref NetworkVPC

  NetworkPrivateSubnet2DefaultRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NetworkPublicSubnet2NATGateway
      RouteTableId: !Ref NetworkPrivateSubnet2RouteTable

  NetworkPrivateSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NetworkVPC

  NetworkPrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NetworkPrivateSubnet2RouteTable
      SubnetId: !Ref NetworkPrivateSubnet2Subnet

  NetworkPrivateSubnet2Subnet:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: 10.0.192.0/18
      MapPublicIpOnLaunch: false
      VpcId: !Ref NetworkVPC

  NetworkPublicSubnet1:
    Type: AWS::EC2::Subnet
    Metadata:
      guard:
        SuppressedRules:
          - SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: 10.0.0.0/18
      MapPublicIpOnLaunch: true
      VpcId: !Ref NetworkVPC

  NetworkPublicSubnet1DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - NetworkVPCGW
    Metadata:
      guard:
        SuppressedRules:
          - NO_UNRESTRICTED_ROUTE_TO_IGW
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NetworkInternetGateway
      RouteTableId: !Ref NetworkPublicSubnet1RouteTable

  NetworkPublicSubnet1EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NetworkPublicSubnet1NATGateway:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - NetworkPublicSubnet1DefaultRoute
      - NetworkPublicSubnet1RouteTableAssociation
    Properties:
      AllocationId: !GetAtt NetworkPublicSubnet1EIP.AllocationId
      SubnetId: !Ref NetworkPublicSubnet1

  NetworkPublicSubnet1RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NetworkVPC

  NetworkPublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NetworkPublicSubnet1RouteTable
      SubnetId: !Ref NetworkPublicSubnet1

  NetworkPublicSubnet2:
    Type: AWS::EC2::Subnet
    Metadata:
      guard:
        SuppressedRules:
          - SUBNET_AUTO_ASSIGN_PUBLIC_IP_DISABLED
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
          Ref: AWS::Region
      CidrBlock: 10.0.64.0/18
      MapPublicIpOnLaunch: true
      VpcId: !Ref NetworkVPC

  NetworkPublicSubnet2DefaultRoute:
    Type: AWS::EC2::Route
    DependsOn:
      - NetworkVPCGW
    Metadata:
      guard:
        SuppressedRules:
          - NO_UNRESTRICTED_ROUTE_TO_IGW
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref NetworkInternetGateway
      RouteTableId: !Ref NetworkPublicSubnet2RouteTable

  NetworkPublicSubnet2EIP:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  NetworkPublicSubnet2NATGateway:
    Type: AWS::EC2::NatGateway
    DependsOn:
      - NetworkPublicSubnet2DefaultRoute
      - NetworkPublicSubnet2RouteTableAssociation
    Properties:
      AllocationId: !GetAtt NetworkPublicSubnet2EIP.AllocationId
      SubnetId: !Ref NetworkPublicSubnet2

  NetworkPublicSubnet2RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref NetworkVPC

  NetworkPublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref NetworkPublicSubnet2RouteTable
      SubnetId: !Ref NetworkPublicSubnet2

  NetworkVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsHostnames: true
      EnableDnsSupport: true
      InstanceTenancy: default

  NetworkVPCGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref NetworkInternetGateway
      VpcId: !Ref NetworkVPC
